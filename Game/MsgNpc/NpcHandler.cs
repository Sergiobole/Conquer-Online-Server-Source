using COServer.Game.MsgServer;
using System;
using System.Collections.Generic;
using System.Linq;
using static COServer.Bots.Enumerator;
using static COServer.Game.MsgServer.MsgMessage;
using COServer.EventsLib;
using static COServer.EventsLib.BaseEvent;
using COServer.Game.MsgTournaments;
using COServer.Database;

namespace COServer.Game.MsgNpc
{
    public unsafe class NpcHandler
    {
        #region test
        [NpcAttribute(NpcID.test)]
        public static void test(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("You may enter the Frozen Grotto for 100,000 gold.")
                            .AddOption("Let me in!", 1)
                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100000)
                        {
                            client.Player.Money -= 100000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(367, 619, 1762); break;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100,000 gold.")
                         .AddOption("Sorry.", 255).AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        #endregion
        #region EggQuest
        [NpcAttribute(NpcID.EggQuest)]
        private static void EggQuest(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello " + client.Player.Name + " i can exchange your egg for random stone\nGo and collect egg from monster and come again to get your prize !")
                        .AddOption("I~have~collecte~Eggs.", 1)
                        .AddOption("Just passing by.")
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Hello " + client.Player.Name + " i need from you 3 differrent egg to get your prize \nAre you have [ YellowEgg, GreenEgg, WhiteEgg ] ?")
                         .AddOption("Yes~I~have.", 2)
                         .AddOption("Just passing by.")
                         .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.Contain(720004, 1))
                        {
                            client.CreateBoxDialog("Sorry, you do not have YellowEgg");
                            break;
                        }
                        else if (!client.Inventory.Contain(720005, 1))
                        {
                            client.CreateBoxDialog("Sorry, you do not have GreenEgg");
                            break;
                        }
                        else if (!client.Inventory.Contain(720006, 1))
                        {
                            client.CreateBoxDialog("Sorry, you do not have WhiteEgg");
                            break;
                        }
                        else
                        {
                            if (client.Inventory.Contain(720004, 1) && client.Inventory.Contain(720005, 1) && client.Inventory.Contain(720006, 1))
                            {
                                client.Inventory.Remove(720004, 1, stream);
                                client.Inventory.Remove(720005, 1, stream);
                                client.Inventory.Remove(720006, 1, stream);
                                switch (Program.GetRandom.Next(1, 8))
                                {
                                    case 1:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_1, 1);
                                            break;
                                        }
                                    case 2:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_2, 1);
                                            break;
                                        }
                                    case 3:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_3, 1);
                                            break;
                                        }
                                    case 4:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_4, 1);
                                            break;
                                        }
                                    case 5:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_5, 1);
                                            break;
                                        }
                                    case 6:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_6, 1);
                                            break;
                                        }
                                    case 7:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_7, 1);
                                            break;
                                        }
                                    case 8:
                                        {
                                            client.Inventory.Add(stream, ItemType.Stone_8, 1);
                                            break;
                                        }
                                }
                                //if (Role.Core.Rate(0.25))
                                //    client.Inventory.Add(stream, ItemType.Stone_1, 1);
                                //else if (Role.Core.Rate(0.15))
                                //    client.Inventory.Add(stream, ItemType.Stone_2, 1);
                                //else if (Role.Core.Rate(0.05))
                                //    client.Inventory.Add(stream, ItemType.Stone_3, 1);
                                //else if (Role.Core.Rate(0.015))
                                //    client.Inventory.Add(stream, ItemType.Stone_4, 1);
                                //else if (Role.Core.Rate(0.0015))
                                //    client.Inventory.Add(stream, ItemType.Stone_5, 1);
                                //else if (Role.Core.Rate(0.0005))
                                //    client.Inventory.Add(stream, ItemType.Stone_6, 1);
                                //else if (Role.Core.Rate(0.00025))
                                //    client.Inventory.Add(stream, ItemType.Stone_7, 1);
                                //else if (Role.Core.Rate(0.00005))
                                //    client.Inventory.Add(stream, ItemType.Stone_8, 1);
                                //else
                                //    client.Inventory.Add(stream, ItemType.Stone_1, 1);
                            }
                            else
                            {
                                client.CreateBoxDialog("Sorry, you do not have all Egg");
                                break;
                            }
                        }
                        break;
                    }
            }
        }
        #endregion
        #region ArenaDuel
        #region Join
        [NpcAttribute(NpcID.ArenaDuel)]
        public static void ArenaDuel(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + " \n ArenaDuel 100 hit For Every Hours \n")
                            .AddText("Working in the minute [Xx:31] To [Xx:40] \n Rewards [100,000 Gold]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!Game.MsgTournaments.MsgSchedules._ArenaDuel.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [Xx:31] To [Xx:40].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.ArenaDuelOut)]
        public static void ArenaDuelOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , i can telport you to Tc")
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region OnlinePoint
        [NpcAttribute(NpcID.OnlinePointsReward)]
        public static void OnlinePointsReward(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("How could i help you about the OnlinePoint system?\n You have [ " + client.Player.OnlinePoints + " ] online points.")
                        .AddOption("Exchange a new garment", 1)
                        .AddOption("HouseToken", 20)
                        .AddOption("Just passing by.", 255)
                        .AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            dialog.AddText("Please make 1 more space in your inventory.");
                            dialog.AddOption("Let me check.", 255).AddAvatar(7);
                            dialog.FinalizeDialog();
                            break;
                        }
                        dialog.AddText("Which garment you need?\nGarment Cost : 30000 Online points.\nYour current online points [ " + client.Player.OnlinePoints + " ].");
                        byte page = Option;
                        int tocount = (int)Math.Min(Database.ItemType.TopGarments.Count, (page * 7));
                        for (int x = page - 1; x < tocount; x++)
                        {
                            var garment = Database.ItemType.TopGarments[x];
                            Database.ItemType.DBItem DBInfo;
                            if (Database.ItemType.Garments.TryGetValue(garment, out DBInfo))
                            {
                                dialog.AddOption("" + DBInfo.Name + "", (byte)(100 + x));
                            }

                        }
                        dialog.AddOption("Next Page", (byte)(page + 1));
                        dialog.AddAvatar(3);
                        dialog.FinalizeDialog();
                        break;
                    }
                #region House Token
                case 20:
                    {
                        dialog.AddText("Which house token you need?\n Your current online points [ " + client.Player.OnlinePoints + " ].")
                        .AddOption("House 2 20k", 21)
                        .AddOption("House 3 30k", 22)
                        .AddOption("House 4 40k", 23)
                        .AddOption("House 5 50k", 24)
                        .AddOption("Just passing by.", 255)
                        .AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 21://House 2 20k
                case 22://House 3 30k
                case 23://House 4 40k
                case 24://House 5 50k
                    {
                        uint UpgradeCert_Id = 0;
                        uint cost = 0;
                        if (Option == 21)
                        {
                            UpgradeCert_Id = Database.ItemType.UpgradeCert_2;
                            cost = 20000;
                        }
                        else if (Option == 22)
                        {
                            UpgradeCert_Id = Database.ItemType.UpgradeCert_3;
                            cost = 30000;
                        }
                        else if (Option == 23)
                        {
                            UpgradeCert_Id = Database.ItemType.UpgradeCert_4;
                            cost = 40000;
                        }
                        else
                        {
                            UpgradeCert_Id = Database.ItemType.UpgradeCert_5;
                            cost = 50000;
                        }
                        if (client.Player.OnlinePoints >= cost)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.OnlinePoints -= cost;
                                client.Inventory.Add(stream, UpgradeCert_Id, 1);

                            }
                            else
                            {
                                dialog.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(3).FinalizeDialog();
                                break;
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, but you don`t have enough Online Points.")
                                  .AddOption("Oh, okay.", 255)
                                  .AddAvatar(3).FinalizeDialog();
                            break;
                        }
                        break;
                    }
                #endregion
                default:
                    {
                        if (Option < 100)
                        {
                            dialog.AddText("Which Garment you need? \n Page [ " + Option + " ].");
                            byte page = Option;
                            int tocount = (int)Math.Min(Database.ItemType.TopGarments.Count, (page * 7));
                            for (int x = (page - 1) * 7; x < tocount; x++)
                            {
                                var garment = Database.ItemType.TopGarments[x];
                                Database.ItemType.DBItem DBInfo;
                                if (Database.ItemType.Garments.TryGetValue(garment, out DBInfo))
                                {
                                    dialog.AddOption("" + DBInfo.Name + "", (byte)(100 + x));
                                }
                            }
                            if (page < 9)
                                dialog.AddOption("Next Page", (byte)(page + 1));
                            dialog.AddAvatar(7);
                            dialog.FinalizeDialog();
                        }
                        else //get garment.
                        {
                            client.Player.BuyItemS = Database.ItemType.TopGarments[Option - 100];
                            Database.ItemType.DBItem DBInfo;
                            if (Database.ItemType.Garments.TryGetValue(client.Player.BuyItemS, out DBInfo))
                            {
                                dialog.AddText("Are you sure you wanna buy this Garment (" + DBInfo.Name + ")?!");
                                dialog.AddOption("Sure.", 250);
                                dialog.AddOption("Let me check.", 255);
                                dialog.AddAvatar(7);
                                dialog.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 250:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            dialog.AddText("Please make 1 more space in your inventory.");
                            dialog.AddOption("Let me check.", 255);
                            dialog.AddAvatar(7);
                            dialog.FinalizeDialog();
                            break;
                        }
                        if (client.Player.BuyItemS != 0)
                        {

                            client.Inventory.Add(stream, client.Player.BuyItemS, 1, 0, 1);
                            Database.ItemType.DBItem DBInfo;
                            if (Database.ItemType.Garments.TryGetValue(client.Player.BuyItemS, out DBInfo))
                                client.CreateBoxDialog("You received 1 " + DBInfo.Name + "");
                            client.Player.BuyItemS = 0;

                        }
                        break;
                    }
            }
        }
        #endregion
        #region Events
        #region Tops
        #region Ss_Fb
        #region Join
        [NpcAttribute(NpcID.Ss_Fb)]
        public static void Ss_Fb(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + " \n Top Ss/Fb For Every Hours \n")
                            .AddText("Working in the minute [Xx:41] To [Xx:50] \n Rewards [ Db Scroll ] [Top Ss/Fb]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._Ss_Fb.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [Xx:41] To [Xx:50].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Out
        [NpcAttribute(NpcID.Ss_Fb_Out)]
        public static void Ss_Fb_Out(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello ,i can teleport you to Tc.")
                            .AddOption("Teleport~to~Twin~City.", 1)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 2)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region Top_Conquer
        #region Join
        [NpcAttribute(NpcID.ConquerPkJoin)]
        public static void ConquerPkJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nWe Have Top Conquer For All Classes Every day\n")
                            .AddText("Working From [5:00] To [5:9] AM \nThe Winner Get [ Top Conquer and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._ConquerPk.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [5:00] To [5:09] AM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.ConquerPkWinner)]
        public static void ConquerPkWinner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules._ConquerPk.IsFinished())
                        {
                            if (MsgSchedules._ConquerPk.TheLastPlayer())
                            {
                                MsgSchedules._ConquerPk.GiveReward(client, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, other players are still alive.")
                                    .AddOption("Ah ok", 255)
                                    .AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war end at [5:09].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region Top_FirstKiller
        #region Join
        [NpcAttribute(NpcID.FirstKillerJoin)]
        public static void FirstKillerJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nTop FirstKiller For All Classes Every Day\n")
                            .AddText("Working From [5:00] To [5:09] PM \nThe Winner Get [ Top FirstKiller and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._FirstKiller.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [5:00] To [5:09] PM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.FirstKillerWinner)]
        public static void FirstKillerWinner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules._FirstKiller.IsFinished())
                        {
                            if (MsgSchedules._FirstKiller.TheLastPlayer())
                            {
                                MsgSchedules._FirstKiller.GiveReward(client, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, other players are still alive.")
                                    .AddOption("Ah ok", 255)
                                    .AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war end at [5:09].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region LastMan
        #region Join
        [NpcAttribute(NpcID.LastManJoin)]
        public static void LastManJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nWe Have Top LastMan War For All Classes Every Hour\n")
                            .AddText("Working From [Xx:30] To [Xx:35] \nThe Winner Get [ Top LastMan and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._LastMan.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [Xx:30] To [Xx:35].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.LastManWinner)]
        public static void LastManWinner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules._LastMan.IsFinished())
                        {
                            if (MsgSchedules._LastMan.TheLastPlayer())
                            {
                                MsgSchedules._LastMan.GiveReward(client, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, other players are still alive.")
                                    .AddOption("Ah ok", 255)
                                    .AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war end at [Xx:35].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region Top_Black
        #region Join
        [NpcAttribute(NpcID.Top_BlackJoin)]
        public static void Top_BlackJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nWe Have Top Black For All Classes Every Day\n")
                            .AddText("Working From [11:00] To [11:09] AM \nThe Winner Get [ Top Black and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._Top_Black.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [11:00] To [Xx:09] AM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.Top_BlackWinner)]
        public static void Top_BlackWinner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules._Top_Black.IsFinished())
                        {
                            if (MsgSchedules._Top_Black.TheLastPlayer())
                            {
                                MsgSchedules._Top_Black.GiveReward(client, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, other players are still alive.")
                                    .AddOption("Ah ok", 255)
                                    .AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war end at [11:09].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region LuckyBox
        #region Join
        [NpcAttribute(NpcID.LuckyBoxJoin)]
        public static void LuckyBoxJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + " \n Top Ss/Fb For Every Hours \n")
                            .AddText("Working in the minute [Xx:21] To [Xx:30] \n Rewards [10,000 Cps] [LastMan]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._ConquerPk.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [Xx:21] To [Xx:30].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.LuckyBoxOut)]
        public static void LuckyBoxOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , Do you want to go to Tc?")
                            .AddOption("Yes~Teleport~to~Twin~City.", 1)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region Get5Out
        #region Join
        [NpcAttribute(NpcID.Get5OutJoin)]
        public static void Get5OutJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + " \nWe Have Top Five(n)out For Every Day.\n")
                            .AddText("Working From [2:00] To [2:09] AM and From [2:00] To [2:09] PM.\nThe Winner Get [ Top Five(n)out and 1,000,000 Silver ]\n")
                            .AddText("                      Top Rules\n1- After you enter top you will get 5 Points.\n2- If you die you will lose 1 point.\n3- if you lose all 5 point you will be sent to Tc.\n")
                            .AddText("4- Last player alive can talk to npc inside map and cliam prize.")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        if (!MsgSchedules._Get5Out.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [2:09] To [2:09] AM Or at [2:09] To [2:09]PM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Out
        [NpcAttribute(NpcID.Get5OutWinner)]
        public static void Get5OutWinner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules._Get5Out.IsFinished())
                        {
                            if (MsgSchedules._Get5Out.TheLastPlayer())
                            {
                                MsgSchedules._Get5Out.GiveReward(client, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, other players are still alive.")
                                    .AddOption("Ah ok", 255)
                                    .AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war end at [Xx:20].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region NobilityWar
        #region Join
        [NpcAttribute(NpcID.NobilityWarJoin)]
        public static void NobilityWarJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + " \n Top NobilityWar For Every Hours \n")
                            .AddText("Working in the minute [Xx:31] To [Xx:40] \n Rewards [10,000 Cps] [NobilityWar]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._NobilityWar.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [Xx:31] To [Xx:40].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.NobilityWarWinner)]
        public static void NobilityWarWinner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Map == NobilityWar.King_Map)
                        {
                            data.AddText("Hello " + client.Player.Name + " , you're the last player alive?");
                            data.AddOption("Yes", 1);
                        }
                        else
                        {
                            data.AddText("Hello " + client.Player.Name + ", if you're the last player alive you can choose between?");
                            if (client.Player.Map == NobilityWar.Earl_Map)
                            {
                                data.AddOption("Claim Prize", 1);
                                data.AddOption("Face Duke", 2);
                            }
                            if (client.Player.Map == NobilityWar.Duke_Map)
                            {
                                data.AddOption("Claim Prize", 1);
                                data.AddOption("Face Prince", 2);
                            }
                            if (client.Player.Map == NobilityWar.Prince_Map)
                            {
                                data.AddOption("Claim Prize", 1);
                                data.AddOption("Face Prince", 2);
                            }
                        }
                        data.AddOption("Teleport~to~Twin~City.", 3);
                        data.AddOption("Ah. wait", 255);
                        data.AddAvatar(154);
                        data.FinalizeDialog();
                        break;
                    }
                #region Prize
                case 1:
                    {
                        if (MsgSchedules._NobilityWar.IsFinished())
                        {
                            MsgSchedules._NobilityWar.GiveReward(client, stream);
                        }
                        else
                        {
                            data.AddText("Sorry, the war end at [Xx:40].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Next Map
                case 2:
                    {
                        if (!MsgSchedules._NobilityWar.NextMap(client, stream))
                        {
                            data.AddText("Come back in the right time at [Xx:31] To [Xx:40].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Out Tc
                case 3:
                    {
                        data.AddText("You want to teleport back to TwinCity? Are you sure?")
                            .AddOption("Yes", 4)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        client.Player.SetPkMode(Role.Flags.PKMode.Capture);
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
                    #endregion
            }
        }
        #endregion
        #endregion
        #region GenderWar
        #region Join
        [NpcAttribute(NpcID.GenderWarJoin)]
        public static void GenderWarJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nWe Have Top GenderWar For All Classes Every Day\n")
                            .AddText("Working From [11:00] To [11:9] PM \nThe Winner Get [ Top Gender and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._GenderWar.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [11:00] To [11:09] PM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Winner
        [NpcAttribute(NpcID.GenderWarWinner)]
        public static void GenderWarWinner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , you're the last player alive?")
                            .AddOption("Yes", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules._GenderWar.IsFinished())
                        {
                            MsgSchedules._GenderWar.GiveReward(client, stream);
                        }
                        else
                        {
                            data.AddText("Sorry, the war end at [Xx:40].")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #endregion
        #region Poles
        #region EliteGuildWar
        #region Join
        [NpcAttribute(NpcID.EliteGuildWarJoin)]
        public static void EliteGuildWarJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nWe Have Top Conquer For All Classes Every day\n")
                            .AddText("Working From [5:00] To [5:9] AM \nThe Winner Get [ Top Conquer and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._EliteGuildWar.IsFinished())
                        {
                            client.Teleport(150, 100, 160);
                        }
                        else
                        {
                            data.AddText("Come back in the right time at [5:00] To [5:09] AM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Out
        [NpcAttribute(NpcID.EliteGuildWarOut)]
        public static void EliteGuildWarOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , do you want to teleport to twincity?")
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region FirePole
        #region Join
        [NpcAttribute(NpcID.FirePoleJoin)]
        public static void FirePoleJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nWe Have Fire Stone For All Classes Every day\n")
                            .AddText("Working From [6:35] To [6:50] AM and PM \nThe Winner Get [ Top Fire Pole and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("Event Rules", 2)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._FirePoleWar.AllowJoin(client, stream))
                        {
                            data.AddText("Come back in the right time at [6:35] To [6:50] AM and PM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("1- Only one guild will win\n2- Only the participent who will claim rewards.\n")
                            .AddText("3- All will be going on as i will say, Fire pole is at (96,83)\n4-The first guild which")
                            .AddText(" dominate it will survive a firegaint.\n5- After firegaint spawened signing up will be closed\n")
                            .AddText("6- Reviving by waters is enabled there")
                            .AddOption("I got. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
            }
        }
        #endregion
        #region Out
        [NpcAttribute(NpcID.FirePoleOut)]
        public static void FirePoleOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , do you want to teleport to twincity?")
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region ExtremeFlag
        #region Join
        [NpcAttribute(NpcID.ExtremeFlagJoin)]
        public static void ExtremeFlagJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome [ " + client.Player.Name + " ] \nWe Have Top Conquer For All Classes Every day\n")
                            .AddText("Working From [5:00] To [5:9] AM \nThe Winner Get [ Top Conquer and 100,000 Silver ]")
                            .AddOption("Okey ,Enter Me.", 1)
                            .AddOption("I will come later. ", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!MsgSchedules._ExtremeFlagWar.IsFinished())
                        {
                            client.Teleport(150, 100, 160);
                        }
                        else
                        {
                            data.AddText("Come back in the right time at [5:00] To [5:09] AM.")
                                .AddOption("I see. ", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Out
        [NpcAttribute(NpcID.ExtremeFlagOut)]
        public static void ExtremeFlagOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello , do you want to teleport to twincity?")
                            .AddOption("Teleport~to~Twin~City.", 2)
                            .AddOption("Ah. wait", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
                            .AddOption("Yes", 3)
                            .AddOption("Ah no.", 255)
                            .AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Player.HitPoints = (int)client.Status.MaxHitpoints;
                        client.Teleport(428, 378, 1002, 0);
                        break;
                    }
            }
        }
        #endregion
        #endregion
        #region Pole Domintion # CoMMando Abdallah #
        [NpcAttribute(NpcID.PoleDomination)]
        public static void PoleDomination(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + " Welcome to the Great Pole Domination.\n")
                        .AddText("You Will fight Evreyday from 10.00PM to 10:54PM,expet Friday and Sunday.\n")
                        .AddText("Would you like to give me a chance to thrust you into hell.\n")
                        .AddText("PoleWarName\tCourrentStatue\tPoleOwnerGuild.\n")

                        .AddText("PoleWarName\tCourrentStatue\tPoleOwnerGuild.\n");

                        #region ApePoleCity
                        if (!MsgSchedules.PoleDomination.IsFinished())
                        {
                            data.AddText("ApePoleCity          [ Active ]             [ " + MsgSchedules.PoleDomination.Winner.Name + " ].\n");
                        }
                        if (MsgSchedules.PoleDomination.IsFinished())
                        {
                            data.AddText("ApePoleCity          [ Not_Active ]         [ " + MsgSchedules.PoleDomination.Winner.Name + " ].\n");
                        }
                        #endregion
                        #region BirdPoleCity
                        if (!MsgSchedules.PoleDominationBI.IsFinished())
                        {
                            data.AddText("BirdPoleCity          [ Active ]             [ " + MsgSchedules.PoleDominationBI.Winner.Name + " ].\n");
                        }
                        if (MsgSchedules.PoleDominationBI.IsFinished())
                        {
                            data.AddText("BirdPoleCity          [ Not_Active ]         [ " + MsgSchedules.PoleDominationBI.Winner.Name + " ].\n");
                        }
                        #endregion
                        #region PhoenixPoleCastle
                        if (!MsgSchedules.PoleDominationPC.IsFinished())
                        {
                            data.AddText("PhoenixPolE           [ Active ]             [ " + MsgSchedules.PoleDominationPC.Winner.Name + " ].\n");
                        }
                        if (MsgSchedules.PoleDominationPC.IsFinished())
                        {
                            data.AddText("PhoenixPole           [ Not_Active ]         [ " + MsgSchedules.PoleDominationPC.Winner.Name + " ].\n");
                        }
                        #endregion
                        #region DesertPoleCity
                        if (!MsgSchedules.PoleDominationDC.IsFinished())
                        {
                            data.AddText("DesertPoleCity        [ Active ]             [ " + MsgSchedules.PoleDominationDC.Winner.Name + " ].\n");
                        }
                        if (MsgSchedules.PoleDominationDC.IsFinished())
                        {
                            data.AddText("DesertPoleCity        [ Not_Active ]         [ " + MsgSchedules.PoleDominationDC.Winner.Name + " ].\n");
                        }
                        #endregion
                        data.AddOption("Join Selected Pole !!", 1);
                        data.AddOption("Claim Reward  For Selected Pole !!", 2);
                        data.AddOption("Let~me~think...", 255);
                        data.AddAvatar(63);
                        data.FinalizeDialog();
                        break;
                    }
                #region Join
                case 1:
                    {
                        data.AddText("Hello " + client.Player.Name + " Select Pole you want to join in ");
                        data.AddOption("ApePoleCity", 3);
                        data.AddOption("BirdPoleCity", 4);
                        data.AddOption("PhoenixPoleCastle", 5);
                        data.AddOption("DesertPoleCity", 6);
                        data.AddAvatar(63);
                        data.FinalizeDialog();
                        break;
                    }
                #region ApePoleCity
                case 3:
                    {
                        if (!MsgSchedules.PoleDomination.IsFinished())
                        {
                            client.Teleport(576, 623, 1020);
                        }
                        else
                        {
                            data.AddText("ApePoleCity [ Not_Active ] the pole [ Active ] on Tuesday From 00:59");
                            data.AddOption("Thx", 255);
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region BirdPoleCity
                case 4:
                    {
                        if (!MsgSchedules.PoleDominationBI.IsFinished())
                        {
                            client.Teleport(730, 635, 1015);
                        }
                        else
                        {
                            data.AddText("ApePoleCity [ Not_Active ] the pole [ Active ] on Thursday From 00:59");
                            data.AddOption("Thx", 255);
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region PhoenixPoleCastle
                case 5:
                    {
                        if (!MsgSchedules.PoleDominationPC.IsFinished())
                        {
                            client.Teleport(273, 267, 1011);
                        }
                        else
                        {
                            data.AddText("PhoenixPoleCastle [ Not_Active ] the pole [ Active ] on Monday From 00:59");
                            data.AddOption("Thx", 255);
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region DesertPoleCity
                case 6:
                    {
                        if (!MsgSchedules.PoleDominationDC.IsFinished())
                        {
                            client.Teleport(469, 657, 1000);
                        }
                        else
                        {
                            data.AddText("DesertPoleCity [ Not_Active ] the pole [ Active ] on Wednesday From 00:59");
                            data.AddOption("Thx", 255);
                            data.AddAvatar(63);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #endregion
                #region Pole Reward
                case 2:
                    {
                        data.AddText("Hello " + client.Player.Name + " Select Pole you want to get a reward from it. ");
                        data.AddOption("ApePoleCity", 7);
                        data.AddOption("BirdPoleCity", 8);
                        data.AddOption("PhoenixPoleCastle", 9);
                        data.AddOption("DesertPoleCity", 10);
                        data.AddAvatar(63);
                        data.FinalizeDialog();
                        break;
                    }
                #region ApePoleCity
                case 7:
                    {
                        if (client.Player.GuildID == MsgSchedules.PoleDomination.Winner.GuildID && client.Player.MyGuild != null && MsgSchedules.PoleDomination.IsFinished())
                        {

                            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader && MsgSchedules.PoleDomination.Winner.LeaderReward > 0
                                 && !MsgSchedules.PoleDomination.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgSchedules.PoleDomination.RewardLeader.Add(client.Player.UID);
                                MsgSchedules.PoleDomination.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgPoleDomination.GuildWarScrore.ConquerPointsReward;
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgPoleDomination.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the PoleDomination.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }

                            else
                            {
                                data.AddText("Just the GuildLeader can claim the reward!");
                                data.AddOption("Ok~thank~you.", 255);
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area..");
                            data.AddOption("Ok~thank~you.", 255);
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region BirdPoleCity
                case 8:
                    {
                        if (client.Player.GuildID == MsgSchedules.PoleDominationBI.Winner.GuildID && client.Player.MyGuild != null && MsgSchedules.PoleDominationBI.IsFinished())
                        {

                            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader && MsgSchedules.PoleDominationBI.Winner.LeaderReward > 0
                                 && !MsgSchedules.PoleDominationBI.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgSchedules.PoleDominationBI.RewardLeader.Add(client.Player.UID);
                                MsgSchedules.PoleDominationBI.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgPoleDominationBI.GuildWarScrore.ConquerPointsReward;
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgPoleDominationBI.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the PoleDominationBI.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }

                            else
                            {
                                data.AddText("Just the GuildLeader can claim the reward!");
                                data.AddOption("Ok~thank~you.", 255);
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area..");
                            data.AddOption("Ok~thank~you.", 255);
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region PhoenixPoleCastle
                case 9:
                    {
                        if (client.Player.GuildID == MsgSchedules.PoleDominationPC.Winner.GuildID && client.Player.MyGuild != null && MsgSchedules.PoleDominationPC.IsFinished())
                        {

                            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader && MsgSchedules.PoleDominationPC.Winner.LeaderReward > 0
                                 && !MsgSchedules.PoleDominationPC.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgSchedules.PoleDominationPC.RewardLeader.Add(client.Player.UID);
                                MsgSchedules.PoleDominationPC.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgPoleDominationPC.GuildWarScrore.ConquerPointsReward;
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgPoleDominationPC.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the PoleDominationPC.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }

                            else
                            {
                                data.AddText("Just the GuildLeader can claim the reward!");
                                data.AddOption("Ok~thank~you.", 255);
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area..");
                            data.AddOption("Ok~thank~you.", 255);
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region DesertPoleCity
                case 10:
                    {
                        if (client.Player.GuildID == MsgSchedules.PoleDominationDC.Winner.GuildID && client.Player.MyGuild != null && MsgSchedules.PoleDominationDC.IsFinished())
                        {

                            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader && MsgSchedules.PoleDominationDC.Winner.LeaderReward > 0
                                 && !MsgSchedules.PoleDominationDC.RewardLeader.Contains(client.Player.UID))
                            {

                                MsgSchedules.PoleDominationDC.RewardLeader.Add(client.Player.UID);
                                MsgSchedules.PoleDominationDC.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgPoleDominationDC.GuildWarScrore.ConquerPointsReward;
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , GuildLeader from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgPoleDominationDC.GuildWarScrore.ConquerPointsReward.ToString() + " ConquerPoints for the domination the PoleDominationDC.", MsgServer.MsgMessage.MsgColor.red, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                            }

                            else
                            {
                                data.AddText("Just the GuildLeader can claim the reward!");
                                data.AddOption("Ok~thank~you.", 255);
                                data.AddAvatar(110);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your~guild~has~not~dominated~guild~area..");
                            data.AddOption("Ok~thank~you.", 255);
                            data.AddAvatar(110);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                    #endregion
                    #endregion
            }
        }
        #endregion
        #endregion
        #endregion
        #region ArenaRoom
        [NpcAttribute(NpcID.ArenaRoom)]
        public static void ArenaRoom(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("This is 1 v 1 arena you will fight without heals or magic so be ready!\n");
                        dialog.AddText("At the first you will pay 1.000.000 silver \n the winner will recive 1.000.000 silver\n");
                        dialog.AddOption("ArenaRoom[1].", 1);
                        dialog.AddOption("ArenaRoom[2].", 2);
                        dialog.AddOption("ArenaRoom[3].", 3);
                        dialog.AddOption("ArenaRoom[4].", 4);
                        dialog.AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 1:
                case 2:
                case 3:
                case 4:
                    {
                        int aliveroom_1 = 0;
                        int aliveroom_2 = 0;
                        int aliveroom_3 = 0;
                        int aliveroom_4 = 0;
                        uint Room_1_Map = 50;
                        uint Room_2_Map = 51;
                        uint Room_3_Map = 52;
                        uint Room_4_Map = 53;
                        if (Option == 1)
                        {
                            foreach (Client.GameClient players in Database.Server.GamePoll.Values)
                            {
                                if (players.Player.Map == Room_1_Map && players.Player.Alive)
                                    aliveroom_1++;
                                if (players.Player.Map == Room_2_Map && players.Player.Alive)
                                    aliveroom_2++;
                                if (players.Player.Map == Room_3_Map && players.Player.Alive)
                                    aliveroom_3++;
                                if (players.Player.Map == Room_4_Map && players.Player.Alive)
                                    aliveroom_4++;
                            }
                            if (client.Player.Money >= 1000000)
                            {
                                #region ArenaRoom[1]
                                if (Option == 1)
                                {
                                    if (aliveroom_1 < 2)
                                    {
                                        client.Teleport(50, 50, Room_1_Map);
                                        client.Player.Money -= 1000000;
                                        client.Player.SetPkMode(Role.Flags.PKMode.PK);
                                    }
                                    else
                                    {
                                        dialog.AddText("There are 2 Player in arena");
                                        dialog.AddOption("Oh Sorry!", 255);
                                        dialog.AddAvatar(329);
                                        dialog.FinalizeDialog();
                                    }
                                }
                                #endregion
                                #region ArenaRoom[2]
                                if (Option == 2)
                                {
                                    if (aliveroom_2 < 2)
                                    {
                                        client.Teleport(50, 50, Room_2_Map);
                                        client.Player.Money -= 1000000;
                                        client.Player.SetPkMode(Role.Flags.PKMode.PK);
                                    }
                                    else
                                    {
                                        dialog.AddText("There are 2 Player in arena");
                                        dialog.AddOption("Oh Sorry!", 255);
                                        dialog.AddAvatar(329);
                                        dialog.FinalizeDialog();
                                    }
                                }
                                #endregion
                                #region ArenaRoom[3]
                                if (Option == 3)
                                {
                                    if (aliveroom_3 < 2)
                                    {
                                        client.Teleport(50, 50, Room_3_Map);
                                        client.Player.Money -= 1000000;
                                        client.Player.SetPkMode(Role.Flags.PKMode.PK);
                                    }
                                    else
                                    {
                                        dialog.AddText("There are 2 Player in arena");
                                        dialog.AddOption("Oh Sorry!", 255);
                                        dialog.AddAvatar(329);
                                        dialog.FinalizeDialog();
                                    }
                                }
                                #endregion
                                #region ArenaRoom[4]
                                if (Option == 4)
                                {
                                    if (aliveroom_4 < 2)
                                    {
                                        client.Teleport(50, 50, Room_4_Map);
                                        client.Player.Money -= 1000000;
                                        client.Player.SetPkMode(Role.Flags.PKMode.PK);
                                    }
                                    else
                                    {
                                        dialog.AddText("There are 2 Player in arena");
                                        dialog.AddOption("Oh Sorry!", 255);
                                        dialog.AddAvatar(329);
                                        dialog.FinalizeDialog();
                                    }
                                }
                                #endregion
                            }
                        }
                        break;
                    }
            }
        }
        #endregion
        #region Events Manager
        [NpcAttribute(NpcID.AllTournaments)]
        public static void AllTournaments(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        var _event = Program.Events.Find(e => e.Stage == EventStage.Inviting);
                        dialog.AddText("Here you can see what events are currently active!");
                        dialog.AddOption("Claim Prize.", 3);                      
                        if (MsgSchedules.CurrentTournament != null
                            && MsgSchedules.CurrentTournament.Type != TournamentType.None
                            && MsgSchedules.CurrentTournament.Process == ProcesType.Idle)
                        {
                            dialog.AddOption($"{MsgSchedules.CurrentTournament.Type} - [Available]", 1);
                        }
                        else if (_event != null)
                        {
                            dialog.AddText("You want to join to some events ?");
                            dialog.AddOption(_event.EventTitle, 2);
                        }
                        else
                        {
                            dialog.AddOption("There's No Event's, Come later!");
                        }
                        dialog.AddAvatar(260).FinalizeDialog();

                        break;          
                    }
                
                case 3:
                    {
                        bool Claimd = false;
                       
                        if (!Claimd)
                        {
                            client.Player.MessageBox("There is no reward for you to claim.", null, null);
                        }
                        break;
                    }
                case 1:
                    {
                        MsgSchedules.CurrentTournament.Join(client, stream);
                        break;
                    }
                case 2:
                    {
                        if (client.EventsLib == null)
                        {
                            if (Program.Events != null)
                            {
                                var _event = Program.Events.Find(e => e.Stage == EventStage.Inviting);
                                if (_event != null)
                                {
                                    client.EventsLib = _event;
                                    _event.AddPlayer(client);
                                    break;
                                }
                            }
                            client.SendSysMesage("Sorry, no PVP events are currently selecting new members.");
                        }
                        else client.SendSysMesage("you can`t use @joinpvp in events.");
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Events)]
        public static void Events(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        bool text = false;
                        if (MsgSchedules.CurrentTournament != null && MsgSchedules.CurrentTournament.Process == ProcesType.Idle)
                        {
                            data.AddText("You want to join to some events ?");
                            text = true;
                            data.AddOption(MsgSchedules.CurrentTournament.Type.ToString(), 1);
                        }
                        var _event = Program.Events.Find(e => e.Stage == EventStage.Inviting);
                        if (_event != null)
                        {
                            if (!text)
                                data.AddText("You want to join to some events ?");
                            text = true;
                            data.AddOption(_event.EventTitle, 2);
                        }
                        if (!text)
                            data.AddText("There's no event currently in progress.");
                        data.AddOption("Just~passing~by.", 255).AddAvatar(97).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        MsgSchedules.CurrentTournament.Join(client, stream);
                        break;
                    }
                case 2:
                    {
                        if (client.EventsLib == null)
                        {
                            if (Program.Events != null)
                            {
                                var _event = Program.Events.Find(e => e.Stage == EventStage.Inviting);
                                if (_event != null)
                                {
                                    client.EventsLib = _event;
                                    _event.AddPlayer(client);
                                    break;
                                }
                            }
                            client.SendSysMesage("Sorry, no PVP events are currently selecting new members.");
                        }
                        else client.SendSysMesage("you can`t use @joinpvp in events.");
                        break;
                    }
            }
        }
        #endregion
        #region gender
        [NpcAttribute(NpcID.DrYinYang)]
        public static void DrYinYang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you would like to change your gender, I can help you.\n")
                            .AddText("You'll need to pay me 1,000 CPs.")
                            .AddOption("Change gender.", 1)
                            .AddOption("More information.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(123).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("If you would like to change your gender, I can help you.\n")
                            .AddText("You'll need to pay me 1,000 CPs.")
                            .AddOption("Change gender.", 1)
                            .AddOption("More information.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(123).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Spouse != "None")
                        {
                            data.AddText("You`re married, to change your gender you'll need to get a divorce first.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(123).FinalizeDialog();
                            break;
                        }
                        if (client.Player.ConquerPoints >= 1000)
                        {
                            if (client.Equipment.FreeEquip(Role.Flags.ConquerItem.Garment) == false
                           || !client.Equipment.FreeEquip(Role.Flags.ConquerItem.AleternanteGarment))
                            {
                                data.AddText("Please remove your garment.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(123).FinalizeDialog();
                                break;
                            }
                            client.Player.ConquerPoints -= 1000;
                            if (Role.Core.IsBoy(client.Player.Body))
                            {
                                ushort typ = (ushort)(client.Player.Body % 10);
                                switch (typ)
                                {
                                    case 3: typ = 1; break;
                                    case 4: typ = 2; break;
                                }
                                client.Player.Body = (ushort)(2000 + typ);
                                client.Player.SendUpdate(stream, client.Player.Mesh, MsgUpdate.DataType.Mesh);
                                client.Player.View.ReSendView(stream);
                            }
                            else
                            {
                                ushort typ = (ushort)(client.Player.Body % 10);
                                switch (typ)
                                {
                                    case 1: typ = 3; break;
                                    case 2: typ = 4; break;
                                }
                                client.Player.Body = (ushort)(1000 + typ);
                                client.Player.SendUpdate(stream, client.Player.Mesh, MsgUpdate.DataType.Mesh);
                                client.Player.View.ReSendView(stream);
                            }
                            if (client.Player.Nobility != null)
                            {
                                client.Player.Nobility.Gender = client.Player.GetGender;
                                client.Player.Nobility.Mesh = client.Player.Mesh;
                            }
                            if (client.Player.MyGuild != null && client.Player.MyGuildMember != null)
                                client.Player.MyGuildMember.Mesh = client.Player.Mesh;
                            //if (client.ArenaStatistic != null)
                            //    client.ArenaStatistic.Mesh = client.Player.Mesh;
                            //if (client.TeamArenaStatistic != null)
                            //    client.TeamArenaStatistic.Mesh = client.Player.Mesh;
                            //if (client.Player.OnFairy)
                            //{
                            //    client.Player.FairySpawn.Mode = MsgTransformFairy.Action.Dezactive;
                            //    client.Player.View.SendView(stream.TransformFairyCreate(MsgTransformFairy.Action.Dezactive, client.Player.FairySpawn.FairyType, client.Player.FairySpawn.UID), true);
                            //    client.Player.OnFairy = false;
                            //    client.Player.FairySpawn = default(MsgTransformFairy);
                            //}
                            MsgMessage messaj = new MsgMessage(client.Player.Name + " changed their gender.", MsgMessage.MsgColor.red, MsgMessage.ChatMode.System);


                            Program.SendGlobalPackets.Enqueue(messaj.GetArray(stream));
                        }
                        else
                        {
                            data.AddText("It'll cost you 1,000 CPs for a gender change.\n")
                                .AddText("Would you still like to change your gender?")
                                .AddOption("Okay.", 255)
                                .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        data.AddText("You will need to be single, and have your garment removed.")
                            .AddOption("Change gender.", 3)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(123).FinalizeDialog();

                        break;
                    }

            }
        }
        #endregion

        #region nonvip bank
        [NpcAttribute(NpcID.JasonNpc)]
        public static void JasonNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Welcome to CoPrivate Bank, you can withdraw your Meteors and DragonBalls that were stored in your VIP Bank here.");
                        data.AddOption("Withdraw.", 2);
                        data.FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("What would you like to withdraw?");
                        data.AddOption("DragonBalls.", 11);
                        data.AddOption("DBScrolls.", 12);
                        data.AddOption("Meteors.", 13);
                        data.AddOption("MeteorScrolls.", 14);
                        data.FinalizeDialog();
                        break;
                    }
                #endregion
                #region Wirthdraw Db
                case 11:
                    {
                        data.AddText($"You have: {client.Player.DepositDbs} \n");
                        data.AddText($"How many DragonBalls would you like to withdraw?");
                        data.AddInput($"Amount:", 15);
                        data.FinalizeDialog();
                        break;
                    }
                case 15:
                    {
                        byte space = byte.Parse(Input);
                        if (client.Player.DepositDbs >= space && space > 0)
                        {
                            if (client.Inventory.HaveSpace(space))
                            {

                                client.Inventory.Add(stream, Database.ItemType.DragonBall, space);
                                client.Player.DepositDbs -= space;
                                data.AddText($"You've successfully withdrew {space} and you now have {client.Player.DepositDbs} DragonBalls.");
                                data.AddOption("Thanks.", 255);
                                data.FinalizeDialog();

                            }
                            else
                            {
                                data.AddText($"Sorry, but you don't have {space} free spaces in your inventory.");
                                data.AddOption("Okay.", 255);
                                data.FinalizeDialog();
                                break;
                            }
                        }
                        else
                        {
                            data.AddText($"You don't have that amount.");
                            data.AddOption("Okay.", 255);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Wirthdraw SDb
                case 12:
                    {
                        data.AddText($"You have: {client.Player.DepositSDbs} \n");
                        data.AddText($"How many DBScrolls would you like to withdraw?");
                        data.AddInput($"Amount:", 16);
                        data.FinalizeDialog();
                        break;
                    }
                case 16:
                    {
                        byte space = byte.Parse(Input);
                        if (client.Player.DepositSDbs >= space && space > 0)
                        {
                            if (client.Inventory.HaveSpace(space))
                            {
                                client.Inventory.Add(stream, Database.ItemType.DragonBallScroll, space);
                                client.Player.DepositSDbs -= space;
                                data.AddText($"You've successfully withdrew {space} and you now have {client.Player.DepositSDbs} DBScrolls.");
                                data.AddOption("Thanks.", 255);
                                data.FinalizeDialog();

                            }
                            else
                            {
                                data.AddText($"Sorry, but you don't have {space} free spaces in your inventory.");
                                data.AddOption("Thanks.", 255);
                                data.FinalizeDialog();
                                break;
                            }
                        }
                        else
                        {
                            data.AddText($"You don't have that amount.");
                            data.AddOption("Okay.", 255);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Wirthdraw Meteor
                case 13:
                    {
                        data.AddText($"You have: {client.Player.DepositMets} \n");
                        data.AddText($"How many Meteors would you like to withdraw?");
                        data.AddInput($"Amount:", 17);
                        data.FinalizeDialog();
                        break;
                    }
                case 17:
                    {
                        byte space = byte.Parse(Input);
                        if (client.Player.DepositMets >= space && space > 0)
                        {
                            if (client.Inventory.HaveSpace(space))
                            {
                                client.Inventory.Add(stream, Database.ItemType.Meteor, space);
                                client.Player.DepositMets -= space;
                                data.AddText($"You've successfully withdrew {space} and you now have {client.Player.DepositMets} Meteors.");
                                data.AddOption("Thanks.", 255);
                                data.FinalizeDialog();

                            }
                            else
                            {
                                data.AddText($"Sorry, but you don't have {space} free spaces in your inventory.");
                                data.AddOption("Okay.", 255);
                                data.FinalizeDialog();
                                break;
                            }
                        }
                        else
                        {
                            data.AddText($"You don't have that amount.");
                            data.AddOption("Okay.", 255);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region Wirthdraw MeteorScroll
                case 14:
                    {
                        data.AddText($"You have: {client.Player.DepositSMets} \n");
                        data.AddText($"How many MeteorScrolls would you like to withdraw?");
                        data.AddInput($"Amount:", 18);
                        data.FinalizeDialog();
                        break;
                    }
                case 18:
                    {
                        byte space = byte.Parse(Input);
                        if (client.Player.DepositSMets >= space && space > 0)
                        {
                            if (client.Inventory.HaveSpace(space))
                            {
                                client.Inventory.Add(stream, Database.ItemType.MeteorScroll, space);
                                client.Player.DepositSMets -= space;
                                data.AddText($"You've successfully withdrew {space} and you now have {client.Player.DepositSMets} MeteorScrolls.");
                                data.AddOption("Thanks.", 255);
                                data.FinalizeDialog();
                            }
                            else
                            {
                                data.AddText($"Sorry, but you don't have {space} free spaces in your inventory.");
                                data.AddOption("Okay.", 255);
                                data.FinalizeDialog();
                                break;
                            }
                        }
                        else
                        {
                            data.AddText($"You don't have that amount.");
                            data.AddOption("Okay.", 255);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                    #endregion

            }
        }

        #region Frozen Grotto
        [NpcAttribute(NpcID.DesertFrozenGroto)]
        public static void DesertFrozenGroto(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("You may enter the Frozen Grotto for 100,000 gold.")
                            .AddOption("Let me in!", 1)
                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100000)
                        {
                            client.Player.Money -= 100000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(367, 619, 1762); break;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100,000 gold.")
                         .AddOption("Sorry.", 255).AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        #endregion
        #region Leave Frozen Grotto
        [NpcAttribute(NpcID.FrozenGrottoGeneral)]
        public static void FrozenGrottoGeneral(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("You may leave Frozen Grotto for 100,000 gold.")
                            .AddOption("Send me back to Desert City.", 1)
                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100000)
                        {
                            client.Player.Money -= 100000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(493, 646, 1000); break;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100,000 gold.")
                         .AddOption("Sorry.", 255).AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        #endregion

        #region BaslikIn
        [NpcAttribute(NpcID.BaslikIn)]
        public static void BaslikIn(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("I can take you to Basilisks, would you like to go?")
                            .AddOption("Yes.", 1)
                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            if (client.Player.ContainFlag(MsgUpdate.Flags.FlashingName) || client.Player.ContainFlag(MsgUpdate.Flags.BlackName))
                                break;
                            if (!Program.BlockTeleportMap.Contains(client.Player.Map) || Program.ArenaMaps.ContainsValue(client.Player.DynamicID))
                                client.Teleport(535, 558, 1075);
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100 silver.")
                         .AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region BaslikOut
        [NpcAttribute(NpcID.BaslikOut)]
        public static void BaslikOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Would you like to leave? I can take you back to Twin City.")
                            .AddOption("Yes, please.", 1)
                            .AddOption("Just~passing~by.", 255).AddAvatar(10).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(428, 378, 1002); break;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100 silver.")
                         .AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        #endregion
        [NpcAttribute(NpcID.RemoveBound)]
        public static void RemoveBound(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, would you like to remove the bound from your items for 5kk gold?")
                        .AddOption("Headware.", 1)
                        .AddOption("Necklace/Bag.", 2)
                        .AddOption("Armor.", 3)
                        .AddOption("Right~Weapon.", 4)
                        .AddOption("Left~Weapon.", 5)
                        .AddOption("Ring/Bracelet.", 6)
                         .AddOption("Boots.", 8)
                         .AddOption("Just passing by.", 255)
                        .AddAvatar(3).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Equipment.FreeEquip((Role.Flags.ConquerItem)Option) == true)
                        {
                            data.AddText("Sorry, you can't wear this item.")
                           .AddOption("Okay.", 255)
                                                   .AddAvatar(3).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Money >= 5000000)
                        {
                            client.Player.Money -= 5000000;
                            MsgServer.MsgGameItem Head;
                            if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option, out Head))
                            {
                                Head.Bound = 0;
                                Head.Mode = Role.Flags.ItemMode.Update;
                                Head.Send(client, stream);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Your item has been unbounded now.")
                               .AddOption("Thanks~a~lot!")
                                                      .AddAvatar(3).FinalizeDialog();

                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~5,000,000~gold.")
                      .AddOption("Okay.", 255)
                                              .AddAvatar(3).FinalizeDialog();

                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.LevelUpQuestJoin)]
        public static void LevelUpQuestJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + ", I can help you gain experience.\n");
                        data.AddText("I can send you to a new map to kill monsters, and you must kill 1,000 monsters for me.\n");
                        data.AddText("You may enter this quest only 5 times a day.");
                        data.AddOption("Join quest!", 1);
                        data.AddOption("Never~mind.", 255);
                        data.AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.QuestLevel >= 5)
                        {
                            if (client.Player.Level <= 137)
                            {
                                client.Teleport(55, 55, 5550);
                            }
                            else
                            {
                                client.CreateBoxDialog("You're already Level 137.");
                            }
                        }
                        else
                        {
                            client.CreateBoxDialog("Sorry! You've already entered 5 times today.");
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LevelUpQuestPrize)]
        public static void LevelUpQuestPrize(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello " + client.Player.Name + ", I can help you gain experience after you finish your quest.\n");
                        data.AddText("Your total kill count: [ " + client.TotalMobsLevel + " ].");
                        data.AddOption("Claim prize!", 1);
                        data.AddOption("Teleport me to Twin City!", 2);
                        data.AddOption("Never~mind.", 255);
                        data.AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.TotalMobsLevel >= 1000)
                        {
                            if (client.Player.Level < 130)
                            {
                                client.Player.Level += 1;
                                client.Player.QuestLevel -= 1;
                                client.TotalMobsLevel = 0;
                                client.Teleport(428, 378, 1002);
                            }
                            else if (client.Player.Level >= 130)
                            {
                                client.Player.Experience += 1000;
                                client.Player.QuestLevel -= 1;
                                client.TotalMobsLevel = 0;
                                client.Teleport(428, 378, 1002);
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }

            }
        }
        #region donation manager
        [NpcAttribute(NpcID.PrizeOfficer)]
        public static void PrizeOfficer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You may claim your Donation reward from me.")
                        .AddOption("Claim my reward!", 1)
                        .AddOption("Just passing by.", 255)
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                #region donation points
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                 .AddOption("Let me check.", 255)
                 .AddAvatar(63).FinalizeDialog();
                            break;
                        }
                        var prizes = PayPalHandler.getItems(client.AccountName(client.Player.Name));
                        foreach (var item in prizes)
                        {
                            switch (item.Key)
                            {
                                case 1:
                                    {
                                        string ItemName = "1000CPS+1MGold";
                                        client.Player.ConquerPoints += 1000;
                                        client.Player.Money += 1000000;
                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 2:
                                    {
                                        string ItemName = "5000CPS+5MGold";
                                        client.Player.ConquerPoints += 5000;
                                        client.Player.Money += 5000000;

                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 3:
                                    {
                                        string ItemName = "10000CPS+10MGold";
                                        client.Player.ConquerPoints += 10000;
                                        client.Player.Money += 10000000;

                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 4:
                                    {
                                        string ItemName = "20000CPS+20MGold";
                                        client.Player.ConquerPoints += 20000;
                                        client.Player.Money += 20000000;

                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 5:
                                    {
                                        string ItemName = "30000CPS+30MGold";
                                        client.Player.ConquerPoints += 30000;
                                        client.Player.Money += 30000000;

                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 6:
                                    {
                                        string ItemName = "40000CPS+40MGold";
                                        client.Player.ConquerPoints += 40000;
                                        client.Player.Money += 40000000;

                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 7:
                                    {
                                        string ItemName = "50000CPS+50MGold";
                                        client.Player.ConquerPoints += 50000;
                                        client.Player.Money += 50000000;

                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 8:
                                    {
                                        string ItemName = "30DayVIP";
                                        client.Inventory.Add(stream, 780010, 1);
                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 9:
                                    {
                                        string ItemName = "20k Cps";
                                        client.Player.ConquerPoints += 20000;

                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 10:
                                    {
                                        string ItemName = "VIP-7DAY";
                                        client.Inventory.Add(stream, 780000, 1);
                                        client.CreateBoxDialog("You've received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 11:
                                    {
                                        string ItemName = "+4Stone";
                                        client.Inventory.Add(stream, 73000, 1);
                                        client.CreateBoxDialog("You have received " + ItemName + ". Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                                case 12:
                                    {
                                        string ItemName = "Level-137";
                                        client.Player.Level = (137);
                                        client.CreateBoxDialog("You have received Level 137 " + " Thank you for your support.");
                                        PayPalHandler.logDonation(client.AccountName(client.Player.Name), client.Player.Name, item.Value + " " + ItemName + ".");
                                        string amessaj = "";
                                        if (Role.Core.IsBoy(client.Player.Body))
                                            amessaj = "his";
                                        else if (Role.Core.IsGirl(client.Player.Body))
                                            amessaj = "her";
                                        Console.WriteLine(client.Player.Name + "! claimed " + amessaj + " " + ItemName + " bought from our donation page. Thanks for supporting our server.");

                                        break;
                                    }
                            }
                        }
                        if (prizes.Count == 0)
                        {
                            data.AddText("You have nothing to claim.");
                            data.AddOption("Thanks.", 255);
                            data.AddAvatar(63).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You've claimed your donation reward.");
                            data.AddOption("Thanks.", 255);
                            data.AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                    #endregion
            }
        }
        #endregion
        
        #region votemanager
        [NpcAttribute(NpcID.VotePointsReward)]
        public static void VotePointsReward(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {

                        data.AddText("You're eligible to vote!\n")
                            .AddText("Please remember you may only vote once every 12 hours.")
                            .AddOption("Vote.", 41)
                            .AddOption("Check rank.", 70)
                            .AddOption("Exchange points.", 60)
                            .AddOption("I`ll think about it.", 255)
                            .AddAvatar(3)
                            .FinalizeDialog();
                        break;
                    }
                case 70:
                    {
                        var ranks = Program.VoteRank.GetRanks;
                        data.AddText("Top 5 Highest Voters.\n");
                        if (ranks != null)
                        {
                            for (int i = 0; i < ranks.Length; i++)
                            {
                                uint Rank = (uint)(i + 1);
                                var hero = ranks[i];
                                data.AddText("Rank " + Rank + ": " + hero.Name + " - Points: [" + hero.VoteCount + "].\n");
                            }
                        }
                        else data.AddText("-No One.\n");
                             data.AddText("Your Vote Count: " + client.CountVote + ".\n");
                             data.AddOption("I`ll think about it.", 255)
                                 .AddAvatar(3)
                                 .FinalizeDialog();
                        break;

                    }
                case 41:
                    {
                        if (Database.VoteSystem.CanVote(client))
                        {
                            client.SendSysMesage("https://www.xtremetop100.com/in.php?site=1132373219", MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.red, false);
                            client.Player.StartVote = true;
                            client.Player.StartVoteStamp = Time32.Now.AddSeconds(30);
                            client.SendSysMesage("Please wait for the system to check your vote.");
                        }
                        else
                        {
                            data.AddText("You've already claimed your reward for voting. You may only vote once every 12 hour per IP address.")
                             .AddOption("I~see.", 255)
                             .AddAvatar(3).FinalizeDialog();
                        }
                        break;

                    }
                #region vote reward
                case 60:
                    {
                        data.AddText("Dear " + client.Player.Name + ", you currently have [" + client.Player.VotePoints + "] Vote Points.\n")
                            .AddText("Would you like to trade them for some rewards?")
                        .AddOption("RTG. (5 VPs)", 11)
                        .AddOption("RDG. (5 VPs)", 12)
                        .AddOption("RPG. (5 VPs)", 13)
                        .AddOption("RVG. (5 VPs)", 14)
                        .AddOption("RMG. (5 VPs)", 15)
                        .AddOption("RRG. (5 VPs)", 16)
                        .AddOption("No thanks.", 255)
                        .AddAvatar(3).FinalizeDialog();
                        break;
                    }
                #region RTG
                case 11:
                    {
                        if (client.Player.VotePoints >= 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 5;
                                client.Inventory.Add(stream, 700072);//RTG
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region RDG
                case 12:
                    {
                        if (client.Player.VotePoints > 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 5;
                                client.Inventory.Add(stream, 700012);//RDG
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough Vote Points.")
                                 .AddOption("Ah ok.", 255)
                                 .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                #endregion
                #region RPG
                case 13:
                    {
                        if (client.Player.VotePoints >= 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 5;
                                client.Inventory.Add(stream, 700002);//RPG
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region RVG
                case 14:
                    {
                        if (client.Player.VotePoints >= 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 5;
                                client.Inventory.Add(stream, 700052);//RVG
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region RMG
                case 15:
                    {
                        if (client.Player.VotePoints >= 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 5;
                                client.Inventory.Add(stream, 700062);//RMG
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                #endregion
                #region RRG
                case 16:
                    {
                        if (client.Player.VotePoints >= 5)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VotePoints -= 5;
                                client.Inventory.Add(stream, 700032);//RRG
                            }
                            else client.SendSysMesage("You don`t have enough space in your inventory.");
                        }
                        else client.SendSysMesage("You don`t have enough points.");
                        break;
                    }
                    #endregion




                    #endregion
            }
        }
        #endregion
        #region DBShower
        [NpcAttribute(NpcID.DBShower)]
        public static void DBShower(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Glad to see you! I take it that you haven`t heard of the DBShower tournament? Please allow me to introduce this exciting event for you.")
                        .AddText("It`s a new Tournament that takes place every day at 8AM and 1PM server time. You may not PK there, you play just to collect the DragonBalls.")
                        .AddOption("Sign~me~up!", 1)
                        .AddOption("I will come later.", 255)
                        .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules.CurrentTournament.Type == TournamentType.DBShower)
                        {
                            if (!MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                data.AddText("We're sorry, but you can't enter right now, try again when the Tournament starts!")
                                    .AddOption("I see.", 255)
                                    .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We're sorry, but you can't enter right now, try again when the Tournament start!")
                                .AddOption("I see.", 255)
                                .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }


        #endregion
        #region WhereHousePassword
        [NpcAttribute(NpcID.WHPassword)]
        public static void WHPassword(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("I'm the Warehouse Guardian! I help players protect their accounts. What can I do for you?");
                        if (client.Player.SecurityPassword == 0)
                        {
                            dialog.Option("Put a password on my warehouse.", 1);
                        }
                        else
                        {
                            dialog.Option("Remove password.", 4);
                            dialog.Option("Change password.", 6);
                        }
                        dialog.Option("Nevermind.", 255);
                        dialog.AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Player.SecurityPassword = 0;
                        dialog.AddText("Please enter your password. Only numbers are allowed.");
                        dialog.AddInput("Password:", 2);
                        dialog.AddOption("Let me think.", 255);
                        dialog.AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Player.SecurityPassword = uint.Parse(Input);
                        dialog.AddText("Please confirm your password.");
                        dialog.AddInput("Retype Password:", 3);
                        dialog.AddOption("Cancel it.", 255);
                        dialog.AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        break;
                    }
            }
        }

        #endregion
        #region ItemAttibute
        [NpcAttribute(NpcID.ItemAttibute)]
        private static void ItemAttibute(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Reborn == 2 && client.Player.Level >= 120)
                        {


                            dialog.AddText("I can open a random Hidden Attibute into your equipment for 1 HiddenToken! I know, it's hard to find HiddenTokens because it's powerful token!")
                            .AddOption("Upgrade~item~Attribute.", 30)
                            .AddOption("Just passing by.")
                            .AddAvatar(63).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            dialog.AddText("Sorry, you must be Second Reborn and Level 120 or higher to open it!").AddAvatar(63).FinalizeDialog();

                        }
                        break;
                    }
                case 30:
                    {
                        dialog.AddText("I see. Upgrading an item`s Attribute makes it more powerful, please select your item!")
                        .AddOption("Upgrade~Headware.", 31)
                        .AddOption("Upgrade~Necklace/Bag.", 32)
                        .AddOption("Upgrade~Armor.", 33)
                        .AddOption("Upgrade~Right~Weapon.", 34)
                        .AddOption("Upgrade~Left~Weapon.", 35)
                        .AddOption("Upgrade~Ring/Bracelet.", 36)
                        .AddOption("Upgrade~Boots.", 38)
                        .AddOption("Upgrade~Shield.", 35)
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 38:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 30, out item))
                        {
                            if (item.Durability % 10 != item.MaximDurability % 10)//16/16 مش 1610/1650
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            var lvl = Database.Server.ItemsBase[item.ITEM_ID].Level;
                            if (lvl >= 120)
                            {
                                dialog.AddText("You have to give me 1 HiddenToken to upgrade this item.")
                           .AddOption("Sure.", (byte)(Option + 10))
                           .AddOption("Never~mind.", 255)
                           .AddAvatar(63).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("To upgrade this item it must be greater than or equal to Level 120!.")
                           .AddOption("Never~mind.", 255)
                           .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.~Farewell.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 48:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 40, out item))
                        {
                            if (item.Durability % 10 != item.MaximDurability % 10)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (Database.ItemType.IsArrow(item.ITEM_ID))
                            {
                                dialog.AddText("Sorry, you can't update this item.")
                                .AddOption("Oh,~I~see.~Farewell.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            var lvl = Database.Server.ItemsBase[item.ITEM_ID].Level;
                            if (lvl >= 120)
                            {
                                if (!client.Inventory.Contain(Database.ItemType.HiddenAttributeToken, 1))
                                {
                                    dialog.AddText("You don't have the required Token to upgrade this item!")
                                    .AddOption("Sorry.", 255)
                                    .AddAvatar(63).FinalizeDialog();
                                    break;
                                }
                                Database.ItemType.DBItem DBItem;
                                if (Database.Server.ItemsBase.TryGetValue(item.ITEM_ID, out DBItem))
                                {
                                    client.Inventory.Remove(Database.ItemType.HiddenAttributeToken, 1, stream);
                                    item.Effect = (Role.Flags.ItemEffect)Program.GetRandom.Next(200, 203);
                                    item.Mode = Role.Flags.ItemMode.Update;
                                    item.Send(client, stream);
                                    if (item.Position != 0)
                                        client.Equipment.QueryEquipment();

                                    dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                    .AddOption("It is! Thanks~a~lot!")
                                    .AddAvatar(63).FinalizeDialog();

                                }
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item first.")
                            .AddOption("Oh,~I~see.~Farewell.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }

            }
        }


        #endregion
        #region ProficiencyToken
        [NpcAttribute(NpcID.ProficiencyToken)]
        public static void ProficiencyToken(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("The ExpBall is an extremely miraculous item.\n")
                        .AddText("It can upgrade the proficiency of weapons very fast.\n")
                        .AddText("What would you like to improve?")
                        .AddOption("One handed weapon.", 1)
                        .AddOption("Two handed weapon.", 3)
                        .AddOption("Other.", 5)
                        .AddOption("Just passing by.", 255).AddAvatar(65).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Which one handed proficiency?");
                        dialog.AddOption("Blade.", 41);
                        dialog.AddOption("Sword.", 42);
                        dialog.AddOption("Hook.", 43);
                        dialog.AddOption("Whip.", 44);
                        dialog.AddOption("Axe.", 45);
                        dialog.AddOption("Next page.", 2);
                        dialog.AddOption("Nothing, sorry.", 255);
                        dialog.AddAvatar(65).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.AddText("Which one handed proficiency?");
                        //    dialog.AddOption("PrayerBead.", 61);
                        dialog.AddOption("Hammer.", 46);
                        dialog.AddOption("Club.", 48);
                        dialog.AddOption("Scepter.", 184);
                        dialog.AddOption("Dagger.", 150);
                        //  dialog.AddOption("Katana.", 60);
                        dialog.AddOption("Next Page.", 6);
                        dialog.AddOption("Back.", 1);
                        dialog.AddOption("Nothing, sorry.", 255);
                        dialog.AddAvatar(65).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        dialog.AddText("Which one handed proficiency?");
                        dialog.AddOption("Axe.", 45);
                        //    dialog.AddOption("Rapier.", 62);
                        //     dialog.AddOption("Pistol.", 63);
                        dialog.AddOption("Back.", 2);
                        dialog.AddAvatar(65).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.AddText("Which two handed proficiency?");
                        dialog.AddOption("Backsword.", 124);
                        dialog.AddOption("Glaive.", 51);
                        dialog.AddOption("Poleaxe.", 53);
                        dialog.AddOption("LongHammer.", 54);
                        dialog.AddOption("Spear.", 56);
                        dialog.AddOption("Next page.", 4);
                        dialog.AddOption("Nothing, sorry.", 255);
                        dialog.AddAvatar(65).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        dialog.AddText("Which one handed proficiency?");
                        dialog.AddOption("Pickaxe.", 142);
                        dialog.AddOption("Halberd.", 58);
                        dialog.AddOption("Wand.", 165);
                        dialog.AddOption("Bow.", 50);
                        dialog.AddOption("Back.", 3);
                        dialog.AddOption("Nothing, sorry.", 255);
                        dialog.AddAvatar(65).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        dialog.AddText("Which one handed proficiency?");
                        dialog.AddOption("Boxing.", 254);
                        dialog.AddOption("Shield.", 90);
                        dialog.AddOption("Nothing, sorry.", 255);
                        dialog.AddAvatar(65).FinalizeDialog();
                        break;
                    }
                case 100:
                    {
                        if (client.MyProfs.ClientProf.ContainsKey(client.UplevelProficiency))
                        {
                            var myprof = client.MyProfs.ClientProf[client.UplevelProficiency];
                            if (myprof.Level >= 12)
                            {
                                dialog.AddText("This weapon proficiency can't be leveled up anymore.");
                                dialog.AddOption("Oh.", 255).AddAvatar(65).FinalizeDialog();
                                return;
                            }
                            client.UplevelProficiency = 0;
                            if (client.Inventory.Contain(723700, myprof.Level))
                            {
                                client.Inventory.Remove(723700, myprof.Level, stream);
                                client.SendSysMesage("You've successfully leveled your weapon proficiency.", Game.MsgServer.MsgMessage.ChatMode.System);
                                myprof.Level++;
                                myprof.Experience = 0;
                                client.Send(stream.ProficiencyCreate(myprof.ID, myprof.Level, myprof.Experience, client.Player.UID));
                                break;
                            }
                            else
                            {
                                dialog.AddText("You don't have the required ExpBalls, I'm sorry I can't help you.");
                                dialog.AddOption("Sorry.", 255).AddAvatar(65).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("You don't know this proficiency.");
                            dialog.AddOption("Okay.", 255).AddAvatar(65).FinalizeDialog();
                            break;
                        }
                        break;
                    }
                default:
                    {
                        if (Option == 255) return;
                        ushort prof = 0;
                        if (Option == 62)
                            prof = 611;
                        else if (Option == 150)
                            prof = 490;
                        else if (Option == 63)
                            prof = 612;
                        else if (Option < 100)
                            prof = (ushort)(Option * 10);
                        else
                        {
                            if (Option != 254)
                            {
                                string off = Option.ToString();
                                string reverse = off[2].ToString() + off[1].ToString() + off[0].ToString();
                                prof = ushort.Parse(reverse);
                            }
                        }
                        if (prof == 600) prof++;
                        if (client.MyProfs.ClientProf.ContainsKey(prof))
                        {
                            var myprof = client.MyProfs.ClientProf[prof];
                            if (myprof.Level >= 12)
                            {
                                dialog.AddText("This weapon proficiency can't be leveled up anymore.");
                                dialog.AddOption("Oh.", 255).AddAvatar(65).FinalizeDialog();
                                return;
                            }
                            client.UplevelProficiency = prof;
                            dialog.AddText("I need " + myprof.Level + " ExpBalls to be able to level up this weapon proficiency.");
                            dialog.AddOption("Here you go.", 100);
                            dialog.AddOption("Never~mind.", 255).AddAvatar(65).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            dialog.AddText("You don't know this proficiency.");
                            dialog.AddOption("Okay.", 255);
                            dialog.AddAvatar(65).FinalizeDialog();
                            break;
                        }
                    }
            }
        }
        #endregion
        #region AncientDevil
        [NpcAttribute(NpcID.Exorcist)]
        public static void Exorcist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("A demon is sealed by the strength of the seals gradually disappearing, he will return to himself soon, can you help me fix its seal?")
                        .AddOption("How can I help you?", 1)
                        .AddOption("Never~mind.", 255).AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("The devil is in deep sleep. We must do so on this occasion!")
                        .AddText("The amulet is what we want! There are 5 amulets that must be harvested by killing the monster that corresponds to your class. ")
                        .AddText("After you gather the 5 amulets you have to summon the AncientDevil by right clicking them! Be careful of his guards though. ")
                        .AddText("You have to enable PK mode to kill them. Will you help us?")
                        .AddOption("Count me in!", 2)
                        .AddOption("Let me think it over.", 255).AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(189, 233, 1082);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WaterGuard)]
        public static void WaterGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I'm the Water Guard, if you're a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that stole the amulet. Once you're done you'll have to give me the cert. and I'll give you the amulet in exchange.")
                        .AddOption("Take me in!", 1)
                       .AddOption("I've got the WaterCert.", 2)
                       .AddOption("Never~mind.", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 130 && client.Player.Class <= 135)
                        {
                            client.Teleport(168, 295, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not a Water!")
                                  .AddOption("Oh.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710019, 1))
                        {
                            client.Inventory.Remove(710019, 1, stream);
                            client.Inventory.Add(stream, 710014, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WaterCert! Get inside and kill the Devil for it!")
                                .AddOption("I see.", 255)
                                .AddAvatar(50)
                                .FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.FireGuard)]
        public static void FireGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I'm the Fire Guard, if you're a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that stole the amulet. Once you're done you'll have to give me the cert. and I'll give you the amulet in exchange.")
                        .AddOption("Take me in!", 1)
                       .AddOption("I've got the FireCert.", 2)
                       .AddOption("Never~mind.", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 140 && client.Player.Class <= 145)
                        {
                            client.Teleport(295, 168, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not a Fire!")
                                .AddOption("Oh.", 255)
                                .AddAvatar(50)
                                .FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710018, 1))
                        {
                            client.Inventory.Remove(710018, 1, stream);
                            client.Inventory.Add(stream, 710013, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WaterCert.! Get inside and kill the Devil for it!")
                                .AddOption("I see.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.TrojanGuard)]
        public static void TrojanGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I'm the Trojan Guard, if you're a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that stole the amulet. Once you're done you'll have to give me the cert. and I'll give you the amulet in exchange.")
                        .AddOption("Take me in!", 1)
                       .AddOption("I've got the TrojanCert.", 2)
                       .AddOption("Never~mind.", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 10 && client.Player.Class <= 15)
                        {
                            client.Teleport(076, 175, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not a Trojan").AddOption("Oh.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710017, 1))
                        {
                            client.Inventory.Remove(710017, 1, stream);
                            client.Inventory.Add(stream, 710012, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WaterCert.! Get inside and kill the Devil for it!")
                                .AddOption("I see.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.ArcherGuard)]
        public static void ArcherGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I'm the Archer Guard, if you're a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that stole the amulet. Once you're done you'll have to give me the cert. and I'll give you the amulet in exchange.")
                        .AddOption("Take me in!", 1)
                       .AddOption("I've got the ArcherCert.", 2)
                       .AddOption("Never~mind.", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 40 && client.Player.Class <= 45)
                        {
                            client.Teleport(323, 302, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not a Archer!").AddOption("Oh.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710020, 1))
                        {
                            client.Inventory.Remove(710020, 1, stream);
                            client.Inventory.Add(stream, 710015, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a ArcherCert.! Get inside and kill the Devil for it!")
                                .AddOption("I see.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.WarriorGuard)]
        public static void WarriorGuard(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Hello, I'm the Warrior Guard, if you are a Water I can take you to the next island so you can try to")
                        .AddText(" defeat the monster that stole the amulet. Once you're done you'll have to give me the cert. and I'll give you the amulet in exchange.")
                        .AddOption("Take me in!", 1)
                       .AddOption("I've got the WarriorCert.", 2)
                       .AddOption("Never~mind.", 255).AddAvatar(50).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Class >= 20 && client.Player.Class <= 25)
                        {
                            client.Teleport(152, 081, 1082);
                        }
                        else
                        {
                            dialog.AddText("You're not A Warrior!").AddOption("Oh.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(710016, 1))
                        {
                            client.Inventory.Remove(710016, 1, stream);
                            client.Inventory.Add(stream, 710011, 1);
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but it seems like you don't have a WarriorCert.! Get inside and kill the Devil for it!")
                                .AddOption("I see.", 255).AddAvatar(50).FinalizeDialog();
                        }
                        break;

                    }
            }
        }
        #endregion
        #region BlueMouse
        [NpcAttribute(NpcID.GeneralJudd)]
        public static void GeneralJudd(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Thieves stole precious artifacts from the Mansion! The Aster Necklace, Pinetum Picture, and the Royal Sword! Together with the Secret Command of Twin City's ruler. We've sent soldiers to trace back the lost items.")
                        .AddOption("Did you get any clues?", 1)
                        .AddOption("I want to claim my prize!", 6)
                        .AddOption("Poor guy.", 255)
                        .AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Yeah. The thieves were captured. But we didn't find the lost items. I heard a rumor about blue mice, but I can't leave my post to investigate. Could you search for our items in the Phoenix Castle Mine?")
                        .AddOption("Yes, sure.", 2)
                        .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.AddText("The King promises big rewards for those who can retrieve the lost items. Do you want to go to Castle mine cave? I heard an old miner outside the mine has seen it.")
                        .AddOption("Yes, sure.", 3)
                        .AddOption("I'm quite busy now.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.AddText("Good! OldMiner has a special needle to catch the mouse. Hope you can find the lost items soon.")
                        .AddOption("Ok. I will visit OldMiner now.", 4)
                        .AddOption("Sorry, I can't help you.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        dialog.AddText("Thank you very much for your kindness. For any treasure you retrieve, I will repay you. Good luck.")
                        .AddOption("Thanks, bye.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(722515, 1)
                            && !client.Inventory.Contain(722512, 1)
                            && !client.Inventory.Contain(722513, 1)
                            && !client.Inventory.Contain(722514, 1))
                        {
                            client.Inventory.Remove(722515, 1, stream);
                            if (Role.Core.Rate(Global.LUCKY_BLUE_MOUSE_RATE))
                            {
                                client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("As lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a DragonBall!", "ALLUSERS", "Server", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                            }
                            else
                            {
                                client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                                dialog.AddText("Here you are! Good Luck.")
                      .AddOption("Thanks, bye.", 255).AddAvatar(95).FinalizeDialog();
                            }
                        }

                        else if (client.Inventory.Contain(722514, 1)
                            && client.Inventory.Contain(722513, 1)
                            && client.Inventory.Contain(722512, 1))
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. Free 3 spaces.")
                                 .AddOption("I see.", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722514, 1, stream);
                                client.Inventory.Remove(722513, 1, stream);
                                client.Inventory.Remove(722512, 1, stream);
                                if (Role.Core.Rate(Global.LUCKY_BLUE_MOUSE_RATE))
                                {
                                    client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                    Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("As lucky  " + client.Player.Name + " has retrieved treasures stolen by Blue Mouses and won a DragonBall!", "ALLUSERS", "Server", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));
                                }
                                else
                                {
                                    client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                                    dialog.AddText("Here you are! Good luck.")
                          .AddOption("Thanks, bye.", 255).AddAvatar(95).FinalizeDialog();
                                }
                            }

                        }

                        else if (client.Inventory.Contain(722514, 1) && client.Inventory.Contain(722513, 1))
                        {
                            if (!client.Inventory.HaveSpace(5))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. Free 5 spaces")
                                 .AddOption("I see.", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722514, 1, stream);
                                client.Inventory.Remove(722513, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 5);
                                dialog.AddText("Here you are! Good luck.")
                      .AddOption("Thanks, bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }
                        else if (client.Inventory.Contain(722513, 1) && client.Inventory.Contain(722512, 1))
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. Free 3 spaces.")
                                 .AddOption("I see.", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722512, 1, stream);
                                client.Inventory.Remove(722513, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                dialog.AddText("Here you are! Good luck.")
                      .AddOption("Thanks, bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }
                        else if (client.Inventory.Contain(722514, 1))
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. Free 3 spaces.")
                                 .AddOption("I see.", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722514, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                dialog.AddText("Here you are! Good luck.")
                      .AddOption("Thanks, bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }
                        else if (client.Inventory.Contain(722513, 1))
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                dialog.AddText("I'm sorry but your inventory is full. Free 2 spaces.")
                                 .AddOption("I see.", 255).AddAvatar(95).FinalizeDialog();
                                break;
                            }
                            else
                            {
                                client.Inventory.Remove(722513, 1, stream);

                                client.Inventory.Add(stream, Database.ItemType.Meteor, 2);
                                dialog.AddText("Here you are! Good Luck.")
                      .AddOption("Thanks, bye.", 255).AddAvatar(95).FinalizeDialog();

                            }

                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OldMiner)]
        public static void OldMiner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You must use Silver or Gold Needle to catch this kind of mouse. I do have the stuff, If you want, I can exchange Silver Needle for a Dragon Gem, Phoenix Gem, Kylin Gem, or Rainbow Gem; and exchange Gold Needle for Fury Gem, Moon Gem or Violet Gem.")
                        .AddOption("What's the difference?", 1)
                        .AddOption("I want Silver Needle.", 2)
                        .AddOption("I want Gold Needle.", 3)
                        .AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("It is said that some have seen Blue Mice scurrying in the forest mine cave, carying precious treasures. I've never seen such a thing myself, but have found large mice tracks in the deeper mines! The mouse must be bigger than a dog!")
                        .AddOption("Yeah, why not?", 2)
                        .AddOption("I don't believe it.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.AddText("You must use Silver or Gold Needle to catch this kind of mouse. I do have the stuff, If you want, I can exchange Silver Needle for a Dragon Gem, Phoenix Gem, Kylin Gem, or Rainbow Gem; and exchange Gold Needle for Fury Gem, Moon Gem or Violet Gem.")
                        .AddOption("What's the difference?", 3)
                        .AddOption("I want Silver Needle.", 4)
                        .AddOption("I want Gold Needle.", 5).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.AddText("The chance of getting treasures is a little bit higher if you use GoldNeedle. But you must be patient.")
                        .AddOption("I want GoldNeedle.", 5)
                        .AddOption("Even so, I want SilverNeedle.", 4)
                        .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.Contain(722510, 1))
                        {
                            if (client.Inventory.Contain(700011, 1))
                            {
                                client.Inventory.Remove(700011, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting.")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700001, 1))
                            {
                                client.Inventory.Remove(700001, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting.")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700031, 1))
                            {
                                client.Inventory.Remove(700031, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting.")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700041, 1))
                            {
                                client.Inventory.Remove(700041, 1, stream);
                                client.Inventory.Add(stream, 722510, 1);
                                dialog.AddText("Here you are. Good luck with the hunting.")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("In order to receive a Silver Needle you must bring me a Dragon Gem, Phoenix Gem, Kylin Gem, or Rainbow Gem!")
                                .AddOption("Ok, I will get it ready soon.", 255)
                                .AddOption("Take a Gold Needle instead.", 5)
                                  .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but you can carry only 1 needle of each kind at a time.")
                      .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (!client.Inventory.Contain(722511, 1))
                        {
                            if (client.Inventory.Contain(700021, 1))
                            {
                                client.Inventory.Remove(700021, 1, stream);
                                client.Inventory.Add(stream, 722511, 1);
                                dialog.AddText("Here you are. Good luck with the hunting.")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700061, 1))
                            {
                                client.Inventory.Remove(700061, 1, stream);
                                client.Inventory.Add(stream, 722511, 1);
                                dialog.AddText("Here you are. Good luck with the hunting.")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else if (client.Inventory.Contain(700051, 1))
                            {
                                client.Inventory.Remove(700051, 1, stream);
                                client.Inventory.Add(stream, 722511, 1);
                                dialog.AddText("Here you are. Good luck with the hunting.")
                                 .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                            else
                            {
                                dialog.AddText("In order to receive a GoldNeedle you must bring me a Fury Gem, a Violet Gem or a Moon Gem!")
                                .AddOption("Ok, I will get it ready soon.", 255)
                                .AddOption("Take a Silver Needle instead.", 4)
                                  .AddOption("Thanks.", 255).AddAvatar(95).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but you can carry only 1 needle of each kind at a time.")
                      .AddOption("Oh, I see.", 255).AddAvatar(95).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        //  [NpcAttribute(NpcID.BlueMouse)]
        public static void BlueMouse(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var npc = client.Player.View.Roles(Role.MapObjectType.Npc).Where(p => p.UID == id).First();
            if (npc != null)
                client.Map.RemoveNpc(npc as Npc, stream);

            var Maps = new uint[] { 1502, 1503 };
            Game.MsgNpc.Npc bluenpc = Game.MsgNpc.Npc.Create();
            bluenpc.UID = (uint)NpcID.BlueMouse;
            bluenpc.ObjType = Role.MapObjectType.Npc;
            bluenpc.NpcType = Role.Flags.NpcType.Talker;
            bluenpc.Mesh = 6890;
            bluenpc.Map = Maps[Program.GetRandom.Next(0, 2)];
            switch (Program.GetRandom.Next(1, 9))
            {
                case 1:
                    {
                        bluenpc.X = 157;
                        bluenpc.Y = 109;
                        break;
                    }
                case 2:
                    {
                        bluenpc.X = 130;
                        bluenpc.Y = 119;
                        break;
                    }
                case 3:
                    {
                        bluenpc.X = 114;
                        bluenpc.Y = 152;
                        break;
                    }
                case 4:
                    {
                        bluenpc.X = 79;
                        bluenpc.Y = 132;
                        break;
                    }
                case 5:
                    {
                        bluenpc.X = 87;
                        bluenpc.Y = 111;
                        break;
                    }
                case 6:
                    {
                        bluenpc.X = 40;
                        bluenpc.Y = 60;
                        break;
                    }
                case 7:
                    {
                        bluenpc.X = 100;
                        bluenpc.Y = 100;
                        break;
                    }
                case 8:
                    {
                        bluenpc.X = 105;
                        bluenpc.Y = 50;
                        break;
                    }
            }
            Database.Server.ServerMaps[bluenpc.Map].AddNpc(bluenpc);
            #region B2
            var bluenpc2 = Game.MsgNpc.Npc.Create();
            bluenpc2.UID = (uint)NpcID.BlueMouse2;
            bluenpc2.ObjType = Role.MapObjectType.Npc;
            bluenpc2.NpcType = Role.Flags.NpcType.Talker;
            bluenpc2.Mesh = 6890;
            bluenpc2.Map = Maps[Program.GetRandom.Next(0, 2)];
            switch (Program.GetRandom.Next(1, 9))
            {
                case 1:
                    {
                        bluenpc2.X = 157;
                        bluenpc2.Y = 109;
                        break;
                    }
                case 2:
                    {
                        bluenpc2.X = 130;
                        bluenpc2.Y = 119;
                        break;
                    }
                case 3:
                    {
                        bluenpc2.X = 114;
                        bluenpc2.Y = 152;
                        break;
                    }
                case 4:
                    {
                        bluenpc2.X = 79;
                        bluenpc2.Y = 132;
                        break;
                    }
                case 5:
                    {
                        bluenpc2.X = 87;
                        bluenpc2.Y = 111;
                        break;
                    }
                case 6:
                    {
                        bluenpc2.X = 40;
                        bluenpc2.Y = 60;
                        break;
                    }
                case 7:
                    {
                        bluenpc2.X = 100;
                        bluenpc2.Y = 100;
                        break;
                    }
                case 8:
                    {
                        bluenpc2.X = 105;
                        bluenpc2.Y = 50;
                        break;
                    }
            }
            Database.Server.ServerMaps[bluenpc2.Map].AddNpc(bluenpc2);
            #endregion
            #region b3
            var bluenpc3 = Game.MsgNpc.Npc.Create();
            bluenpc3.UID = (uint)NpcID.BlueMouse3;
            bluenpc3.ObjType = Role.MapObjectType.Npc;
            bluenpc3.NpcType = Role.Flags.NpcType.Talker;
            bluenpc3.Mesh = 6890;
            bluenpc3.Map = Maps[Program.GetRandom.Next(0, 2)];
            switch (Program.GetRandom.Next(1, 9))
            {
                case 1:
                    {
                        bluenpc3.X = 157;
                        bluenpc3.Y = 109;
                        break;
                    }
                case 2:
                    {
                        bluenpc3.X = 130;
                        bluenpc3.Y = 119;
                        break;
                    }
                case 3:
                    {
                        bluenpc3.X = 114;
                        bluenpc3.Y = 152;
                        break;
                    }
                case 4:
                    {
                        bluenpc3.X = 79;
                        bluenpc3.Y = 132;
                        break;
                    }
                case 5:
                    {
                        bluenpc3.X = 87;
                        bluenpc3.Y = 111;
                        break;
                    }
                case 6:
                    {
                        bluenpc3.X = 40;
                        bluenpc3.Y = 60;
                        break;
                    }
                case 7:
                    {
                        bluenpc3.X = 100;
                        bluenpc3.Y = 100;
                        break;
                    }
                case 8:
                    {
                        bluenpc3.X = 105;
                        bluenpc3.Y = 50;
                        break;
                    }
            }
            Database.Server.ServerMaps[bluenpc3.Map].AddNpc(bluenpc3);
            client.Player.View.Role(false);

            #endregion
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(722510, 1))//silver neddle
                        {
                            if (!client.Inventory.HaveSpace(2))
                            {
                                dialog.AddText("You need at least 2 free spaces in your inventory before trying to catch me!").
                                    AddOption("Oh.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else if (Role.Core.Rate(70))
                            {
                                dialog.AddText("Oh, my god! Narrowly escaped! Bye, bye!").
                                AddOption("Damn", 255).AddAvatar(7).FinalizeDialog();

                            }
                            else
                            {
                                client.Inventory.Remove(722510, 1, stream);
                                if (Role.Core.Rate(7))
                                {
                                    client.Inventory.Add(stream, 722515, 1);
                                    dialog.AddText("Congratulations you received the Secret Command!").
                              AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else if (Role.Core.Rate(10))
                                {
                                    client.Inventory.Add(stream, 722512, 1);
                                    client.Inventory.Add(stream, 722513, 1);
                                    dialog.AddText("Congratulations you received the Aster Necklace, Pinetum Picture!").
                              AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else if (Role.Core.Rate(20))
                                {
                                    client.Inventory.Add(stream, 722512, 1);
                                    dialog.AddText("Congratulations you received the Aster Necklace!").
                              AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else
                                {

                                    client.Inventory.Add(stream, 722513, 1);
                                    dialog.AddText("Congratulations you received the Pinetum Picture!").
                              AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();

                                }
                            }
                        }
                        else if (client.Inventory.Contain(722511, 1))//Gold neddle
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                dialog.AddText("You need at least 3 free spaces in your inventory before trying to catch me!").
                                    AddOption("Oh.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else if (Role.Core.Rate(60))
                            {
                                dialog.AddText("Oh, my god! Narrowly escaped! Bye, bye!").
                                AddOption("Damn!", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                client.Inventory.Remove(722511, 1, stream);
                                if (Role.Core.Rate(1.4))
                                {
                                    client.Inventory.Add(stream, 722515, 1);
                                    dialog.AddText("Congratulations you received the Secret Command!").
                                      AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();
                                }
                                else
                                {
                                    if (Role.Core.Rate(10))
                                    {
                                        client.Inventory.Add(stream, 722512, 1);
                                        client.Inventory.Add(stream, 722513, 1);
                                        dialog.AddText("Congratulations you received the Aster Necklace, and Pinetum Picture!").
                                  AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();
                                    }

                                    if (Role.Core.Rate(30))
                                    {
                                        client.Inventory.Add(stream, 722512, 1);
                                        dialog.AddText("Congratulations you received the Aster Necklace!").
                                  AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();
                                    }
                                    else if (Role.Core.Rate(25))
                                    {
                                        client.Inventory.Add(stream, 722513, 1);
                                        dialog.AddText("Congratulations you received the Pinetum Picture!").
                                  AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();
                                    }
                                    else
                                    {

                                        client.Inventory.Add(stream, 722514, 1);
                                        dialog.AddText("Congratulations you received the Royal Sword!").
                                  AddOption("Thanks!", 255).AddAvatar(7).FinalizeDialog();

                                    }
                                }
                            }
                        }
                        else
                        {
                            dialog.AddText("You don't have any needle! Good luck catching me without it!").
                                   AddOption("Yikes.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region GWBomb 
        // Norbert
        [NpcAttribute(NpcID.Norbert)]
        public static void Norbert(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721262, 5) && client.Inventory.Contain(721263, 1))
                        {
                            data.AddText("Hi, you've got the meterial I want. Do you come for the Bomb?")
                                .AddOption("Yes.", 10)
                                .AddOption("Just passing by.", 255)
                                .AddAvatar(67).FinalizeDialog();

                            break;
                        }
                        data.AddText("Five~pieces~of~Saltpeter~and~one~piece~of~Sulphur~are~required~to~make~the~Bomb.~And~I~charge~a~fee~of~30,000~silvers.")
                            .AddOption("What~is~the~Bomb?", 1)
                            .AddOption("I~see.", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("It`s used to blow down the guild gate! I participated in a Guild War and witnessed a lot of people lose their lives when attacking the gate.")
                            .AddText("~Since then, I've been working on inventing powerful bombs which can destroy the guild gate. Finally, I made it!")
                            .AddOption("Can~you~make~one~for~me?", 2)
                            .AddOption("Oh.~I~see.", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("No problem. But you know such bombs are powerful and dangerous. Whoever uses it to destroy a guild gate will be killed by the bomb!")
                            .AddOption("Thanks.~I~need~it~badly.", 3)
                            .AddOption("Then~forget~it.", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Good. You`re going to collect 5 Saltpeter and a Sulphur. Besides, you`ll need to pay 30,000 gold as a fee.")
                            .AddOption("Where~do~I~get~the~materials?", 4)
                            .AddOption("I`ll~give~up.", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        data.AddText("You~can~get~Saltpeter~from~my~friend~OldQuarrier~in~Ape~City~and~get~Sulphur~from~the~Bandits~nearby.")
                            .AddOption("Okay,~I`ll~be~back~soon.", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(721262, 5) && client.Inventory.Contain(721263, 1) && client.Player.Money >= 30000)
                        {
                            client.Inventory.Remove(721262, 5, stream);
                            client.Inventory.Remove(721263, 1, stream);
                            client.Player.Money -= 30000;
                            client.Inventory.Add(stream, 721261);
                            data.AddText("You can take the Bomb away. Remember that you`ll be killed once you use it to destroy the guild gate!")
                                .AddOption("I see. Thanks for reminding me!", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.OldQuarrier)]
        public static void OldQuarrier(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Let me guess. It`s Norbert who asked you to come here. Am I right?")
                  .AddOption("I have 10 euxenite ores.", 1)
                  .AddOption("Nope.", 2)
                  .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(1072031, 10))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Remove(1072031, 10, stream);

                                client.Inventory.Add(stream, 721262, 5);
                                data.AddText("There you go! Use the Saltpeter wisely!")
                 .AddOption("Thank~you.", 255)
                 .AddAvatar(91).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                  .AddOption("Let me check.", 255)
                  .AddAvatar(91).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("Are~you~coming~for~Saltpeter?~Since~Norbert~invented~Bomb,~I~have~been~kept~busy~with~supplying~Saltpeter~for~him.")
                            .AddOption("What~is~the~Bomb?", 3)
                            .AddOption("Sorry~to~bother~you.", 255)
                            .AddAvatar(91).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("It~is~powerful~and~used~to~bomb~out~City~Gate.~If~you`re~interested~in~it,~you~can~visit~Norbert~ for the details. He lives in~the~small~village~of~the~Maple Forest")
                             .AddOption("I~see.", 255)
                             .AddAvatar(91).FinalizeDialog();

                        break;
                    }
            }
        }
        #endregion
        #region Labs
        // [1152] Lab Tele and ZONE
        [NpcAttribute(NpcID.Simon)]
        public static void Simon(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Where are you heading to? I can teleport you into a dark place full of caves and strong monsters for 2,000 VirtutePoints.")
                        .AddText(" Make sure to gather all diamonds dropped by monsters as I will reward you nicely for them!")
                        .AddOption("Send me there!", 1)
                        .AddOption("I have some diamonds.", 5)
                        .AddOption("Just passing by.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.VirtutePoints >= 2000)
                        {
                            client.Player.VirtutePoints -= 2000;
                            client.Teleport(100, 100, 1351);
                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have 2,000 VirtutePoints to enter!")
                                .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        dialog.AddText("What diamonds do you wish to exchange?")
                        .AddOption("17 SunDiamonds.", 6)
                        .AddOption("17 MoonDiamonds.", 7)
                        .AddOption("17 StarDiamonds.", 8)
                        .AddOption("17 CloudDiamonds.", 9)
                        .AddOption("Just passing by.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(721533, 17))
                        {
                            client.Inventory.Remove(721533, 17, stream);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 4);
                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have enough diamonds!")
                           .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Inventory.Contain(721534, 17))
                        {
                            client.Inventory.Remove(721534, 17, stream);
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 6);
                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have enough diamonds!")
                           .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.Contain(721535, 17))
                        {
                            client.Inventory.Remove(721535, 17, stream);
                            if (Role.Core.Rate(0.003))
                            {
                                var gems = new uint[]
                            {
                                    Database.ItemType.RDG,
                                    Database.ItemType.RFG,
                                    Database.ItemType.RBG,
                                    Database.ItemType.KYG,
                                    Database.ItemType.VIG,
                                    Database.ItemType.MOG
                            };
                                client.Inventory.Add(stream, (uint)Program.GetRandom.Next(0, gems.Length), 1);
                            }
                            else
                            {
                                var gems = new uint[]{
                                    700001,
                                    700011,
                                    700021,
                                   700031,
                                    700041,
                                    700051,
                                    700061
                                };
                                client.Inventory.Add(stream, (uint)Program.GetRandom.Next(0, gems.Length), 1);
                            }

                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have enough diamonds!")
                           .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(721536, 17))
                        {
                            client.Inventory.Remove(721536, 17, stream);
                            client.Inventory.Add(stream, 721540, 1);
                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have enough diamonds!")
                           .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Lab1)]
        public static void OldExplorer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Do you wish to enter the second level of Labyrinth? Give me a SkyToken.")
                        .AddOption("Yes, send me to the next map.", 1)
                        .AddOption("No.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721537, 1))
                        {
                            client.Inventory.Remove(721537, 1, stream);
                            client.Teleport(104, 108, 1352);
                        }
                        else
                        {
                            dialog.AddText("You don't have a SkyToken!")
                                .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Lab2)]
        public static void OldExplorer2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Do you wish to enter the second level of Labyrinth? Give me an EarthToken.")
                        .AddOption("Yes, send me to the next map.", 1)
                        .AddOption("No.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721538, 1))
                        {
                            client.Inventory.Remove(721538, 1, stream);
                            client.Teleport(321, 123, 1353);
                        }
                        else
                        {
                            dialog.AddText("You don't have an EarthToken!")
                                .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Lab3)]
        public static void OldExplorer3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Do you wish to enter the second level of Labyrinth? Give me an SoulToken.")
                        .AddOption("Yes, send me to the next map.", 1)
                        .AddOption("No.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721539, 1))
                        {
                            client.Inventory.Remove(721539, 1, stream);
                            client.Teleport(13, 297, 1354);
                        }
                        else
                        {
                            dialog.AddText("You don't have an EarthToken!")
                                .AddOption("I see.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Lab4)]
        public static void OldExplorerquite(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Send me to Twin City.")
                        .AddOption("Yes.", 1)
                        .AddOption("No.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }

        #endregion
        #region MoonBox Quest
        //[6100] Maggie
        [NpcAttribute(NpcID.Maggie)]
        public static void Maggie(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721010, 1) && client.Inventory.Contain(721011, 1) && client.Inventory.Contain(721012, 1)
                            && client.Inventory.Contain(721013, 1) && client.Inventory.Contain(721014, 1) && client.Inventory.Contain(721015, 1))
                        {
                            dialog.AddText("Wow. I can't believe you were able to obtain all six tokens. I will use these tokens to teleport you");
                            dialog.AddText("to the life tatic where you can help some poor soul. When you teleport, the tokens will be formed into a soul jade.");
                            dialog.AddText("Give this jade to LonelyGhost to save the ghosts soul. You will receive a MoonBox for your kindness. Are you ready?");
                            dialog.AddOption("Yes, teleport me.", 3);
                            dialog.AddOption("No.", 255);
                            dialog.AddAvatar(5);
                            dialog.FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Hello " + client.Player.Name + ". My name is Maggie. I tried to conquer these tatics many years ago and was killed. ")
                            .AddText("I chose to gaurd the entrance in the afterlife to stop others from following in my footsteps. If you choose to ")
                            .AddText("ignore my warning, I will send you in. I can't control what tatic I send you to unless you have all tokens.")
                            .AddOption("Tokens?", 1)
                            .AddOption("This is too dangerous, I must leave at once.", 255).AddAvatar(5).FinalizeDialog();
                        }
                        break;
                    }

                case 1:
                    {
                        dialog.AddText("There are six different tokens you must obtain from killing monsters. The monsters in each tatic will drop a different ")
                            .AddText("token. Once you have all six, I can can channel them for you and teleport you to the Life Tatic where you can help save ")
                            .AddText("some poor souls. I should warn you, there is one more tatic you can be sent to called the Death Tatic. Like the name suggests,")
                            .AddText("if you get sent their, you will die. Good luck adventurer.")
                            .AddOption("Send me to a tatic!", 2)
                            .AddOption("This is too dangerous, I must leave at once.", 255).AddAvatar(5).FinalizeDialog();
                        break;

                    }

                case 2:
                    {
                        if (Role.Core.Rate(0.05))
                        {
                            client.Teleport(211, 156, 1049);
                        }
                        else
                        {
                            var taticNum = Program.GetRandom.Next(0, 101);
                            //Send to a tatic based off random number
                            if (taticNum < 17)
                                client.Teleport(211, 156, 1043);
                            else if (taticNum < 33)
                                client.Teleport(211, 156, 1044);
                            else if (taticNum < 49)
                                client.Teleport(211, 156, 1045);
                            else if (taticNum < 65)
                                client.Teleport(211, 156, 1046);
                            else if (taticNum < 81)
                                client.Teleport(211, 156, 1047);
                            else
                                client.Teleport(211, 156, 1048);
                        }
                        break;
                    }

                case 3:
                    {
                        if (client.Inventory.Contain(721010, 1) && client.Inventory.Contain(721011, 1) && client.Inventory.Contain(721012, 1)
                    && client.Inventory.Contain(721013, 1) && client.Inventory.Contain(721014, 1) && client.Inventory.Contain(721015, 1))
                        {
                            //remove the 6 tokens
                            client.Inventory.Remove(721010, 1, stream);
                            client.Inventory.Remove(721011, 1, stream);
                            client.Inventory.Remove(721012, 1, stream);
                            client.Inventory.Remove(721013, 1, stream);
                            client.Inventory.Remove(721014, 1, stream);
                            client.Inventory.Remove(721015, 1, stream);
                            // add the soul item 

                            client.Inventory.Add(stream, 721072, 1);
                            client.Teleport(211, 156, 1050);
                        }
                        break;
                    }
            }
        }
        // [6120 - 6126] Ghost
        #region Ghost
        [NpcAttribute(NpcID.Ghost)]
        public static void Ghost(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721010, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I'm able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out!", 1)
                            .AddOption("Thanks!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer, but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I'll get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721010, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("You dont have the token to teleport to the next map!")
                          .AddOption("I'll get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost1)]
        public static void Ghost1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721011, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I'm able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out!", 1)
                            .AddOption("Thanks!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer, but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721011, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("You dont have the token to teleport to the next map!")
                          .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }


        [NpcAttribute(NpcID.Ghost2)]
        public static void Ghost2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721012, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I'm able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out!", 1)
                            .AddOption("Thanks!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer, but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I'll get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721012, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("You dont have the token to teleport to the next map!")
                          .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost3)]
        public static void Ghost3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721013, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I'm able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out!", 1)
                            .AddOption("Thanks!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer, but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721013, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("You dont have the token to teleport to the next map!")
                          .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost4)]
        public static void Ghost4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721014, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I'm able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out!", 1)
                            .AddOption("Thanks!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer, but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721014, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("You dont have the token to teleport to the next map!")
                          .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }
        [NpcAttribute(NpcID.Ghost5)]
        public static void Ghost5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721015, 1))
                        {

                            dialog.AddText("Since you have a token to this tatic, I'm able to harness its power to send you out. Are you ready?")
                            .AddOption("Yes, send me out!", 1)
                            .AddOption("Thanks!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I wish I could help you adventurer, but I need the token the monsters are holding in order to send you out.")
                            .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721015, 1))
                        {
                            client.Teleport(35, 48, 1042);
                        }
                        else
                        {
                            dialog.AddText("You dont have the token to teleport to the next map!")
                          .AddOption("I will get one!", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.Ghost6)]
        public static void Ghost6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        dialog.AddText("I'm so sorry, but I can't help you. You must die like I did in this tatic.")
                        .AddOption("I understand.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
            }
        }
        #endregion

        //[6200] Fortuneteller
        [NpcAttribute(NpcID.Fortuneteller)]
        public static void Fortuneteller(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("I can tell you your future. Would you like me to tell you what awaits you?")
                            .AddOption("Tell me!", 1)
                            .AddOption("I prefer the mystery.", 255).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Teleport(29, 30, 1042);
                        break;
                    }
            }
        }

        // for [6110 - 6116] GuardianGod
        #region GuardianGod
        [NpcAttribute(NpcID.GuardianGod)]
        public static void GuardianGod(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You've entered the Peace Tatic. If you've not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks!", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GuardianGod1)]
        public static void GuardianGod1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You've entered the Chaos Tatic. If you've not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks!", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod2)]
        public static void GuardianGod2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You've entered the Deserted Tatic. If you've not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks!", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }
        #region Garment~Try
        [NpcAttribute(NpcID.Garm)]
        public static void Garm(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You may try on our garments from the Shopping Mall here.")
                       .AddOption("Preview a garment for 10 seconds.", 1)
                       .AddOption("Just passing by.", 255).AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("First you need to know the garment name, you can check the Shopping Mall for the names.").
                        AddInput("Garment Name: ", 2).
                        AddOption("I~See", 3).AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        var item = Database.Server.ItemsBase.Values.FirstOrDefault(i => i.Name.ToLower() == Input.ToLower());
                        if (item == null) { dialog.Text("Wrong name, try again.").AddOption("I'll try again.", 1).AddOption("Never~mind.", 254).AddAvatar(3).FinalizeDialog(); return; }
                        if (client.Equipment.FreeEquip((Role.Flags.ConquerItem.Garment)))
                        {
                            if (Database.ItemType.ItemPosition(item.ID) == 9)
                            {
                                client.Send(stream.ItemGarm(item.ID));
                                //client.Send(new MsgItemInfo(true) { ItemUID = 1, ItemID = item.ID, Mode = Enums.ItemMode.Default, Position = 9 });
                                client.Player.RemoveStamp = DateTime.Now.AddSeconds(10);
                                client.Player.RemoveAfter = true;
                                dialog.Text("This looks great on you, you should buy it!").
                                AddOption("Yeah!", 34).
                                AddOption("Thanks!", 254).AddAvatar(3).FinalizeDialog();
                            }
                            else
                            {
                                dialog.Text("Wrong garment name, check Shopping Mall.").
                                Option("Show garments.", 3).
                                Option("Thanks.", 254).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.Text("Sorry, you have to take off your garment.").
                            Option("Thanks.", 255).AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        [NpcAttribute(NpcID.GuardianGod3)]
        public static void GuardianGod3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Prosperous Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod4)]
        public static void GuardianGod4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Disturbed Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod5)]
        public static void GuardianGod5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You have entered the Calmed Tatic. If you have not already, kill the monsters until you get a CommandToken. That is the ")
                        .AddText("only way you can leave this awful place. Good luck adventurer.")
                        .AddOption("Thanks", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuardianGod6)]
        public static void GuardianGod6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("I am so sorry to tell you that you are in the Death Tatic. There is no way to leave this place besides death.")
                        .AddOption("Oh my", 255).AddAvatar(32).FinalizeDialog();
                        break;
                    }
            }
        }

        #endregion
        //[7660 - 7665] LonelyGhost
        #region LonelyGhost
        [NpcAttribute(NpcID.LonelyGhost6)]
        public static void LonelyGhost6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    dialog.AddText("We have been trapped here for many years. Few challengers have a chance to arrive here. You are a real conqueror.");
                    dialog.AddOption("Who are you?", 1);
                    dialog.FinalizeDialog();
                    break;
                case 1:
                    dialog.AddText("We were from an old Kingdom. Our rivals made the mystic tactics. We failed to break through them and died.");
                    dialog.AddOption("I see", 2);
                    dialog.FinalizeDialog();
                    break;
                case 2:
                    dialog.AddText("I'm trapped here and cannot get revived. Since you have passed the tactics, would you like to help me get reborn?");
                    dialog.AddOption("How can I help you?", 3);
                    dialog.FinalizeDialog();
                    break;
                case 3:
                    dialog.AddText("We cannot get reborn unless someone would like to take us out. One person can take only one ghost at a time. Will you help me?");
                    dialog.AddOption("No problem", 4);
                    dialog.AddOption("Sorry, I'm very busy", 255);
                    dialog.FinalizeDialog();
                    break;
                case 4:
                    dialog.AddText("You only need to spare a little time. I want to get reborn very much. Please kindly have mercy for me.");
                    dialog.AddOption("I shall help you", 5);
                    dialog.AddOption("I want to leave here", 10);
                    dialog.FinalizeDialog();
                    break;
                case 5:
                    dialog.AddText("I appreciate your help. Now I can get reborn when I teleport you out. I'll give you a MoonBox as a reward for your help. Use it to get my rare items.");
                    dialog.AddOption("Thank you, let me go now", 6);
                    dialog.AddOption("I shall leave later", 255);
                    dialog.FinalizeDialog();
                    break;
                case 6:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(26, 36, 1042);
                            dialog.AddText("Thank you once again! Here's your reward!");
                            dialog.AddOption("Thanks", 255);
                            dialog.FinalizeDialog();
                        }
                        else
                        {
                            client.Teleport(26, 36, 1042);
                            dialog.AddText("How did you get in here without a SoulJade?! You must bring me a SoulJade!")
                          .AddOption("I see", 255).FinalizeDialog();
                        }
                        break;

                    }
                case 10:
                    {
                        dialog.AddText("Are you sure you want to leave without getting your reward?");
                        dialog.AddOption("I shall stay", 255);
                        dialog.AddOption("I am sure", 11);
                        dialog.FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        client.Teleport(26, 36, 1042);

                        client.Inventory.Remove(721072, 1, stream);
                        dialog.AddText("You have been teleported back to Maggie!");
                        dialog.AddOption("Thank you", 255);
                        dialog.FinalizeDialog();
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.LonelyGhost)]
        public static void LonelyGhost(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }


        [NpcAttribute(NpcID.LonelyGhost1)]
        public static void LonelyGhost1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost2)]
        public static void LonelyGhost2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost3)]
        public static void LonelyGhost3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost4)]
        public static void LonelyGhost4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }

        [NpcAttribute(NpcID.LonelyGhost5)]
        public static void LonelyGhost5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {

                            dialog.AddText("Can it be? Is that... YES!!! it's a SoulJade. I thought I would never see one of those. Please free me from this prision")
                            .AddText("so I can join my family. I will give you this MoonBox I acquired before I died. Will you help me?")
                            .AddOption("Yes, (use SoulJade)", 1)
                            .AddOption("Sorry I cannoy help you yet", 255).AddAvatar(32).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                            .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721072, 1))
                        {
                            client.Inventory.Remove(721072, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MoonBox, 1);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.AddText("You cannot help us without a SoulJade. Please leave here until you get one.")
                          .AddOption("I will get one at once", 255).AddAvatar(6).FinalizeDialog();
                        }
                        break;

                    }
            }
        }
        #endregion
        #endregion
        #region 2rb Quest

        [NpcAttribute(NpcID.secondquest)]
        public static void secondquest(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Reborn == 1 && client.Player.Level >= 110)
                        {


                            data.AddText("You've met the requirements for the 2nd rebirth.\n")
                                .AddText("You'll face tough challenges till you complete the big quest.\n")
                                .AddText("Once you manage to get reborned you'll receive a unique aura, be able to learn Bless, and enjoy many benefits.")
                                .AddOption("Hear about the quest.", 1)
                                .AddOption("Get 2nd Reborned.", 4)
                                .AddOption("I`ll~think~it~over.", 255)
                                .AddAvatar(105)
                                .FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You're already 2nd Reborn.")
                                .AddOption("You're right.", 255)
                                .AddAvatar(105)
                                .FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Team != null)
                        {
                            foreach (var members in client.Team.Temates)
                            {
                                if (members.client != null)
                                {
                                    if (members.client.Player.UID != client.Player.UID)
                                    {
                                        if (Role.Core.GetDistance(client.Player.X, client.Player.Y, members.client.Player.X, members.client.Player.Y) < 18)
                                        {
                                            members.client.Teleport(608, 632, 1700, client.Player.UID);
                                        }
                                    }
                                }
                            }
                        }
                        client.Teleport(608, 632, 1700);
                        //else
                        //{
                        //    client.Teleport(608, 632, 1700);

                        //}
                        break;
                    }
                case 4:
                    {
                        if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1) || client.Inventory.Contain(723701, 1, 1))
                            {
                                data.AddText("If you have an ExemptionToken for me I can help you through 2nd rebirth.")
                                    .AddOption("Here is the ExemptionToken.", 3)
                                    .AddOption("I`ll~think~about~it.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have an Exemption Token.")
                                    .AddOption("I see.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you need to be at least Level 120 for 2nd rebirth.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }



                        break;
                    }
                case 3:
                    {
                        data.AddText("Which class would you like to reborn into?")
                            .AddOption("Trojan.", 11)
                            .AddOption("Warrior.", 21)
                            .AddOption("Archer.", 41)
                            .AddOption("Water Taoist.", 132)
                            .AddOption("Fire Taoist.", 142)
                          //.AddOption("Ninja.", 51)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 11:
                case 21:
                case 41:
                case 132:
                case 142:
                case 51:
                    {

                        if (!client.Inventory.HaveSpace(4))
                        {
                            data.AddText("Sorry, but you need at least 4 free spaces in your inventory.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1) || client.Inventory.Contain(721259, 1, 1))
                            {
                                client.Inventory.Remove(721259, 1, stream);
                                if (client.RebornGem != 0)
                                {
                                    client.Inventory.Add(stream, (uint)(700000 + client.RebornGem), 1);
                                    client.RebornGem = 0;

                                }
                                else
                                {
                                    foreach (var item in client.Equipment.CurentEquip)
                                    {
                                        if (item.Bless == 0)
                                        {
                                            item.Bless = 1;
                                            item.Mode = Role.Flags.ItemMode.Update;
                                            item.Send(client, stream);
                                            break;
                                        }
                                    }
                                }
                                switch (Option)
                                {
                                    case 161:
                                    case 11:
                                    case 21:
                                    case 51:
                                    case 61:
                                    case 71:
                                    case 81:
                                        {
                                            client.Inventory.Add(stream, 410077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Poison);
                                            break;
                                        }
                                    case 41:
                                        {
                                            client.Inventory.Add(stream, 500077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Shield);
                                            break;
                                        }
                                    case 132:
                                    case 142:

                                        {
                                            client.Inventory.Add(stream, 421077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.MP);
                                            break;
                                        }
                                }

                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have a Celestial Stone.")
                                    .AddOption("I~see.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1) || client.Inventory.Contain(723701, 1, 1))
                            {
                                client.Inventory.Remove(723701, 1, stream);
                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have an Exemption Token.")
                                    .AddOption("I~see.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                            }
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Arthur)]
        public static void Arthur(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        {
                            data.AddText("You can get Ghost Horns from the Hill Spirits. When you got one i can make an Evil Tooth for you")
                                .AddOption("i want Evil Tooth", 1)
                                 .AddOption("I want ImmortalStone", 2)
                                 .AddOption("Make An ImpureVigor.", 3)
                                 .AddOption("Teleport~to~Twin~City", 5)
                       .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                       .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(722722, 1, 0))
                            {
                                client.Inventory.Remove(722722, 1, stream);
                                client.Inventory.Add(stream, 722721);
                                data.AddText("You successfully exchange the (GhostHorn) for an EvilTooth!")
                           .AddOption("Thank you.", 255).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I'm sorry, you need at least x1 GhostHorn in order for me to help you.")
                          .AddOption("I see.", 255).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                       .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(722726, 1, 0))
                            {
                                client.Inventory.Remove(722726, 1, stream);
                                client.Inventory.Add(stream, 722728);
                                data.AddText("You successfully exchange the FeatherStone for an ImmortalStone!")
                           .AddOption("Thank you.", 255).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I'm sorry, you need at least x1 ImmortalStone in order for me to help you.")
                          .AddOption("I see.", 255).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        {
                            if (!client.Inventory.HaveSpace(3))
                            {
                                data.AddText("Please make 3 more space in your inventory.")
                       .AddOption("Let me check.", 255).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Contain(722729, 3, 0))
                            {
                                client.Inventory.Remove(722729, 3, stream);
                                client.Inventory.Add(stream, 722730);
                                data.AddText("You successfully exchange the VigorFragment for an ImpureVigor!")
                           .AddOption("Thank you.", 255).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("I'm sorry, you need at least x3 VigorFragment in order for me to help you.")
                          .AddOption("I see.", 255).FinalizeDialog();
                            }
                        }
                        break;
                    }

                case 5:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.EarthSeal)]
        public static void EarthSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("A HillSpirit will be released you want continue?")
                            .AddOption("Yes", 1)
                            .AddOption("No", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Moss, 1) && client.Inventory.Contain(Database.ItemType.SoulAroma, 1)
                            && client.Inventory.Contain(Database.ItemType.DreamGrass, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Moss, 1, stream);
                            client.Inventory.Remove(Database.ItemType.SoulAroma, 1, stream);
                            client.Inventory.Remove(Database.ItemType.DreamGrass, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3632, 450, 876, 1, 1, 1);//ghost  horn
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.WaterSeal)]
        public static void WaterSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You need an Evil Tooh to open the water seal , Attention When the seal is open A SwiftDevil will come out!")
                            .AddOption("Oky Open it", 1)
                            .AddOption("no", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Moss, 1) && client.Inventory.Contain(Database.ItemType.SoulAroma, 1)
                            && client.Inventory.Contain(Database.ItemType.DreamGrass, 1) && client.Inventory.Contain(Database.ItemType.EvilTooth, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Moss, 1, stream);
                            client.Inventory.Remove(Database.ItemType.SoulAroma, 1, stream);
                            client.Inventory.Remove(Database.ItemType.DreamGrass, 1, stream);
                            client.Inventory.Remove(Database.ItemType.EvilTooth, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3633, 886, 443, 1, 1, 1);//ghost  horn
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass, EviTooh").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.FireSeal)]
        public static void FireSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("When the seal is open A Banshee will come out! Are you ready")
                            .AddOption("yes", 1)
                            .AddOption("not yet", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Moss, 1) && client.Inventory.Contain(Database.ItemType.SoulAroma, 1)
                            && client.Inventory.Contain(Database.ItemType.DreamGrass, 1) && client.Inventory.Contain(Database.ItemType.ImmortalStone, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Moss, 1, stream);
                            client.Inventory.Remove(Database.ItemType.SoulAroma, 1, stream);
                            client.Inventory.Remove(Database.ItemType.DreamGrass, 1, stream);
                            client.Inventory.Remove(Database.ItemType.ImmortalStone, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3634, 927, 937, 1, 1, 1);//ghost  horn
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass, ImmortalStone").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CleanSing)]
        public static void CleanSing(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("there is floating light in the stove you can't see it  clearly . what are you coming for ?")
                            .AddOption("Cleanse my ImpureVigor", 1)
                            .AddOption("just passing by.", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Moss, 1) && client.Inventory.Contain(Database.ItemType.SoulAroma, 1)
                            && client.Inventory.Contain(Database.ItemType.DreamGrass, 1) && client.Inventory.Contain(Database.ItemType.ImpureVigor, 3))
                        {
                            client.Inventory.Remove(Database.ItemType.Moss, 1, stream);
                            client.Inventory.Remove(Database.ItemType.SoulAroma, 1, stream);
                            client.Inventory.Remove(Database.ItemType.DreamGrass, 1, stream);
                            client.Inventory.Remove(Database.ItemType.ImpureVigor, 3, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3635, 710, 743, 1, 1, 1);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass - x3 ImmortalStone").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.SatanSeal)]
        public static void SatanSeal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Satan is Imprisoned here , you need a squama bead to open this seal. would you like to open it and summon satan right away?")
                            .AddOption("Yeah", 1)
                            .AddOption("I've go to go.", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(722727, 1))
                        {
                            client.Inventory.Remove(722727, 1, stream);
                            Database.Server.AddMapMonster(stream, client.Map, 3644, 335, 334, 1, 1, 1);
                            client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "energy" });
                        }
                        else
                        {
                            data.AddText("sorry you don't have the requirements items x1 Moss, SoulAroma , DreamGrass - x3 ImmortalStone").AddOption("oh~sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Bruce)]
        public static void Bruce(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Quest2rbStage == 1 && client.Player.Quest2rbS2Point >= 70000)
                        {
                            data.AddText("you have dont the first stage and second stage now lets talk about the third now you must kill this monster in the order \n 1: Andrew 2: Peter 3: Philip 4: Timothy \n 5: Daphne 6: Victorie 7: Wayne 8: Theodore")
                                .AddOption("begin the third sage", 1)
                                 .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You did'nt finish the first stage! you have " + client.Player.Quest2rbS2Point + " .").AddOption("oh sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[1] { "fastflash" });
                        client.SendSysMesage("go slayer the bosses then come to me");
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Stanleyq)]
        public static void Stanleyq(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Quest2rbBossesOrderby == 8)
                        {
                            data.AddText("great hero you have dont the third sage and now i want you bring back to me SquamaBead from killing any monster his/her names contains Lord.")
                                 .AddOption("well done.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You havn't kill the bosses ! go kill them and come to me again .").AddOption("oh sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        #endregion
        #region Guild Beast
        [NpcAttribute(NpcID.GuildBeast)]
        public static void GuildBeast(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("I was sent here to protect the castle from the terrible beast that's hidden inside.\n")
                              .AddText("Only the Guild Leader of the guild that won the the Guild War can summon the GuildBeast!\n")
                              .AddText("However, 1kk gold from your Guild Fund has to be given to me!")
                              .AddOption("Summon the GuildBeast.", 1)
                              .AddOption("Claim prize.", 2)
                              .AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                            && client.Player.MyGuild != null
                            && client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader
                            && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            if (!client.Player.SpawnGuildBeast)
                            {
                                if (client.Player.MyGuildMember.MoneyDonate >= 1000000)
                                {
                                    client.Player.MyGuildMember.MoneyDonate -= 1000000;
                                    client.Player.SpawnGuildBeast = true;
                                    dialog.AddText("The GuildBeast will spawn at 20:00! Make sure you get ready to fight it!")
                                          .AddOption("Thanks.", 255)
                                          .AddAvatar(7)
                                          .FinalizeDialog();
                                }
                                else
                                {
                                    dialog.AddText("You don't have enough guild fund!")
                                          .AddOption("Sorry.", 255).AddAvatar(7).FinalizeDialog();

                                }
                            }
                            else
                            {
                                dialog.AddText("You've already paid to summon the GuildBeast! It will appear at 20:00!")
                                      .AddOption("I see.", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID && client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            dialog.AddText("Only the Guild Leader of the Guild that won the Guild War can summon the Guild Beast!\n")
                                  .AddText("The GuildBeast can't be spawned during the Guild War!")
                                  .AddOption("I see.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Only the leader of the guild that won the Guild War can summon the Guild Beast!")
                                  .AddOption("I see", 255).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        break;
                    }
                case 2:
                    {
                        if (
                        client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                                         && client.Player.MyGuild != null
                                         && client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader
                                         || client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader &&
                                         MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            if (client.Player.GuildBeastClaimd)
                            {


                                client.Player.GuildBeastClaimd = false;
                                client.SendSysMesage("You've been rewarded a DragonBall from Guild Beast, because no one killed him.");
                                client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                            }
                            else
                            {
                                dialog.AddText("Nothing to claim.")
                                      .AddOption("Okay.", 255)
                                      .AddAvatar(7).FinalizeDialog();

                            }
                        }
                        else
                        {
                            dialog.AddText("You must be the Guild Leader of the winning Guild to summon Guild Beast.")
                                  .AddOption("Okay.", 255)
                                  .AddAvatar(7).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region ArmyToken

        [NpcAttribute(NpcID.TwinAramy)]
        public static void TwinAramy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, I've lost my Army Token! It has brung shame to my family, and this is my only chance to redeem myself. Can you retrieve it?")
                        .AddOption("I'll go get it!", 255)
                        .AddOption("I got the Army Token!", 1)
                        .AddOption("Just passing by.", 255)
                        .AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(3).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(721117, 1))
                        {
                            client.Inventory.Remove(721117, 1, stream);
                            Role.Player.Reward(client, stream, "Exchange ArmyToken.");
                            data.AddText("Wow, you actually did it! You've brung great honor today, so here is your reward.")
                           .AddOption("Thanks!", 255)
                           .AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have the required item.")
                            .AddOption("Okay.", 255)
                            .AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        #endregion
        #region SnakeKing

        [NpcAttribute(NpcID.Snake)]
        public static void Snake(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you want to leave?")
                        .AddOption("Yes", 1)
                        .AddOption("Just passing by", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(723, 573, 1015);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GreenSnake)]
        public static void GreenSnake(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do not kill me, please! We have precious jewels in the nest, if you defeat our 17 Snake Formation, you can have them!")
                        .AddOption("The formation of 17 snakes, what is it?", 1).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("The formation is organized by 17 islands joined by lotus. My brother preserve them. The king keeps the jewelry in the last island!")
                        .AddOption("I want to go.", 2)
                        .AddOption("I want to stay.", 255).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(448, 356, 1063);
                        break;
                    }
            }
        }
        #endregion
        #region SkyPass
        public static void MikeMain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var skypass = id - 2016 + 1;
            var skypassrand = Program.GetRandom.Next(2);
            const uint mapid = 1040;
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("hello, we brothers watch the battle stages of different levels on this floor. which stage you need");
                        dialog.Text("to conquer depends on your ability . when you test starts, you must defeat the monsters on the stage and collect a PassToken to continue you challange so ?");
                        dialog.Option("im ready", Convert.ToByte(skypass));
                        dialog.Option("teleport me to twincity", 6);
                        dialog.AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (skypassrand == 1)
                            client.Teleport(543, 330, mapid);
                        else client.Teleport(368, 588, mapid);
                        break;
                    }
                case 2:
                    {
                        if (skypassrand == 1)
                            client.Teleport(492, 280, mapid);
                        else client.Teleport(320, 540, mapid);
                        break;
                    }
                case 3:
                    {
                        if (skypassrand == 1)
                            client.Teleport(436, 224, mapid);
                        else client.Teleport(272, 492, mapid);
                        break;
                    }
                case 4:
                    {
                        if (skypassrand == 1)
                            client.Teleport(393, 181, mapid);
                        else client.Teleport(224, 444, mapid);
                        break;
                    }
                case 5:
                    {
                        if (skypassrand == 1)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 721109, 1);
                                dialog.AddText("here you go , deliver this SkyPrizeToken! to god cloud and claim your reward").FinalizeDialog();
                                client.Teleport(141, 240, mapid);

                            }
                            else
                            {
                                dialog.AddText("please make some room from your inventory!")
                                    .AddOption("oh sorry", 255);
                            }
                        }
                        else client.Teleport(176, 396, mapid);
                        break;
                    }
                case 6:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Mike)]
        public static void Mike(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("This is the way to sky pass are you here to challange the sky pass?");
                        dialog.Option("please show me the way", 1);
                        dialog.Option("just passing by", 255);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.Text("don't rush into dangers ! the sky pass was desinged by my master, \n the God Cloud he trapped horrific monsters in the pass to test out the real hero.");
                        dialog.Option("can i have a look?", 2);
                        dialog.Option("i'm leave", 255);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.Text("sure ! everyone has a chance to challange it . if you pass 5 floors at a time, you will see my great master.");
                        dialog.Option("im up for it?", 3);
                        dialog.Option("i'm leave", 255);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.Text("the pass consists of 5 Floors , and each floor is guarded by the monsters of different level");
                        dialog.Option("Lets go", 5);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(721109, 1) || client.Inventory.Contain(721100, 1)
                            && client.Inventory.Contain(721101, 1) || client.Inventory.Contain(721102, 1)
                            && client.Inventory.Contain(721103, 1) || client.Inventory.Contain(721108, 1))
                        {
                            dialog.Text("no cheathing ! A true hero must hunt for his own tokens inside the sky pass ! please get rid of those !");
                            dialog.Option("sorry ", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            client.Teleport(596, 384, 1040);
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MikeFinishSkypass)]
        public static void MikeFinishSkypass(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("ah , you must be the hero who broke through 5 tough floors in one time ! you deserve to be rewarded . \n for your great perseverance ! i hope to see you again");
                        dialog.Option("Claim my reward", 1);
                        dialog.AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(721109, 1))
                        {
                            dialog.Text("there are two Treasure boxes here , 5 Meteors in the first box. and the second box has a chance of giviing 7 meteors, 1 Dragonball or some money !\n which would you like to receive?");
                            dialog.Option("Box 1", 2);
                            dialog.Option("Box 2", 3);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("I'm sorry but i shall only reward those who have a SkyPrizeToken!");
                            dialog.Option("teleport me to twincity", 4);
                            dialog.Option("lemme think !", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            dialog.Text("here you go , enjoy!");
                            dialog.Option("thanks!", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                            client.Inventory.Add(stream, Database.ItemType.Meteor, 5);
                            client.Inventory.Remove(721109, 1, stream);
                            client.Teleport(428, 378, 1002);
                        }
                        else
                        {
                            dialog.Text("please make some room in your inventory");
                            dialog.Option("oh ok !", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.HaveSpace(5))
                        {
                            if (Role.Core.RateDouble(30))
                            {
                                client.Player.Money += 250000;
                                dialog.Text("Congratulations ! you have received 250,000 silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Teleport(428, 378, 1002);
                            }
                            else if (Role.Core.RateDouble(15))
                            {
                                dialog.Text("Congratulations ! you have received5 Meteors! ");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Inventory.Add(stream, Database.ItemType.Meteor, 5);
                                client.Inventory.Remove(721109, 1, stream);
                                client.Teleport(428, 378, 1002);
                            }
                            else if (Role.Core.RateDouble(30))
                            {
                                client.Player.Money += 1000000;
                                dialog.Text("Congratulations ! you have received 1,000,000 silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has complete the skypass quest and Received 1,000,000 silver!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                client.Teleport(428, 378, 1002);
                            }
                            else if (Role.Core.RateDouble(0.005))
                            {
                                dialog.Text("Congratulations ! you have received 1 DragonBall silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has complete the skypass quest and Received 1 DragonBall!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                client.Teleport(428, 378, 1002);
                            }
                            else
                            {
                                client.Player.Money += 100000;
                                dialog.Text("Congratulations ! you have received 100,000 silvers!");
                                dialog.AddAvatar(67).FinalizeDialog();
                                client.Teleport(428, 378, 1002);
                            }
                        }
                        else
                        {
                            dialog.Text("please make 5 room free in your inventory");
                            dialog.Option("oh ok !", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        public static void MikeSkypass(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            var skypass = id - 2011 + 1;
            if (id == 2015)
                skypass += 4;
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(721099 + skypass, 1))
                        {

                            dialog.Text("i can take you out of here if you give me your PassToken" + skypass);
                            dialog.Option("Yea", Convert.ToByte(skypass));
                            dialog.AddAvatar(30).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("i'm sorry but it seem you don't have a PassToken. Hunt one first and I'll help you getting out." + skypass);
                            dialog.Option("Common", 255);
                            dialog.AddAvatar(30).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        client.Inventory.Remove(721100, 1, stream);
                        client.Teleport(595, 383, 1040);
                        break;
                    }
                case 2:
                    {
                        client.Inventory.Remove(721101, 1, stream);
                        client.Teleport(543, 330, 1040);
                        break;
                    }
                case 3:
                    {
                        client.Inventory.Remove(721102, 1, stream);
                        client.Teleport(492, 280, 1040);
                        break;
                    }
                case 4:
                    {
                        client.Inventory.Remove(721103, 1, stream);
                        client.Teleport(436, 224, 1040);
                        break;
                    }
                case 9:
                    {
                        client.Inventory.Remove(721108, 1, stream);
                        client.Teleport(393, 181, 1040);
                        break;
                    }
            }
        }

        #endregion
        #region MeteorTear
        [NpcAttribute(NpcID.Minner)]
        public static void Minner(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.Contain(721000, 1) && !client.Inventory.Contain(721001, 1) && !client.Inventory.Contain(721002, 1))
                        {
                            dialog.Text("I'm so sad, I haven't seen my sister for a while and didn't get any notices from her, she should be in Phoenix Castle. Tell me if you see her.");
                            dialog.AddOption("Sure, I will.", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(721000, 1) && !client.Inventory.Contain(721001, 1) && !client.Inventory.Contain(721002, 1))
                        {
                            dialog.Text("I'm so sad, I haven't seen my sister for a while and didn't get any notices from her.");
                            dialog.AddOption("I got a letter from Milly.", 1);
                            dialog.AddOption("Sorry, I'm busy.", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        else if (!client.Inventory.Contain(721000, 1) && client.Inventory.Contain(721001, 1) && !client.Inventory.Contain(721002, 1))
                        {
                            dialog.Text("Go meet Joe in Desert City, near Mystic Castle entrance.");
                            dialog.AddOption("Okay.", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(721002, 1))
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                dialog.Text("Please free some room in your inventory.");
                                dialog.AddOption("Okay.", 255);
                                return;
                            }
                            client.Inventory.Remove(721002, 1, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorTear, 1);
                            dialog.Text("Oh, thanks for delivering that to Joe, take this Meteor Tear as a reward for your courage!");
                            dialog.AddOption("Thanks!", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        dialog.Text("Thank you, but I miss my darling Joe, I'm sure he's in the desert! Would appreciate it if you gave him this Guardian Star, it means a lot to me.");
                        dialog.AddOption("Sure! ", 2);
                        dialog.AddOption("I'm busy!", 255);
                        dialog.AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(721000, 1))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Remove(721000, 1, stream);
                                client.Inventory.Add(stream, 721001, 1);
                                dialog.Text("Thank you so much, take this Guardian Star and meet Joe in Desert City, near the Mystic Castle entrance.");
                                dialog.AddOption("I'm going.", 255);
                                dialog.AddAvatar(3).FinalizeDialog();
                            }
                            else
                            {
                                dialog.Text("Free some space from in inventory.");
                                dialog.AddOption("Okay.", 255);
                                dialog.AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.Text("You don't have the letter!");
                            dialog.AddOption("I'm going, sorry.", 255);
                            dialog.AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Milly)]
        public static void Milly(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("I haven't seen my sister in a while, and I got a letter for her would you like to deliver it for me please?");
                        dialog.Option("Sure!", 1);
                        dialog.Option("No, I'm busy.", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (!client.Inventory.Contain(721000, 1) && !client.Inventory.Contain(721001, 1))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Add(stream, 721000, 1);
                                dialog.Text("Here! Take this letter and meet my sister Minner in Bird Island.");
                                dialog.Option("Okay!", 255);
                            }
                            else
                            {
                                dialog.Text("Please free some room in your inventory.");
                                dialog.Option("Okay!", 255);
                            }
                        }
                        else
                        {
                            dialog.Text("I've already gave you the letter, go see my sister in Bird Island.");
                            dialog.Option("Okay!", 255);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Joe)]
        public static void Joe(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (!client.Inventory.Contain(721001, 1))
                        {
                            dialog.Text("This desert is killing me, it's so hot!");
                            dialog.Option("Yes, it is.", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("I can see you already have the Guardian Star, however I will ask for you to get me a Meteor and an Amrita!");
                            dialog.Option("Take them.", 1);
                            dialog.Option("Never~mind.", 255);
                            dialog.AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(1000030, 1) && client.Inventory.Contain(Database.ItemType.Meteor, 1)
                            && client.Inventory.Contain(721001, 1))
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Inventory.Remove(1000030, 1, stream);
                                client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                client.Inventory.Remove(721001, 1, stream);
                                client.Inventory.Add(stream, 721002, 1);
                                dialog.Text("I feel refreshed now! Here, take this Meteor and give it to Minner.");
                                dialog.Option("Okay.", 255);
                                dialog.AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                dialog.Text("Please free some room in your inventory!");
                                dialog.Option("Okay!", 255);
                                dialog.AddAvatar(67).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        client.Player.LootDragonBall = !client.Player.LootDragonBall;
                        break;
                    }
            }
        }

        #endregion
        #region AdvancedZone
        [NpcAttribute(NpcID.AdvancedZone)]
        public static void AdvancedZone(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Do you want to enter the Advanced Zone? be careful they are many dangers ahead!");
                        dialog.Option("yea", 1);
                        dialog.Option("Leave", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(1350, 1198, 1205);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MeteorZoneEnter)]
        public static void MeteorZoneEnter(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("i don't see many adventurers out this far! if you'd like i can teleport you to the next map, be warned though that none have ever returned from this depths since you can't use scroll inside !");
                        dialog.Option("Send Me in", 1);
                        dialog.Option("no thnaks", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(1039, 717, 1210);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MeteorZoneLeave)]
        public static void MeteorZoneLeave(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("i can't believe you've made it this far! you deserve my help do you want me to take you to twicity? !");
                        dialog.Option("yes please", 1);
                        dialog.Option("no thanks", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }

        #endregion
        #region VIPFREE
        [NpcAttribute(NpcID.vipfree)]
        public static void vipfree(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.VipLevel == 0)
                        {
                            client.Player.ExpireVip = DateTime.Now.AddDays(30);
                            client.Player.VipLevel = 6;
                            dialog.Text("You've claimed VIP6 for 30 days, have fun and enjoy!")
                                .AddOption("Thank you!", 255).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("You've claimed free VIP.").AddOption("Oh.", 255).FinalizeDialog();
                        }
                        /* if (client.Player.Class >= 40 && client.Player.Class <= 45)
                         {
                             dialog.AddText("Hello , i'm here to give you a VIP Level 6 for free 30 day! but its once per account so we recommand to use it on your archer")
                                 .AddOption("Claim It", 1)
     .AddOption("I~see.", 255)
     .AddAvatar(63).FinalizeDialog();
                         }
                         else
                         {
                             dialog.AddText("you are not archer class it will work only with archer class !")
 .AddOption("I~see.", 255)
 .AddAvatar(63).FinalizeDialog();
                         }*/
                        break;

                    }
                case 1:
                    {

                        if (!client.Player.CanClaimFreeVip)
                        {
                            Database.VIPSystem.CheckUp(client);
                        }
                        else
                        {
                            dialog.Text("You've already claimed free VIP.").AddOption("Oh.", 255).FinalizeDialog();

                        }
                        break;
                    }
            }
        }

        #endregion

        #region EggEvent
        [NpcAttribute(NpcID.Commandereasterquest)]
        public static void Commandereasterquest(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (DateTime.Now.Month == 3 && DateTime.Now.Day >= 17 || DateTime.Now.Month == 4 && DateTime.Now.Day <= 3)
                        {
                            if (client.Inventory.Contain(729922, 1) && client.Inventory.Contain(729923, 1)
                                 && client.Inventory.Contain(729924, 1)
                                  && client.Inventory.Contain(729925, 1)
                                   && client.Inventory.Contain(729926, 1))
                            {
                                if (client.Inventory.HaveSpace(5))
                                {
                                    client.Inventory.Remove(729922, 1, stream);
                                    client.Inventory.Remove(729923, 1, stream);
                                    client.Inventory.Remove(729924, 1, stream);
                                    client.Inventory.Remove(729925, 1, stream);
                                    client.Inventory.Remove(729926, 1, stream);
                                    if (client.Inventory.Contain(729921, 1))
                                        client.Inventory.Remove(729921, 1, stream);
                                    if (client.Player.Level < 70)
                                    {
                                        if (Role.Core.Rate(0.003))
                                        {
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received a DragonBall from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                        }
                                        else if (Role.Core.Rate(5))
                                        {
                                            client.GainExpBall(300, false, Role.Flags.ExperienceEffect.angelwing);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received a x1 Exp from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                        }
                                        else if (Role.Core.Rate(10))
                                        {
                                            client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received 3 Meteors from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                        }
                                        else if (Role.Core.Rate(20))
                                        {
                                            client.GainExpBall(100, false, Role.Flags.ExperienceEffect.angelwing);
                                            client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received x1 EXP and 3 Meteors from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                        }
                                    }
                                    else if (client.Player.Level >= 70 && client.Player.Level < 110)
                                    {
                                        if (Role.Core.Rate(0.002))
                                        {
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received a DragonBall from Commander", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                        }
                                        else if (Role.Core.Rate(4))
                                        {
                                            client.GainExpBall(300, false, Role.Flags.ExperienceEffect.angelwing);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received a 1/2 Exp from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                        }
                                        else if (Role.Core.Rate(9))
                                        {
                                            client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received  3 Meteors from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                        }
                                        else if (Role.Core.Rate(19))
                                        {
                                            client.GainExpBall(100, false, Role.Flags.ExperienceEffect.angelwing);
                                            client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + "has found all the egg fragments and received Exp and 3 Meteor from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                        }
                                        else if (Role.Core.Rate(5))
                                        {
                                            client.Inventory.Add(stream, 721170, 1);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received a HousePermit from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                        }
                                    }
                                    else
                                    {
                                        if (Role.Core.Rate(0.001))
                                        {
                                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received a DragonBall from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                        }
                                        else if (Role.Core.Rate(3))
                                        {
                                            client.GainExpBall(600, false, Role.Flags.ExperienceEffect.angelwing);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received 1/2 Exp from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                        }
                                        else if (Role.Core.Rate(10))
                                        {
                                            client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received 3 Meteor from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                        }
                                        else if (Role.Core.Rate(15))
                                        {
                                            client.GainExpBall(100, false, Role.Flags.ExperienceEffect.angelwing);
                                            client.Inventory.Add(stream, Database.ItemType.Meteor, 3);
                                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has found all the egg fragments and received x1 Exp and 3 Meteors from Commander ", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                        }
                                    }
                                    dialog.AddText("You've found all the eggs fargements! Here's your reward!").AddOption("Thanks!", 255).FinalizeDialog();
                                }
                                else
                                {
                                    dialog.AddText("Please free some room in your inventory.").AddOption("Oh.", 255).FinalizeDialog();

                                }
                            }
                            else
                            {
                                dialog.AddText("If you have some free time, I'll reward you. My precious EpicEgg was broken into fragments and scattered across the land upon my recent trip to Twin City. ");
                                dialog.AddText(" A demon with incredible power shot me with a bow, but I was protected by the Egg. It split into five fragments and one landed in each city. Just don't tell the Easter Bunny...");
                                dialog.AddOption("Tell me more about it!", 1);
                                dialog.AddOption("Yeah right..", 255);
                                dialog.FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.Text("The Easter Quest has already ended! Please come back next year!");
                            dialog.Option("Very~well.", 255);
                            dialog.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Oh, well lets just say, I'll give you whatever is in my bag! Meteors, DragonBalls, Plus Items, Garments.. what ever it takes.");
                        dialog.AddText(" All of it just to make sure that we get those Eggs safe without Easter Bunny knowing about it!");
                        dialog.AddOption("Alright, I'll help you!", 2);
                        dialog.AddOption("I don't have time for that.", 255);
                        dialog.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.AddText("Think about it, I'd go, but my leg got shot with an arrow... looking foward to seeing you again!");
                        dialog.AddText(" You just need to go to each city and look for the Easter Eggs! They contain fragments to make the ultimate EpicEgg!");
                        dialog.AddOption("Let's save Easter then!", 3);
                        dialog.AddOption("Maybe later.", 255);
                        dialog.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(729921, 1))
                        {
                            dialog.AddText("It seems like I already gave you a bag were you can keep the eggs fragments! What ");
                            dialog.AddText("are you still doing here? The damn rabbit is going to know I lost the eggs!");
                            dialog.AddOption("I'm on my way!", 255);
                            dialog.FinalizeDialog();
                        }
                        else if (client.Inventory.HaveSpace(2))
                        {
                            client.Inventory.Add(stream, 729921, 1);
                            dialog.AddText("Off you go! Make sure you come back in time with those Eggs so that the Bunny won't notice! Take this Feed with you ");
                            dialog.AddText("It will help you while grabbing the Eggs! Some crazy guys told me they moved!");
                            dialog.AddOption("Let's go then!", 255);
                            dialog.FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Please make some room in your inventory.");
                            dialog.AddOption("Alright", 255);
                            dialog.FinalizeDialog();
                        }
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.EasterEgg)]
        public static void EasterEgg(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        break;
                    }
            }
        }
        #endregion
        public static void SpaceMarks(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {

                            data.AddText("I`ll sell a WindSpell for 1,000 gold. Use that WindSpell to teleport back to me.")
                         .AddOption("Ok, give me.", 1).AddOption("No thanks.", 255).AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("Only a Water class can buy this teleport scroll.")
                           .AddOption("I see.", 255).AddAvatar(3).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            if (client.Player.Money >= 1000)
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    client.Player.Money -= 1000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    switch (id)
                                    {
                                        case 10031: client.Inventory.Add(stream, 1060025); break;
                                        case 10032: client.Inventory.Add(stream, 1060026); break;
                                        case 10033: client.Inventory.Add(stream, 1060027); break;
                                        case 10034: client.Inventory.Add(stream, 1060028); break;
                                        case 10035: client.Inventory.Add(stream, 1060029); break;
                                        case 10036: client.Inventory.Add(stream, 1060038); break;
                                        case 10037: client.Inventory.Add(stream, 1060031); break;
                                        case 10038: client.Inventory.Add(stream, 1060032); break;
                                        case 10039: client.Inventory.Add(stream, 1060033); break;
                                        case 10040: client.Inventory.Add(stream, 1060034); break;
                                        case 10041: client.Inventory.Add(stream, 1060035); break;
                                        case 10043: client.Inventory.Add(stream, 1060037); break;

                                    }
                                }
                                else
                                {
                                    data.AddText("Please make space in you inventory.")
          .AddOption("Ah~thank~you!.", 255)
          .AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You don't have 1,000 gold with you.")
            .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Level137Map)]
        public static void Level137Map(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Level >= 130)
                        {
                            dialog.Text("Hello! I'll teleport you to the leveling map up to Level 137 but I need 1 Health Wine. You can find them at RedDevils.");
                            dialog.Option("Here you are", 1);
                            dialog.Option("I~will~leave.", 255);
                            dialog.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            dialog.Text("Come back when you reach Level 130 or higher.").AddOption("I~see.", 255).FinalizeDialog();

                        }
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(723030, 1))
                        {
                            client.Inventory.Remove(723030, 1, stream);
                            client.Teleport(157, 463, 1300);
                        }
                        else
                        {
                            dialog.Text("Sorry, you don't have HealthWine.").AddOption("I~see.", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MonsterGeneral)]
        public static void MonsterGeneral(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Hello, I'm Soul Keeper, the monsters killed my wife and I want revenge, if you can bring me the souls of 100k monsters I'll give you a huge reward.");
                        dialog.Option("Here are the souls!", 1);
                        dialog.Option("Never~mind.", 255);
                        dialog.AddAvatar(211).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.TotalMobsKilled >= 100000)
                        {
                            client.TotalMobsKilled -= 100000;
                            client.Player.ConquerPoints += 500;
                            Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("" + client.Player.Name + " he/she has killed 100k monsters and has claimed 500 CPs from SoulKeeper!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                        }
                        else
                        {
                            dialog.Text("You don't have the required kills, hunt some more and come back!\n")
                                  .AddText("You've killed: " + client.TotalMobsKilled + "/ 100k monsters.")
                                  .AddOption("Okay.", 255)
                                  .AddAvatar(211).FinalizeDialog();

                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.WardenZhang)]
        public static void WardenZhang(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("We're always in need of fresh bounty hunters. You see, murderers and thieves can evade our guards.")
                            .AddText("We need heroes to slay the killers and restore peace. If you can PK those whose names are black (known criminals),")
                            .AddText(" you might get rewarded. If they pay.")
                            .AddOption("I~want~to~claim~my~reward.", 1)
                       .AddOption("Never~mind.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        Database.TheCrimeTable MyCrimes;
                        if (Database.Server.TheCrimePoll.TryGetValue(client.Player.UID, out MyCrimes))
                        {
                            string KillerName = "";
                            int ConquerPoints = MyCrimes.Claim(out KillerName);
                            if (ConquerPoints > 0)
                            {
                                data.AddText("For arresting " + KillerName + ", you'll be awarded " + ConquerPoints + " CPs.")
                   .AddOption("Ok, I see.", 255).AddAvatar(37).FinalizeDialog();
                                client.Player.ConquerPoints += (uint)ConquerPoints;

                                break;
                            }
                        }

                        data.AddText("Good, you've slain a murderer. Yes.. but only if he pays bail can you claim the bounty.")
                      .AddText("It's the way things are done! Here's a bit of advice, hehehe... kill the rich, forget the poor. Ha ha harrr!")
                      .AddText("Thats called making a living!")
                 .AddOption("Despicable!~But~realistic!", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.CelestialStone)]
        public static void CelestialStone(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("People are pursuing greater achievements during their lives, but none can make it due to the limit of human constitution.")
                        .AddOption("What does that mean?", 1)
                        .AddOption("I don't belive it.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Mortals are mundane. Only getting rid of it can help them accomplish their aims. If you are high enough level, you can get reborn to learn more and stronger skills.")
                        .AddOption("How to get reborn?", 2)
                        .AddOption("I'm satisfied.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.AddText("It's difficult. First, you should reach a certain level. Second, you need a CelestialStone.")
                        .AddOption("How to get CelestialStone?", 3)
                        .AddOption("Forget it.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.AddText("CelestialStone is made of 7 gems: Violet Gem, Kylin Gem, Rainbow Gem, Moon Gem, Phoenix Gem, Fury Gem, Dragon Gem, and Clean Water.")
                        .AddOption("What is a CleanWater?", 4)
                        .AddOption("It's difficult.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        dialog.AddText("It's used to get rid of your mundaneness, and then you won't be affected by the environment. By the way, Clean Water comes from celestial rinsing.")
                        .AddOption("What are gems used for?", 5)
                        .AddOption("Awww", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        dialog.AddText("Only seven gems can protect you during the rebirth. Otherwise you wouldn't be able to survive it.")
                        .AddOption("I will collect them now.", 6)
                        .AddOption("I changed my mind.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        dialog.AddText("It's easy to get the gems. But CleanWater...")
                        .AddOption("What about it?", 7).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        dialog.AddText("The Adventure Island is the headstream of CleanWater. But it is occupied by WaterLord and he uses spells to hide the stream.")
                        .AddOption("What can I do?", 8)
                        .AddOption("I give up.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        dialog.AddText("WaterLord will go to get the water every certain time. If you defeat him, you may get the water. But he is very hard to deal with.")
                        .AddOption("Anything else?", 9)
                        .AddOption("I see.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Inventory.Contain(721258, 1)
                            && client.Inventory.Contain(700001, 1) &&
                            client.Inventory.Contain(700011, 1) &&
                            client.Inventory.Contain(700021, 1) &&
                            client.Inventory.Contain(700031, 1) &&
                            client.Inventory.Contain(700041, 1) &&
                            client.Inventory.Contain(700051, 1) &&
                            client.Inventory.Contain(700061, 1))
                        {
                            dialog.AddText("Are you sure you want to refine CelestialStone?")
                            .AddOption("Sure!", 10)
                            .AddOption("Never~mind.", 255).AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Inventory.Contain(721258, 1)
                   && client.Inventory.Contain(700001, 1) &&
                   client.Inventory.Contain(700011, 1) &&
                   client.Inventory.Contain(700021, 1) &&
                   client.Inventory.Contain(700031, 1) &&
                   client.Inventory.Contain(700041, 1) &&
                   client.Inventory.Contain(700051, 1) &&
                   client.Inventory.Contain(700061, 1))
                        {
                            client.Inventory.Remove(721258, 1, stream);
                            client.Inventory.Remove(700001, 1, stream);
                            client.Inventory.Remove(700011, 1, stream);
                            client.Inventory.Remove(700021, 1, stream);
                            client.Inventory.Remove(700031, 1, stream);
                            client.Inventory.Remove(700041, 1, stream);
                            client.Inventory.Remove(700051, 1, stream);
                            client.Inventory.Remove(700061, 1, stream);
                            client.Inventory.Add(stream, 721259, 1);
                            dialog.AddText("Here you go! I wish you luck!")
                            .AddOption("Thanks.", 255).AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("I'm sorry but you don't have the required items!")
                            .AddOption("I see.", 255).AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExchangeConv)]
        public static void ExchangeConv(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Hey ( " + client.Player.Name + " ), you can exchange Gold to CPs here.");
                        dialog.Option("Exchange 100k Gold for 100 CPs.", 1);
                        dialog.Option("Exchange 100 CPs for 100k Gold.", 2);
                        dialog.Option("Exchange 500k Gold for 500 CPs.", 3);
                        dialog.Option("Exchange 500 CPs for 500k Gold.", 4);
                        dialog.Option("Exchange 1kk Gold for 1,000 CPs.", 5);
                        dialog.Option("Exchange 1,000 CPs for 1kk Gold.", 6);
                        dialog.Option("Never~mind.", 255);
                        dialog.AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 100000)
                        {
                            client.Player.Money -= 100000;
                            client.Player.ConquerPoints += 100;
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.ConquerPoints >= 100)
                        {
                            client.Player.ConquerPoints -= 100;
                            client.Player.Money += 100000;
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Player.Money >= 500000)
                        {
                            client.Player.Money -= 500000;
                            client.Player.ConquerPoints += 500;
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.ConquerPoints >= 500)
                        {
                            client.Player.ConquerPoints -= 500;
                            client.Player.Money += 500000;
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Player.Money >= 1000000)
                        {
                            client.Player.Money -= 1000000;
                            client.Player.ConquerPoints += 1000;
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.ConquerPoints >= 1000)
                        {
                            client.Player.ConquerPoints -= 1000;
                            client.Player.Money += 1000000;
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GM)]
        public static void GM(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("I'm here to help players throughout their experience while playing CoPrivate!\n");
                        dialog.Text("I'll give my best on answering the most common questions, but I must advise you to either contact a PM or");
                        dialog.Text(" visit CoPrivate.net or our Discord server for more information!\n");
                        dialog.Text("So, what do you want to know?\n");
                        dialog.Option("How to get started?", 1);
                        dialog.Option("I want to level up.", 101);
                        //dialog.Option("Vote.", 7);
                        //dialog.Option("Vote Rewards", 70);
                        //dialog.AddOption("Give me Auto Hunt item.", 55);
                        dialog.Option("Next.", 32);
                        dialog.AddAvatar(71).FinalizeDialog();
                        break;
                    }
                //case 55:
                //    {
                //        client.Inventory.Add(stream, 720374, 1, 0, 0, 0, 0, 0, true);
                //        break;
                //    }
                case 101:
                    {
                        client.Teleport(050, 057, 1004);
                        break;
                    }
                case 70:
                    {
                        dialog.Text("Hello" + client.Player.Name + "I'm the server Vote Reward!\n");
                        dialog.Text("Choose your reward:");
                        dialog.Option("ExpPotion - 1 Vote Point.", 71);
                        dialog.Option("STG - 10 Vote Point.", 61);
                        if (client.Player.VipLevel != 6)
                        {
                            dialog.Option("2 Days Char VIP - 5 Vote Points.", 72);
                        }
                        dialog.Option("DragonBall - 3 Vote Points.", 143);
                        dialog.Option("MoonBox - 3 Vote Points.", 144);
                        dialog.Option("Never~mind. ", 255);

                        dialog.AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 61:
                    {
                        if (client.Player.VotePoints >= 10)
                        {
                            client.Player.VotePoints -= 10;
                            client.Inventory.Add(stream, 700073, 1);
                        }
                        break;
                    }
                case 144:
                    {
                        if (client.Player.VotePoints >= 4)
                        {
                            client.Player.VotePoints -= 4;
                            client.Inventory.Add(stream, 721080, 1);
                        }
                        break;
                    }
                case 143:
                    {
                        if (client.Player.VotePoints >= 3)
                        {
                            client.Player.VotePoints -= 3;
                            client.Inventory.Add(stream, 1088000, 1);
                        }
                        break;
                    }
                case 71:
                    {
                        if (client.Player.VotePoints >= 1)
                        {
                            //client.Player.VotePoints -= 1;
                            //client.Player.RateExp = 2;
                            client.Player.DExpTime = 3600;
                            client.Player.CreateExtraExpPacket(stream);
                            client.SendSysMesage("You've received x2 EXP for 1 hour.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        break;

                    }
                case 72:
                    {
                        if (client.Player.VipLevel != 6)
                        {
                            if (client.Player.VotePoints >= 5)
                            {
                                if (DateTime.Now > client.Player.ExpireVip)
                                    client.Player.ExpireVip = DateTime.Now.AddDays(2);
                                else
                                    client.Player.ExpireVip = client.Player.ExpireVip.AddDays(2);

                                client.Player.VipLevel = 6;
                                client.Player.VotePoints -= 5;

                                client.Player.SendUpdate(stream, client.Player.VipLevel, Game.MsgServer.MsgUpdate.DataType.VIPLevel);

                                client.Player.UpdateVip(stream);
                                client.SendSysMesage("You`ve received VIP6 for 2 days.");
                            }
                        }
                        break;
                    }
                case 32:
                    {
                        dialog.Text("I'm here to help players throughout their experience while playing CoPrivate!\n");
                        dialog.Text("I'll give my best on answering the most common questions, but I must advise you to either contact a PM or");
                        dialog.Text(" visit CoPrivate.net or our Discord server for more information!\n");
                        dialog.Text("So, what do you want to know?\n");
                        dialog.Option("Quests.", 30);
                        dialog.Option("VIP.", 31);
                        dialog.Option("Sockets.", 35);
                        dialog.Option("Mining.", 36);
                        dialog.Option("CPs.", 37);
                        dialog.Option("Next.", 100);
                        dialog.Option("Never~mind.", 255);
                        dialog.AddAvatar(71).FinalizeDialog();

                        break;
                    }
                case 100:
                    {
                        dialog.Text("I'm here to help players throughout their experience while playing CoPrivate!\n");
                        dialog.Text("I'll give my best on answering the most common questions, but I must advise you to either contact a PM or");
                        dialog.Text(" visit CoPrivate.net or our Discord server for more information!\n");
                        dialog.Text("So, what do you want to know?\n");
                        dialog.Option("First, and Second Reborn.", 29);
                        dialog.Option("Plus Items.", 38);
                        dialog.Option("Gear.", 39);
                        dialog.Option("Commands.", 40);
                        //dialog.Option("OnlineRewards", 10);
                        dialog.Option("Never~mind.", 255);
                        dialog.AddAvatar(71).FinalizeDialog();
                        break;
                    }
                #region Items
                case 35:
                    {
                        dialog.AddText("While upgrading your gear level or quality in Twin City at Artisan Wind or Market at Magic Artisan, you have a chance that your item will be socketed.\n")
                              .AddText("You can also talk to BlacksmithLee in the market, he can assist you in creating your first socket in your item for 12 DragonBalls.")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 36:
                    {
                        dialog.AddText("With VIP, you can use the command @skipore to skip all ores while mining.\n")
                              .AddText("Mining is also one of the only ways to get any gems right now.")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 37:
                    {
                        dialog.AddText("You can talk to Exchange NPC in the market to exchange Gold for CPs, or CPs for gold.")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 38:
                    {
                        dialog.AddText("You can only get Plus Items from hunting or events.")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 39:
                    {
                        dialog.AddText("The only way you're going to build gear is by hunting or purchasing gear from players in-game for Gold or CPs.")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 40:
                    {
                        dialog.AddText("Please check our Information page on our website, or join our Discord for all available in-game commands!")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                #endregion
                case 31:
                    {
                        dialog.AddText("We're offering VIP through our website Donation page. In case you want to know more about it you should check out CoPrivate.net.\n")
                              .AddText("VIP has several benefits such as auto-packing Meteors, DragonBalls, dropped item notifications on +1 and blessed items, no ores while mining, and among other benefits! Check our website for more information!\n")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        dialog.AddText("We have all the original Conquer Online quests, and a lot of them you have to do to get certain in-game items.\n")
                              .AddText("We hope you enjoy yourself here at CoPrivate.")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                case 29:
                    {
                        dialog.AddText("Please join our Discord server from our website.\n")
                              .AddText("We look forward to meeting you there.")
                              .AddOption("Thanks!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }
                #region VIP Share
                /*   case 29:
                       {
                           if (client.Player.VipLevel >= 6 && client.Player.ExpireVip > DateTime.Now.AddDays(2))
                           {
                               dialog.Text("do you wish to share your VIPLevel?.");
                               dialog.AddInput("Name", 30);
                               dialog.Option("Later.", 255);
                           }
                           else
                           {
                               dialog.Text("Only vip6 can be shared.");
                               dialog.Option("i see.", 255);
                           }
                           dialog.AddAvatar(255).FinalizeDialog();
                           break;
                       }
                   case 30:
                       {
                           Client.GameClient shared = Client.GameClient.CharacterFromName(Input);
                           if (shared != null)
                           {
                               client.Player.MessageBox("You are about to share VIP4 for until " + client.Player.ExpireVip.ToShortDateString() + " to " + shared.Player.Name + " are you sure?",
                               new Action<Client.GameClient>(p =>
                               {
                                   shared.Player.MessageBox(p.Player.Name + " Want to share VIP4 that will ends on " + p.Player.ExpireVip.ToShortDateString() + " do you agree?",
                                        new Action<Client.GameClient>(s =>
                                        {
                                            if (Database.ShareVIP.Add(new Database.ShareVIP.Client { UID = p.Player.UID, ShareUID = s.Player.UID, ShareLevel = 4, ShareEnds = p.Player.ExpireVip, ShareName = s.Player.Name }))
                                            {
                                                s.Player.SendUpdate(stream, client.Player.VipLevel, MsgUpdate.DataType.VIPLevel);
                                                p.Player.MessageBox("VIP Sharing process has been successfully completed", null, null);
                                                s.Player.MessageBox("VIP Sharing process has been successfully completed", null, null);
                                            }
                                            else
                                            {
                                                p.Player.MessageBox("VIP Sharing process has been failed", null, null);
                                                s.Player.MessageBox("VIP Sharing process has been failed", null, null);
                                            }
                                        }), null);

                               }), null);
                           }
                           break;
                       }*/
                #endregion
                case 10:
                    {
                        dialog.AddText("You have " + client.Player.OnlinePoints + " OPs.\n")
                              .AddText("Below are some of our rewards.")
                              .AddOption("1~ExpBall~Experience~(5~OPS)", 11)
                              .AddOption("1~Hour~VIP6~(12~OPS)", 12)
                       //     .AddOption("RareGarment(24~OPS)", 13)
                          //  .AddOption("2Hour~LuckyTime (12~OPS)", 14)
                              .AddOption("x4~Experience~1~Hour~(10~PS)", 15)
                              .AddOption("Thank you.", 255)
                              .AddAvatar(71).FinalizeDialog();


                        break;
                    }
                #region OnlinePoint
                case 15:
                    {
                        if (client.Player.OnlinePoints >= 10)
                        {
                            client.Player.OnlinePoints -= 10;
                            client.Player.RateExp = 4;
                            client.Player.DExpTime = 3600;
                            client.Player.CreateExtraExpPacket(stream);
                            client.SendSysMesage("You got x4 Experience for 1 hour.", MsgMessage.ChatMode.System, MsgMessage.MsgColor.red);
                        }
                        else
                        {
                            dialog.AddText("Sorry, but you don`t have enough OPs.")
                                  .AddOption("Ah ok.", 255)
                                  .AddAvatar(63).FinalizeDialog();
                        }

                        break;
                    }
                case 11:
                    {
                        if (client.Player.OnlinePoints >= 5)
                        {
                            client.Player.OnlinePoints -= 5;
                            client.GainExpBall(900, true, Role.Flags.ExperienceEffect.angelwing);
                        }
                        else
                        {
                            dialog.AddText("Sorry, but you don`t have enough OPs.")
                                  .AddOption("Ah ok.", 255)
                                  .AddAvatar(63).FinalizeDialog();
                        }

                        break;
                    }
                case 12:
                    {
                        if (client.Player.VipLevel == 6)
                        {
                            client.SendSysMesage("You already have VIP 6 status.", MsgMessage.ChatMode.System);
                            break;
                        }
                        if (client.Player.OnlinePoints >= 12)
                        {
                            client.Player.OnlinePoints -= 12;
                            if (DateTime.Now > client.Player.ExpireVip)
                                client.Player.ExpireVip = DateTime.Now.AddMinutes(60);
                            else
                                client.Player.ExpireVip = client.Player.ExpireVip.AddMinutes(60);

                            client.Player.VipLevel = 6;

                            client.Player.SendUpdate(stream, client.Player.VipLevel, MsgUpdate.DataType.VIPLevel);

                            client.Player.UpdateVip(stream);

                            client.SendSysMesage("You`ve received VIP 6 for 1 hour.");
                        }
                        else
                        {
                            dialog.AddText("Sorry, but you don`t have enough Online Hours.")
                                  .AddOption("Ah ok.", 255)
                                  .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 13:
                    {
                        if (client.Player.OnlinePoints >= 24)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                dialog.AddText("Please make 1 more space in your inventory.")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            client.Player.OnlinePoints -= 24;
                            Database.ItemType.DBItem aitem;
                            while (true)
                            {
                                var array = Database.ItemType.Garments.Values.ToArray();
                                aitem = array[Program.GetRandom.Next(0, array.Length)];
                                client.Inventory.Add(stream, aitem.ID, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true, Role.Flags.ItemEffect.None, true);
                                break;
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, but you don`t have enough Online Hours.")
                                  .AddOption("Ah ok.", 255)
                                  .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                case 14:
                    {
                        if (client.Player.BlessTime > 120000 * 60)
                        {
                            dialog.AddText("Sorry, you've reached the limit! Come back after you've used all your Lucky Time.")
                                  .AddOption("Okay.", 255)
                                  .AddAvatar(63).FinalizeDialog();
                            break;
                        }
                        if (client.Player.OnlinePoints >= 12)
                        {
                            client.Player.OnlinePoints -= 12;
                            client.Player.BlessTime += 120000 * 60;
                            client.SendSysMesage("You're now getting 2 hours of Lucky Time.", MsgMessage.ChatMode.Action);

                            client.Player.SendUpdate(stream, client.Player.BlessTime, Game.MsgServer.MsgUpdate.DataType.LuckyTimeTimer);
                        }
                        else
                        {
                            dialog.AddText("Sorry, but you don`t have enough Online Points.")
                                  .AddOption("Ah ok.", 255)
                                  .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
                #endregion
                case 7:
                    {
                        dialog.AddText("Thank you for your support! To show our appreciation you can receive 1 hour of VIP for voting.")
                            .AddOption("Vote now.", 8)
                            //.AddOption("Main Menu.", 30)
                            .AddOption("Thank you.", 255)
                            .AddAvatar(71).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (Database.VoteSystem.CanVote(client))
                        {
                            client.SendSysMesage(Program.ServerConfig.XtremeTopLink, MsgMessage.ChatMode.WebSite, MsgMessage.MsgColor.white);
                            client.Player.StartVote = true;
                            client.Player.VotePoints += 1;
                            client.Player.StartVoteStamp = Time32.Now.AddMinutes(2);
                            client.SendSysMesage("Please wait for the system to check your vote.");
                        }
                        else
                        {
                            dialog.AddText("You've already claimed your reward for voting. You may only vote once every 12 hour per IP address.")
                                  .AddOption("I~see.", 255)
                                  .AddAvatar(71).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        dialog.AddText("The best way to get started on this server is to get power leveled by a higher-level player.\n")
                        .AddText("Your first character should be an archer so that you will be able to hunt and build your own set.\n")
                        .AddText("You will receive some equipment on promotions that you can use as starting gears.\n")
                        .AddText("Warriors are also great for leveling, and Trojans can be reborned into archers to maximize your hunting experience with a cyclone archer.")
                        .AddOption("Okay!", 255).AddAvatar(71).FinalizeDialog();
                        break;
                    }

            }
        }
        //[NpcAttribute(NpcID.VIPBook)]
        public static void VIPBook(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Choose your options from the VIP Book.");
                        dialog.Option("ExpBall Loot: " + (client.Player.LootExpBall ? "Enabled" : "Disabled"), 1);
                        dialog.Option("DragonBall Loot: " + (client.Player.LootDragonBall ? "Enabled" : "Disabled"), 2);
                        dialog.Option("Leave.", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Player.LootExpBall = !client.Player.LootExpBall;
                        break;
                    }
                case 2:
                    {
                        client.Player.LootDragonBall = !client.Player.LootDragonBall;
                        break;
                    }
            }
        }


        #region Tournaments

        public static void CityWars(Client.GameClient client, ServerSockets.Packet stream, byte Option,
            string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Talent wins games, but teamwork wins championships.\n");
                        dialog.Text("City Wars is where your Guild can prove who's the best.\n");
                        dialog.Option("Join.", 1);
                        dialog.Option("Leave.", 255);
                        dialog.AddAvatar(123).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.MyGuild == null)
                        {
                            client.SendSysMesage("Please make a Guild, or join a Guild.");
                            break;
                        }
                        else
                        {
                            var War = MsgSchedules.CityWar.GetNpcTournament(id);
                            if (War != null)
                                War.Join(client);
                            else
                            {
                                client.SendSysMesage("The event hasn't started yet, come back later.");
                                break;
                            }
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ExitArena)]
        public static void ExitArena(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Would you like to leave?")
                            .AddOption("Yes.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(3).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (Program.ArenaMaps.ContainsKey(client.Player.Map) || Program.ArenaMaps.ContainsKey(client.Player.DynamicID) || Program.ArenaMaps.ContainsKey((uint)client.Player.Betting) ||  Program.ArenaMaps.ContainsValue(client.Player.DynamicID) || Program.ArenaMaps.ContainsValue((uint)client.Player.Betting))
                        {
                            foreach (var bot in Bots.BotProcessring.Bots.Values)
                            {
                                if (bot.Bot != null)
                                {
                                    if (bot.Bot.Player.Map == client.Player.Map && bot.Bot.Player.DynamicID == client.Player.DynamicID)
                                        bot.Dispose();
                                }
                            }
                            if (client.Player.Betting > 0)
                            {
                                foreach (var player in client.Map.Values.Where(e => e.Player.DynamicID == client.Player.DynamicID))
                                {
                                    client.SendSysMesage("You need to finish your match.", ChatMode.Talk);
                                    return;
                                }

                                client.Player.ConquerPoints += (uint)client.Player.Betting;
                                client.Player.Betting = 0;
                            }
                            client.Teleport(454, 294, 1002);
                        }
                        break;
                    }
            }
        }

        private static byte bottype = 0;
        [NpcAttribute(NpcID.UnlimitedArena)]
        public static void UnlimitedArena(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("Choose your room!\n");
                        dialog.AddText("NOTE: Use @leave command to leave the arenas.");
                        dialog.AddOption("Duel Bots.", 12);
                        dialog.AddOption("Player vs Player.", 1);
                        dialog.AddOption("Betting Room.", 20).AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 20:
                    {
                        dialog.AddText("First to 100 wins! Bet your CPs.");
                        dialog.AddInput("Bet amount:", 21);
                        dialog.AddOption("Never mind.", 255);
                        dialog.AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 21:
                    {
                        uint result;
                        if (uint.TryParse(Input, out result))
                        {
                            if (client.Player.ConquerPoints < result)
                            {
                                client.SendSysMesage($"You don't have {result} CPs!");
                                return;
                            }
                            if (Program.ArenaMaps.ContainsKey(result))
                            {
                                var map = Database.Server.ServerMaps[700];
                                var mapId = Program.ArenaMaps[result];
                                ushort x = 0;
                                ushort y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                                client.Player.Chains = 0;
                                client.Player.MaxChains = 0;
                                client.Player.Betting = (int)result;
                                client.Player.ConquerPoints -= result;
                            }
                            else
                            {
                                var map = Database.Server.ServerMaps[700];
                                var mapId = map.GenerateDynamicID();
                                Program.ArenaMaps.Add(result, mapId);
                                ushort x = 0;
                                ushort y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                                client.Player.Chains = 0;
                                client.Player.MaxChains = 0;
                                client.Player.Betting = (int)result;
                                client.Player.ConquerPoints -= result;
                                client.SendSysMesage($"{client.Player.Name} is in a betting room! They've bet: {result} CPs!", MsgMessage.ChatMode.Center);
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        dialog.AddText("Choose your desired max hits.")
                              .AddOption("25 hits.", 25)
                              .AddOption("50 hits.", 50)
                              .AddOption("75 hits.", 75)
                              .AddOption("100 hits.", 100)
                              .AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        dialog.AddText("Choose your desired Bot difficulty:")
                              .AddOption("Noob.", 4)
                              .AddOption("Easy.", 5)
                              .AddOption("Normal.", 6)
                              .AddOption("Medium.", 7)
                              .AddOption("Hard.", 8)
                              .AddOption("Insane.", 9)
                              .AddAvatar(3).FinalizeDialog();
                        break;
                    }
                default:
                    {
                        if (Option == 25)
                        {
                            client.Player.MyHits = 25;
                            goto case 3;
                        }
                        else if (Option == 50)
                        {
                            client.Player.MyHits = 50;
                            goto case 3;
                        }
                        else if (Option == 75)
                        {
                            client.Player.MyHits = 75;
                            goto case 3;
                        }
                        else if (Option == 100)
                        {
                            client.Player.MyHits = 100;
                            goto case 3;
                        }
                        if (Option >= 4 && Option <= 9)
                        {
                            bottype = (byte)(Option - 4);
                            dialog.AddText("What skill would you like the bot to use?")
                                .AddOption("Fast~Blade.", 10)
                                .AddOption("Scent~Sword.", 11).AddAvatar(3).FinalizeDialog();
                            break;
                        }
                        var map = Database.Server.ServerMaps[700];
                        var mapId = map.GenerateDynamicID();
                        Program.ArenaMaps.Add(mapId, mapId);
                        ushort x = 0;
                        ushort y = 0;
                        map.GetRandCoord(ref x, ref y);
                        client.Teleport(x, y, 700, mapId);
                        client.Player.Hits = 0;
                        client.Player.TotalHits = 0;
                        client.Player.Chains = 0;
                        client.Player.MaxChains = 0;

                        var AI = new Bots.AI();
                        AI.SetLevel((BotLevel)bottype);
                        AI.LoadBot(BotType.DuelBot, client, Option == 10 ? SkillType.FastBlade :
                            SkillType.ScentSword);
                        client.Player.SetPkMode(Role.Flags.PKMode.PK);
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Custom Room");
                        dialog.AddInput("Room number:", 2);
                        dialog.AddOption("Never mind.", 255);
                        dialog.AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        uint result;
                        if (uint.TryParse(Input, out result))
                        {
                            if (Program.ArenaMaps.ContainsKey(result))
                            {
                                var map = Database.Server.ServerMaps[700];
                                var mapId = Program.ArenaMaps[result];
                                ushort x = 0;
                                ushort y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                                client.Player.Chains = 0;
                                client.Player.MaxChains = 0;
                            }
                            else
                            {
                                var map = Database.Server.ServerMaps[700];
                                var mapId = map.GenerateDynamicID();
                                Program.ArenaMaps.Add(result, mapId);
                                ushort x = 0;
                                ushort y = 0;
                                map.GetRandCoord(ref x, ref y);
                                client.Teleport(x, y, 700, mapId);
                                client.Player.Hits = 0;
                                client.Player.TotalHits = 0;
                                client.Player.Chains = 0;
                                client.Player.MaxChains = 0;
                            }
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.FiveNOut)]
        public static void FiveNOut(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Five and Out is a FastBlade/ScentSword event which depends on your skill. ")
                            .AddText("If you get hit 5 times you get kicked out. The last man standing wins! ")
                            .AddOption("Sign~me~up!", 1)
                             .AddOption("I`ll~think~it~over.", 255).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.TransformInfo != null)
                        {
                            data.AddText("You can't join while transformed!")
        .AddOption("I see. ", 255)
        .AddAvatar(63).FinalizeDialog();
                            return;
                        }
                        if (MsgCheckLine.CheckLineSpells(client))
                        {
                            if (MsgCheckLine.CheckItems(client))
                            {
                                if (MsgSchedules.CurrentTournament.Type == TournamentType.FiveNOut)
                                {
                                    if (!MsgSchedules.CurrentTournament.Join(client, stream))
                                    {
                                        data.AddText("We're sorry, but you can't enter right now, try again when the tournament starts!")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("We're sorry, but you can't enter right now, try when again when the tournament starts!")
       .AddOption("I see. ", 255)
       .FinalizeDialog();
                                }

                            }
                            else
                            {
                                data.AddText("Please use Blade, Sword, or Backsword.")
              .AddOption("Okay.", 255)
             .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please learn FastBlade or ScentSword.")
          .AddOption("Okay.", 255)
          .FinalizeDialog();
                        }

                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.TreasureThief)]
        public static void ThreasureThief(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I've lost all my treasure chests inside the map when I was doing the quest! Now you'll need to find them for me!")
                            .AddOption("Sign~me~up!", 1)
                            .AddOption("Exchange your points.", 2)
                            .AddOption("Maybe later.", 255)
                            .AddAvatar(3).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules.CurrentTournament.Type == TournamentType.TreasureThief)
                        {
                            if (!MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                data.AddText("We're sorry, but you can't enter right now, try again when the tournament starts!")
                                    .AddOption("I see.", 255)
                                    .AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We're sorry, but you can't enter right now, try again when the tournament starts!")
                                .AddOption("I see.", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
                case 2:
                    {
                        data.AddText("Exchange your Treasure Points for great rewards!\n")
                            .AddText($"You have: {client.Player.TreasureBoxesPoint} points.\n")
                            .AddText("Points will reset every day, so be sure to spend your points.")
                            .AddOption("Exchange points!", 3)
                            .AddOption("Never~mind.", 255).AddAvatar(3).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.TreasureBoxesPoint > 0)
                        {
                            data.AddText($"Select your reward:")
                                .AddOption("MeteorScroll - 10 Points.", 4)
                                .AddOption("PrayingStone(S) - 50 Points.", 6)
                                .AddOption("1 DB - 20 Points.", 5)
                                .AddOption("99Lilies - 30 Points.", 7)
                                .AddOption("Never~mind.", 255).AddAvatar(3).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText($"Sorry, you don't have enough Treasure Points, you have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("I~see.", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.TreasureBoxesPoint >= 10)
                        {
                            client.Player.TreasureBoxesPoint -= 10;
                            client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                            data.AddText($"You've received 1 MeteorScroll! You now have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("Thanks!", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText($"Sorry, you don't have enough Treasure Points, you have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("I~see.", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Player.TreasureBoxesPoint >= 20)
                        {
                            client.Player.TreasureBoxesPoint -= 20;
                            client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                            data.AddText($"You've received 1 Dragon Ball! You now have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("Thanks!", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText($"Sorry, you don't have enough Treasure Points, you have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("I~see.", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.TreasureBoxesPoint >= 50)
                        {
                            client.Player.TreasureBoxesPoint -= 50;
                            client.Inventory.Add(stream, Database.ItemType.PrayingStoneS, 1);
                            data.AddText($"You've received 1 PrayingStone(S)! You now have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("Thanks!", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText($"Sorry, you don't have enough Treasure Points, you have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("I~see.", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 7:
                    {
                        if (client.Player.TreasureBoxesPoint >= 30)
                        {
                            client.Player.TreasureBoxesPoint -= 30;
                            var RateH3 = new List<uint>()
                            {
                                753099,751099,752099,754099
                            };
                            uint Id = RateH3[Program.GetRandom.Next(0, RateH3.Count)];
                            client.Inventory.Add(stream, Id, 1);
                            data.AddText($"You've received 1 99Lilies! You now have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("Thanks!", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText($"Sorry, you don't have enough Treasure Points, you have: {client.Player.TreasureBoxesPoint} points!")
                                .AddOption("I~see.", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.PkWarQuit)]
        public static void PkWarQuit(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, you're the last player alive?")
                            .AddOption("Yup!", 1)
                            .AddOption("Send~me~to~Twin~City.", 2)
                       .AddOption("Never~mind.", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules.PkWar.IsFinished())
                        {
                            if (MsgSchedules.PkWar.TheLastPlayer())
                            {
                                if (client.Inventory.HaveSpace(2))
                                {
                                    MsgSchedules.PkWar.GiveReward(client, stream);
                                }
                                else
                                {
                                    data.AddText("Please make 2 more spaces in your inventory.")
                                               .AddOption("Let me check.", 255)
                                               .AddAvatar(8).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, the war isn't finished, or other players are still alive.")
               .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war isn't finished.")
                .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }
                        break;

                    }
                case 2:
                    {
                        data.AddText("Would you like to go back to Twin City?");
                        data.AddOption("Yes!", 3);
                        data.AddOption("No!", 255);
                        data.AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PkWar)]
        public static void PkWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The Weekly PK War will take place during 20:00 and 20:19 on Friday,")
                                               .AddText("and you'll be admitted into tournament during 20:00 and 20:19, Come! You will be impressed.")
                                          .AddOption("Sign~me~up.", 1)
                                          .AddOption("I'll come later. ", 255)
                                          .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules.PkWar.AllowJoin())
                        {
                            client.Teleport(87, 88, 1508);
                        }
                        else
                        {
                            data.AddText("Please sign up between 20:00 and 20:20 every Saturday.")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }//TeamDeathMatch

        [NpcAttribute(NpcID.ClassPkWar)]
        public static void NpcClassPkWar(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, you're the last player alive?")
                            .AddOption("Yup!", 1)
                            .AddOption("Teleport~to~Twin~City.", 2)
                       .AddOption("Ah. wait", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        MsgClassPKWar.War war;
                        if (MsgSchedules.ClassPkWar.GetWar(client, out war) != ProcesType.Dead)
                        {
                            if (!war.CheckJoin())
                            {
                                if (war.IsFinish(client))
                                {
                                    if (!client.Inventory.HaveSpace(4))
                                    {
                                        data.AddText("Please make 4 more spaces in your inventory.")
                                            .AddOption("Let me check.", 255).AddAvatar(154).FinalizeDialog();

                                    }
                                    war.GetMyReward(client, stream);

                                }
                                else
                                {
                                    data.AddText("Sorry, the war is not finished, or other players are still alive.")
                   .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, the war is not finished")
                    .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, the war is finished, or other players are still alive.")
           .AddOption("Ah ok", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;

                    }
                case 2:
                    {
                        data.AddText("You wana to teleport back to TwinCity? You are sure?")
           .AddOption("Yes", 3).AddOption("Ah no.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(430, 269, 1002, 0);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ClassPkEnvoy)]
        public static void ClassPkEnvoy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Everyone settle down! I need to announce that there are new rules for the Class PK War!")
                            .AddOption("Tell~me~more.", 1)
                       .AddOption("Sign~up.", 2)
                       .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("The ClassPK War is held each monday where all classes fight for their top halo. The winner gets 645 CPs! The event is held on monday at 18:00.")
                   .AddOption("Sign~up.", 2)
                   .AddOption("Not~interested.", 255).AddAvatar(154).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        MsgClassPKWar.War war;
                        if (MsgSchedules.ClassPkWar.GetWar(client, out war) != ProcesType.Dead)
                        {
                            if (war.CheckJoin())
                            {
                                client.Teleport(81, 62, MsgClassPKWar.MapID, war.DinamicID);
                            }
                            else
                            {
                                data.AddText("I`m sorry, but the Class PK War is only held on Mondays.")
                  .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I`m sorry, but the Class PK War is only held on Mondays.")
                     .AddOption("Alright.", 255).AddAvatar(154).FinalizeDialog();
                        }

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.CouplesPK)]
        public static void CouplesPK(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello lovers! I'm the CouplePk manager,this event is held on Saturday. You'll have 5 minutes to sign up with your loved one in a team. You may sign up from 14:45 to 14:50 and the event will take place at 14:50.")
                   .AddOption("Sign~me~up", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {

                        if (!MsgSchedules.CouplesPKWar.Join(client, stream))
                        {
                            data.AddText("The signup starts at 14:45 to 14:50 on Saturday.")
        .AddOption("I see. ", 255)
        .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LastManStand)]
        public static void LastManStand(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Glad to see you! I take it that you haven`t heard of the LastManStand tournament? please allow me to introduce this exciting event for you.")
                        .AddText("It`s a Pk Tournament that takes place every day !")
                   .AddOption("Sign~me~up", 1)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules.CurrentTournament.Type == TournamentType.LastManStand)
                        {
                            if (client.Player.TransformInfo != null)
                            {
                                data.AddText("You cant join while transformed!")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                                return;
                            }
                            if (!MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
 .AddOption("I see. ", 255)
 .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.KillTheCaptain)]
        public static void KillTheCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m a brave leader. I`m here to hold the KillTheCaptain event. In this event you`re divided into 2 teams (Red-Blue). If you kill the Enemy's leader you'll gain 10pts and a normal enemy 1pt.")
                       .AddText("The first team to reach 200 points wins.")
                  .AddOption("Sign~me~up", 1)
                  .AddOption("I will come later. ", 255)
                  .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules.CurrentTournament.Type == TournamentType.KillTheCaptain)
                        {
                            if (!MsgSchedules.CurrentTournament.Join(client, stream))
                            {
                                if (client.Player.TransformInfo != null)
                                {
                                    data.AddText("You cant join while transformed!")
                .AddOption("I see. ", 255)
                .AddAvatar(63).FinalizeDialog();
                                    return;
                                }
                                data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
         .AddOption("I see. ", 255)
         .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("We are sorry , but u can't enter right now , try when tournament start !")
      .AddOption("I see. ", 255)
      .AddAvatar(63).FinalizeDialog();
                        }



                        break;
                    }
            }
        }
        #endregion
        #region JobCenter

        [NpcAttribute(NpcID.MightyTao)]//15745
        public static void MightyTao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you've reborned at least one time, you can learn some great skills.\n")
                            .AddText("With them you'll be able to conquer this world much faster.")
                            .AddOption("Summon Guard [Lvl 15] - 5 Eux Ores.", 1)
                            .AddOption("Summon Mob [Lvl 40] - 5 Eux Ores.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Reborn > 0)
                        {
                            if (client.Inventory.Contain(1072031, 5))
                            {
                                client.Inventory.Remove(1072031, 5, stream);
                                var SpellID = Role.Flags.SpellID.SummonGuard;
                                if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                                {
                                    data.AddText("You`ve learned " + SpellID.ToString() + "!")
                                        .AddOption("Thanks!", 255).AddAvatar(6).FinalizeDialog();
                                    break;
                                }
                                else
                                {
                                    client.MySpells.Add(stream, (ushort)SpellID);

                                    data.AddText("Congratulations! You just learned the skill " + SpellID.ToString() + "!")
                                        .AddOption("Thanks!", 255)
                                        .AddAvatar(6).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You don't have 5 Euxenite Ores!")
                                    .AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.Reborn > 0)
                        {
                            if (client.Inventory.Contain(1072031, 5))
                            {
                                client.Inventory.Remove(1072031, 5, stream);
                                if (client.Player.Class <= 15)
                                {
                                    if (!client.MySpells.ClientSpells.ContainsKey((ushort)4050))
                                        client.MySpells.Add(stream, (ushort)4050);
                                    else
                                    {
                                        data.AddText("You've already learned it!")
                                     .AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                        break;
                                    }
                                }
                                else if (client.Player.Class <= 25)
                                {
                                    if (!client.MySpells.ClientSpells.ContainsKey((ushort)4060))
                                        client.MySpells.Add(stream, (ushort)4060);
                                    else
                                    {
                                        data.AddText("You've already learned it!")
                                     .AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                        break;
                                    }
                                }
                                else if (client.Player.Class <= 45)
                                {
                                    if (!client.MySpells.ClientSpells.ContainsKey((ushort)4070))
                                        client.MySpells.Add(stream, (ushort)4070);
                                    else
                                    {
                                        data.AddText("You've already learned it!")
                                     .AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                        break;
                                    }
                                }
                                else if (client.Player.Class <= 135)
                                {
                                    if (!client.MySpells.ClientSpells.ContainsKey((ushort)4010))
                                        client.MySpells.Add(stream, (ushort)4010);
                                    else
                                    {
                                        data.AddText("You've already learned it!")
                                     .AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                        break;
                                    }
                                }
                                else if (client.Player.Class <= 145)
                                {
                                    if (!client.MySpells.ClientSpells.ContainsKey((ushort)4020))
                                        client.MySpells.Add(stream, (ushort)4020);
                                    else
                                    {
                                        data.AddText("You've already learned it!")
                                            .AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                        break;
                                    }
                                }
                            }
                            else
                            {
                                data.AddText("You don't have 5 Euxenite Ores!")
                                    .AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("You can't learn these skills until you're reborned.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.PromotionTaoist)]
        public static void PromotionTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 130 && client.Player.Class <= 145 || client.Player.Class == 100 || client.Player.Class == 101))
            {
                data.AddText("Sorry, but you aren't a Taoist.").AddOption("Alright.", 255).AddAvatar(6).FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Class == 100)
                        {

                            data.AddText("Every Taoist wants holy spirit, and few gain. You`re gifted in controlling inner power. Just pay more attention to details, you may be the next achiever!")
                                .AddOption("Get promoted.", 1)
                                .AddOption("I`ll~think~about~it.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Every Taoist wants holy spirit, and few gain. You`re gifted in controlling inner power. Just pay more attention to details, you may be the next achiever!");

                            if (client.Player.Class == 100 || client.Player.Class == 101)
                                data.AddOption("Get promoted.", 3);
                            else
                                data.AddOption("Get promoted.", 53);
                                data.AddOption("Learn~class~skills.", 10)
                                    .AddOption("Never~mind.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                        }
                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet Taoist will be a big name in a short time. Listen, you can learn class skills and")
                            .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                            .AddOption("Yes!", 111)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                           data.AddText("You`ll be another hero in the world of CoPrivate!\n")
                               .AddText("Would you like to learn something about your class promotion and quests?");
                        if (client.Player.Class == 100)
                            data.AddOption("Get promoted.", 1);
                        else if (client.Player.Class == 101)
                            data.AddOption("Get promoted.", 3);
                        else
                            data.AddOption("Get promoted.", 53);
                        data.AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 53:
                    {
                        switch (client.Player.Class)
                        {
                            case 142:
                            case 132:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training.\n")
                                            .AddText("You need to become stronger, and be at least Level 70.")
                                            .AddOption("I~see.", 255)
                                            .AddAvatar(6).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry, but you need to have 1 Emerald in your inventory, to get one go and kill some HillMonsters in Desert City.")
                                                .AddOption("Okay.", 255)
                                                .AddAvatar(6).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned the ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                .AddOption("Thank~you,~Master.", 255)
                                                .AddAvatar(6).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you.", 255).AddAvatar(6).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 143:
                            case 133:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training.\n")
                                            .AddText("You need to become stronger, and be at least Level 100.")
                                            .AddOption("I~see.", 255)
                                            .AddAvatar(6).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry, but you need to have 1 Meteor in your inventory.")
                                                .AddOption("I~see.", 255)
                                                .AddAvatar(6).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            client.Inventory.Add(stream, 134089, 1, 0, 0, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.NoSocket, true);
                                            data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                .AddOption("Thank~you,~Master.", 255)
                                                .AddAvatar(6).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you.", 255).AddAvatar(6).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 144:
                            case 134:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training.\n")
                                            .AddText("You need to become stronger, and be at least Level 110.")
                                            .AddOption("I~see.", 255)
                                            .AddAvatar(6).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox in your inventory.")
                                                .AddOption("I~see.", 255)
                                                .AddAvatar(6).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn >= 0)
                                            {
                                                if (client.Inventory.HaveSpace(1))
                                                {
                                                    client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                    client.Player.Class++;
                                                    data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                        .AddOption("Thank~you,~Master.", 255)
                                                        .AddAvatar(6).FinalizeDialog();

                                                    client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                                }
                                                else
                                                {
                                                    data.AddText("Please make room in your inventory.")
                                                        .AddOption("Sorry.", 255)
                                                        .AddAvatar(6).FinalizeDialog();
                                                    break;
                                                }
                                            }
                                            else
                                            {
                                                client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                client.Player.Class++;
                                                data.AddText("Excellent! You`ve learned ways of the Taoist. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                    .AddOption("Thank~you,~Master.", 255)
                                                    .AddAvatar(6).FinalizeDialog();
                                            }
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you.", 255).AddAvatar(6).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You've mastered your class.")
                                        .AddOption("Thank~you,~Master.", 255)
                                        .AddAvatar(6).FinalizeDialog();


                                    break;
                                }
                        }
                        break;
                    }
                case 51:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            if (client.Player.Reborn < 2)
                            {
                                data.AddText("Only pure Fire Taoists, who have trained as Water Taoists for all 3 of their lives, can learn the Pure Skill, AzureShield.")
                                    .AddOption("Ok~I~see.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (!Database.AtributesStatus.IsWater(client.Player.FirstClass) || !Database.AtributesStatus.IsWater(client.Player.SecondClass))
                            {
                                data.AddText("Only pure water Taoists, who have trained as Water Taoists for all 3 of their lives, can learn the Pure Skill, AzureShield.")
                                                                                       .AddOption("Ok~I~see.", 255)
                                                                                       .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (client.Player.Level < 40)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            //var SpellID = Role.Flags.SpellID.AzureShield;
                            //if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            //{
                            //    data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            //    break;
                            //}
                            //client.MySpells.Add(stream, (ushort)SpellID);
                            //data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                            //                                         .AddOption("Ok , thank you.", 255)
                            //                                         .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 52:
                    {
                        if (Database.AtributesStatus.IsFire(client.Player.Class))
                        {
                            if (client.Player.Reborn < 2)
                            {
                                data.AddText("Only pure Fire Taoists, who have trained as Fire Taoists for all 3 of their lives, can learn the Pure Skill, Heaven Blade.")
                                                                .AddOption("Ok~I~see.", 255)
                                                                .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (!Database.AtributesStatus.IsFire(client.Player.FirstClass) || !Database.AtributesStatus.IsFire(client.Player.SecondClass))
                            {
                                data.AddText("Only pure Fire Taoists, who have trained as Fire Taoists for all 3 of their lives, can learn the Pure Skill, Heaven Blade.")
                                                                                       .AddOption("Ok~I~see.", 255)
                                                                                       .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            if (client.Player.Level < 40)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.HeavenBlade;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("I know many types of skills and spells for a true Taoist, like you! Which of them do you want to learn, first?")
                          .AddOption("Learn~Magic.", 11)
                          .AddOption("Learn~XP~Skill.", 12)
                          //.AddOption("Universal~skills.", 13)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?")
                        // .AddOption("ChainBolt" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ChainBolt) ? "(Learned)" : "(Lv.1)") + "", 40)
                        .AddOption("Lightning." + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Lightning) ? "(Learned)" : "(Lv.3)") + "", 41)
                        .AddOption("Volcano." + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Vulcano) ? "(Learned)" : "(Lv.40)") + "", 42);
                        if (client.Player.Class > 101)
                        {
                            if (Database.AtributesStatus.IsWater(client.Player.Class))
                            {
                                data.AddOption("Revive." + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Revive) ? "(Learned)" : "[Lv.40]") + "", 43);
                            }
                        }
                        data.AddOption("Speed Lightning." + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.SpeedLightning) ? "(Learned)" : "[Lv.40]") + "", 44);
                        data.AddOption("I`ll~think~about~it.", 255).AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 44:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.SpeedLightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 43:
                    {
                        if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            if (client.Player.Level < 40)
                            {
                                data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.Revive;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                                .AddOption("Thanks.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 42:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Vulcano;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        if (client.Player.Level < 3)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 3 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Lightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 40:
                    {
                        var SpellID = Role.Flags.SpellID.ChainBolt;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 58:
                    {
                        if (client.Player.Level < 93)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireofHell;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?")
                           .AddOption("Thunder -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Thunder) ? " (Learned)" : "(Lv.1)") + "", 20)
                           .AddOption("Cure -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cure) ? " (Learned)" : "(Lv.1)") + "", 21)
                           .AddOption("Meditation -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Meditation) ? " (Learned)" : "(Lv.44)") + "", 22);
                        if (client.Player.Class >= 101)
                        {
                            data.AddOption("Lightning -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Lightning) ? " (Learned)" : "[Lv.1]") + "", 71)
                                .AddOption("Next page.", 241);

                        }
                        data.AddOption("I`ll~think~about~it.", 255).AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 241:
                    {
                        if (Database.AtributesStatus.IsFire(client.Player.Class))
                        {
                            data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?")
                                .AddOption("Fire -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Fire) ? " (Learned)" : "[Lv.40][Thunder~Level~4]") + "", 23)
                                .AddOption("Tornado -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Tornado) ? " (Learned)" : "[Lv.92][Fire~Level~3]") + "", 24)
                                .AddOption("FireRing -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireRing) ? " (Learned)" : "(Lv.55)") + "", 25)
                                .AddOption("FireMeteor -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireMeteor) ? " (Learned)" : "(Lv.52)") + "", 26)
                                .AddOption("FireCircle -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireCircle) ? " (Learned)" : "(Lv.65)") + "", 27)
                                .AddOption("Bomb -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Bomb) ? " (Learned)" : "(Lv.82)") + "", 28)
                                .AddOption("FireofHell -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FireofHell) ? " (Learned)" : "(Lv.93)") + "", 58).AddAvatar(6).FinalizeDialog();
                        }
                        else if (Database.AtributesStatus.IsWater(client.Player.Class))
                        {
                            data.AddText("The Taoist`s skills are varied and powerful. Which skill do you want to learn?");
                            data.AddOption("HealingRain -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.HealingRain) ? " (Learned)" : "(Lv.40)") + "", 29)
                                .AddOption("StarofAccuracy -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.StarofAccuracy) ? " (Learned)" : "(Lv.45)") + "", 30)
                                .AddOption("MagicShield -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.MagicShield) ? " (Learned)" : "(Lv.50)") + "", 31)
                                .AddOption("Stigma -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Stigma) ? " (Learned)" : "(Lv.55)") + "", 32)
                                .AddOption("Invisibility -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Invisibility) ? "(Learned)" : "(Lv.60)") + "", 33)
                                .AddOption("Pray -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Pray) ? " (Learned)" : "(Lv.70)") + "", 34)
                                .AddOption("AdvancedCure -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.AdvancedCure) ? " (Learned)" : "(Lv.81)") + "", 35)
                                .AddOption("Nectar -" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Nectar) ? " (Learned)" : "(Lv.94)") + "", 36).AddAvatar(6).FinalizeDialog(); ;
                        }
                        break;
                    }
                case 70:
                    {
                        var SpellID = Role.Flags.SpellID.ChainBolt;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 71:
                    {
                        var SpellID = Role.Flags.SpellID.Lightning;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 28:
                    {
                        if (client.Player.Level < 82)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 82 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Bomb;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 27:
                    {
                        if (client.Player.Level < 65)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 65 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireCircle;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 26:
                    {
                        if (client.Player.Level < 52)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 52 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireMeteor;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 25:
                    {
                        if (client.Player.Level < 55)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 55 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.FireRing;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 24:
                    {
                        if (client.Player.Level < 92)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 92 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        MsgServer.MsgSpell spell;
                        if (client.MySpells.ClientSpells.TryGetValue((ushort)Role.Flags.SpellID.Fire, out spell))
                        {
                            if (spell.Level == 3)
                            {
                                var SpellID = Role.Flags.SpellID.Tornado;
                                if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                                {
                                    data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                    break;
                                }
                                client.MySpells.Add(stream, (ushort)SpellID);
                                data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                                    .AddOption("Thanks.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, but you need Thunder Level 4.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you need Thunder Level 4.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 23:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        MsgServer.MsgSpell spell;
                        if (client.MySpells.ClientSpells.TryGetValue((ushort)Role.Flags.SpellID.Thunder, out spell))
                        {
                            if (spell.Level == 4)
                            {
                                var SpellID = Role.Flags.SpellID.Fire;
                                if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                                {
                                    data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                                    break;
                                }
                                client.MySpells.Add(stream, (ushort)SpellID);
                                data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                                    .AddOption("Thanks.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, but you need Thunder Level 4.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you need Thunder Level 4.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 36:
                    {
                        if (client.Player.Level < 94)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 94 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Nectar;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 35:
                    {
                        if (client.Player.Level < 81)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 81 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.AdvancedCure;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 34:
                    {
                        if (client.Player.Level < 70)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 70 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Pray;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 33:
                    {
                        if (client.Player.Level < 60)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 60 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Invisibility;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 32:
                    {
                        if (client.Player.Level < 55)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 55 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Stigma;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        if (client.Player.Level < 50)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 50 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.MagicShield;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 30:
                    {
                        if (client.Player.Level < 45)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 45 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.StarofAccuracy;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 29:
                    {
                        if (client.Player.Level < 40)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.HealingRain;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Player.Level < 44)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 44 and get promoted.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Meditation;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 21:
                    {
                        var SpellID = Role.Flags.SpellID.Cure;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 20:
                    {
                        var SpellID = Role.Flags.SpellID.Thunder;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've learned the skill " + SpellID.ToString() + "!")
                            .AddOption("Thanks.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("The Taoist are capable of casting devastating skills and deadly spells, and proved to be versatile. Do you want to be a Taoist, now?")
                          .AddOption("Yeah,~please!", 2)
                          .AddOption("I`ll~think~about~it.", 255)
                          .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.Class == 100)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ChainBolt))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ChainBolt);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Lightning))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Lightning);
                            client.Player.Class++;
                            data.AddText("You`ve been promoted and learned corresponding XP skill. The system will notify you when your XP is full. Keep up with the good work!")
                                .AddOption("Thank~you,~Master.", 255)
                                .AddAvatar(6).FinalizeDialog();

                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("There are two paths of the Taoist, the Fire and the Water. Which one would you choose?")
                          .AddOption("Water Taoist.", 5)
                          .AddOption("Fire Taoist.", 4)
                          .AddOption("I'll think about it.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 101)
                        {
                            client.Player.Class = 142;
                            data.AddText("Good, you`ve finished the training as a Fire Taoist. Hope you can play the role of a saver in your groups well!")
                                .AddOption("Thank~you,~Master.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 5:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make 1 more space in your inventory.")
                                .AddOption("Let me check.", 255)
                                 .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Class == 101)
                        {
                            client.Player.Class = 132;
                            data.AddText("Good, you`ve finished the training as a Water Taoist. Hope you can play the role of a saver in your groups well!")
                                .AddOption("Thank~you,~Master.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.PromotionWarrior)]
        public static void PromotionWarrior(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 20 && client.Player.Class <= 25))
            {
                data.AddText("Sorry, but you are not a Warrior.").AddOption("Alright.", 255).AddAvatar(8).FinalizeDialog();
                return;
            }
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Class == 20)
                        {
                            data.AddText("To be a good Warrior, you must know your weapon, your armor be a 2nd skin, and use your shield to ward off your enemy! Remember, fortune favors the brave, and you must keep your head, even in the darkest hours. So, what can I do for you?.")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("To be a good Warrior, you must know your weapon, your armor be a 2nd skin, and use your shield to ward off your enemy! Remember, fortune favors the brave, and you must keep your head, even in the darkest hours. So, what can I do for you?")
                               .AddOption("I~want~to~get~promoted.", 3)
                               .AddOption("Learn~shield~skills.", 4)
                               .AddOption("Learn~XP~skills.", 10)
                               .AddOption("Learn~weapon~skills.", 20)
                               //  .AddOption("Learn~Pure~Skills.", 21)
                               .AddOption("You~bet!", 255)
                               .AddAvatar(8).FinalizeDialog();
                        }
                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet `Warrior` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 111:
                    {
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 20)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 3);
                        data.AddAvatar(259).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        switch (client.Player.Class)
                        {
                            case 21:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(8).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 22:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(8).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(8).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 23:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(8).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            client.Inventory.Add(stream, 131089, 1, 0, 0, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.NoSocket, true);
                                            data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(8).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 24:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(8).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(8).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn >= 0)
                                            {
                                                if (client.Inventory.HaveSpace(1))
                                                {
                                                    client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                    client.Player.Class++;
                                                    data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                                      .AddOption("Thank~you,~Master.", 255)
                                                                                      .AddAvatar(6).FinalizeDialog();

                                                    client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                                }
                                                else
                                                {
                                                    data.AddText("please remove 1 room from your inventory")
                                                                            .AddOption("oh oky.", 255)
                                                                            .AddAvatar(6).FinalizeDialog();
                                                    break;
                                                }
                                            }
                                            else
                                            {
                                                client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                client.Player.Class++;
                                                data.AddText("Excellent! You`ve learned ways of the Warrior. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                                  .AddOption("Thank~you,~Master.", 255)
                                                                                  .AddAvatar(6).FinalizeDialog();
                                            }
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(8).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                         .AddOption("Thank~you,~Master.", 255)
                                                                                                         .AddAvatar(8).FinalizeDialog();

                                    break;
                                }
                        }
                        break;
                    }
                case 21:
                    {
                        data.AddText("Only Warriors who`ve trained for all three lives can learn the Pure Skill, Perseverance. If you`ve been Reborn twice, but are not a Pure Warrior, you take some Oblivion Dew to the Reincarnation Seer in the Market and be")
                            .AddText("~Reincarnated! That way, you can obtain a new class combination.")
                                                       .AddOption("I~want~to~learn~it~now.", 22).AddOption("I`ll~think~about~it.", 255)
                                                       .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 22:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("Only pure Warriors, who have spent all 3 lives as a Warrior, can learn the Pure Skill, Perseverance.")
                                                            .AddOption("Ok~I~see.", 255)
                                                            .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        if (!Database.AtributesStatus.IsWarrior(client.Player.FirstClass) || !Database.AtributesStatus.IsWarrior(client.Player.SecondClass))
                        {
                            data.AddText("Only pure Warriors, who have spent all 3 lives as a Warrior, can learn the Pure Skill, Perseverance.")
                                                                                   .AddOption("Ok~I~see.", 255)
                                                                                   .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Perseverance;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                        {
                            data.AddText("You`ve learned Fast Blade and Scented Sword!")
                                                             .AddOption("Okay.", 255)
                                                             .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            string line = "You just have learned the skill ";
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                                line += Role.Flags.SpellID.FastBlader.ToString();
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                                line += "/" + Role.Flags.SpellID.ScrenSword.ToString();
                            }
                            data.AddText(line)
                                            .AddOption("Thank you..", 255)
                                            .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }
                case 10:
                    {
                        data.AddText("Which skill do you want to learn?")
                            .AddOption("Superman" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Superman) ? "(Learned)" : "(Lv.3)") + "", 11)
                            .AddOption("Accuracy" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy) ? "(Learned)" : "(Lv.3)") + "", 12)
                            .AddOption("Roar" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Roar) ? "(Learned)" : "(Lv.3)") + "", 13)
                            .AddOption("Shield" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Shield) ? "(Learned)" : "(Lv.3)") + "", 14)
                              .AddOption("FlyingMoon" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FlyingMoon) ? "(Learned)" : "(Lv.40)") + "", 15)
                            .AddOption("Let~me~think~it~over.", 255)
                            .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        var SpellID = Role.Flags.SpellID.FlyingMoon;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 14:
                    {
                        var SpellID = Role.Flags.SpellID.Shield;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 13:
                    {
                        var SpellID = Role.Flags.SpellID.Roar;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        var SpellID = Role.Flags.SpellID.Accuracy;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 11:
                    {
                        var SpellID = Role.Flags.SpellID.Superman;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("Which skill do you want to learn?")
                            .AddOption("Dash" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Dash) ? "(Learned)" : "(Lv.40)") + "", 5)//40
                        //  .AddOption("Shield~Block" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ShieldBlock) ? "(Learned)" : "(Lv.40)") + "", 6)//40
                            .AddOption("Let~me~think~it~over.", 255)
                            .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Dash;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 22)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ShieldBlock;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 23)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.MagicDefender;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 8:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 23)
                        {
                            data.AddText("Sorry, I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.", 255)
                                                  .AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.DefensiveStance;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(8).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulations! You've just learned the skill " + SpellID.ToString() + "!")
                                                                 .AddOption("Thank you.", 255)
                                                                 .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("I`m proud that you made a mature decision! The warriors are adept in the use of weapons and shields for additional defense. Do you want to get promoted, now?")
                           .AddOption("Yeah,~please!", 2)
                           .AddOption("Let~me~think~it~over.", 255)
                           .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.Class == 20)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Superman))
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Superman);
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Shield))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Shield);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Accuracy);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Roar))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Roar);
                            }
                            client.Player.Class++;
                            data.AddText("You`ve learned ways of the Warrior. Now, more weapons and armors are available for you, while new skills are at your disposal. Go test your power!")
                       .AddOption("Thank~you,~Master.", 255)
                       .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PromotionTrojan)]
        public static void PromotionTrojan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 10 && client.Player.Class <= 15))
            {
                data.AddText("Trojans do not share their secrets of battle with others. I shall not teach you.").AddOption("Alright.", 255).AddAvatar(5).FinalizeDialog();
                return;
            }

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Class == 10)
                        {
                            data.AddText("Wielding dual weapons, the Trojans always charge fearlessly into combat and they believe courage is the secret of victory. So, what can I do for you?")
                            .AddOption("I~want~to~get~promoted.", 1)
                            .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Wielding dual weapons, the Trojans always charge fearlessly into combat and they believe courage is the secret of victory. So, what can I do for you?")
                               .AddOption("I~want~to~get~promoted.", 3)
                               .AddOption("Learn~class~and~weapon~skills.", 4)
                               // .AddOption("Pure~skills~for~Trojans.", 30)
                               .AddOption("Okay.~I~see.", 255)
                               .AddAvatar(5).FinalizeDialog();
                        }

                        break;
                    }
                case 110:
                    {
                        data.AddText("Ah, you look promising. I bet `Trojan` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?");
                        if (client.Player.Class == 10)
                            data.AddOption("I~want~to~get~promoted.", 1);
                        else
                            data.AddOption("I~want~to~get~promoted.", 3);
                        data.AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 30:
                    {
                        data.AddText("The Dragon Whirl is a Pure skill, which means that only players who`ve been a Trojan on their two past lives and their current life as well can learn it. Though you`ve been Reborn twice, You are not a Pure Trojan.")
                                                 .AddText("~Why not take an Oblivion Dew and speak with the Reincarnation Seer? Through the power of Reincarnation, you can obtain new class combinations and make yourself a Pure Trojan!")
                                                 .AddOption("Learn~Dragon~Whirl~(Lv~40).", 31)
                                                     .AddOption("I`ll~think~about~it.", 255)
                                                     .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 31:
                    {
                        if (client.Player.Reborn < 2)
                        {
                            data.AddText("After your 2nd Rebirth, you still have to be Reincarnated and become a Pure Trojan, to be able to learn the Dragon Whirl skill.")
                                                            .AddOption("Ok~I~see.", 255)
                                                            .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        if (!Database.AtributesStatus.IsTrojan(client.Player.FirstClass) || !Database.AtributesStatus.IsTrojan(client.Player.SecondClass))
                        {
                            data.AddText("You don'thave the combo ( Tro - Tro - Tro ) in your status.")
                                                 .AddOption("Okay.~I~see..", 255)
                                                 .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.DragonWhirl;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("300 years ago, General Pak was ordered to fight against the Flame Devastator. However, a traitor in his army led to Pak`s unexpected death.")
                                                    .AddText("~and the annihilation of his army. Pak`s Ghost (Twin City 267,194) refused to rest in peace, waiting for a chosen Trojan to change the history.")
                                                    .AddText("~The Trojan who successfully changes the history will earn a fabulous Epic Weapon.")
                                                    .AddText("\n\n    (Level 120+ or reborn Trojans will receive a Trojan Epic Weapon for free by completing a specified Trojan Epic Quest every day, and a series of Epic Quests in 90 days.)")
                                                    .AddOption("Head~to~see~General~Pak.", 101)
                                                    .AddOption("I`ll~think~about~it.", 255)
                                                        .AddAvatar(5).FinalizeDialog();



                        break;
                    }
                case 3:
                    {
                        switch (client.Player.Class)
                        {
                            case 11:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 12:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 13:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                            client.Player.Class++;
                                            client.Inventory.Add(stream, 130089, 1, 0, 0, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.NoSocket, true);
                                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(5).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 14:
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(5).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox in your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn >= 0)
                                            {
                                                if (client.Inventory.HaveSpace(1))
                                                {
                                                    client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                    client.Player.Class++;
                                                    data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                                      .AddOption("Thank~you,~Master.", 255)
                                                                                      .AddAvatar(6).FinalizeDialog();

                                                    client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                                }
                                                else
                                                {
                                                    data.AddText("Please make room for 1 items in your inventory.")
                                                                            .AddOption("Okay.", 255)
                                                                            .AddAvatar(6).FinalizeDialog();
                                                    break;
                                                }
                                            }
                                            else
                                            {
                                                client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                client.Player.Class++;
                                                data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                                  .AddOption("Thank~you,~Master.", 255)
                                                                                  .AddAvatar(6).FinalizeDialog();
                                            }
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                         .AddOption("Thank~you,~Master.", 255)
                                                                                                         .AddAvatar(5).FinalizeDialog();

                                    break;
                                }
                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("The XP skills for Trojans are Accuracy, Cyclone and Golem. Accuracy can triple your hit rate; Cyclone can increase your speed; By using the Golem skill, you can transform")
                                                        .AddText("~into a fearful Golem! Trojans are always fearless. Hercules makes them powerful and swift, while the mysterious Epic skills enable Trojans to be much fiercer than ever.")
                                                        .AddText("~So, which one did you want to learn?")
                                                        .AddOption("Trojan`s~skills.", 6)
                                                            .AddOption("Let~me~see.", 255)
                                                            .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        data.AddText("The XP skills for Trojans are Accuracy, Cyclone and Golem. Accuracy can triple your hit rate, Cyclone can increase your attack speed, and by using the Golem skill, you can transform")
                                                   .AddText("~into a fearful Golem! Trojans are always fearless. Hercules makes them powerful and swift, and the Breath Focus recovers the Stamina in time.")
                                                   .AddText("When the Super Cyclone sweeps, no one can stand. Which one would you like to learn?")
                                                     .AddOption("Accuracy~and~Cyclone~" + ((client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cyclone) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy)) ? "(Learned)" : "(Lv.40)") + ".", 9)
                                                       .AddOption("Golem~" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Golem) ? "(Learned)" : "(Lv.40)") + ".", 10)
                                                         .AddOption("Hercules~" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Hercules) ? "(Learned)" : "(Lv.40)") + ".", 11)
                                                             .AddOption("Spirit~Healing~" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.SpiritHealing) ? "(Learned)" : "(Lv.40)") + ".", 12)
                                                       .AddOption("Superior~skills.", 14)
                                                       .AddOption("Learn~weapon~skills.", 15)
                                                               .AddOption("I`ll~think~about~it.", 255)
                                                       .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        if (client.Player.Reborn > 1)
                        {
                            data.AddText("Please choose the spell you want to learn.")
                                  .AddOption("CruelShade(L40).", 31).AddOption("I`ll~think~about~it.", 255)
                                  .AddAvatar(5).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, only reborn players can learn this skill.")
                                                 .AddOption("Okay.~I~see.", 255)
                                                 .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }
                case 32:
                    {
                        if (client.Player.Reborn > 1)
                        {
                            if (client.Player.Level < 40 || client.Player.Class < 12)
                            {
                                data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                      .AddOption("Okay.~I~see..", 255)
                                                      .AddAvatar(5).FinalizeDialog();
                                break;
                            }
                            var SpellID = Role.Flags.SpellID.CruelShade;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(5).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Golem;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Hercules;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();


                        break;
                    }
                case 12:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.SpiritHealing;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(5).FinalizeDialog();
                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level < 40 || client.Player.Class < 12)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 40 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cyclone))
                        {
                            data.AddText("You`ve learned Accuracy and Cyclone!")
                                                             .AddOption("Okay.", 255)
                                                             .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            string line = "You just have learned the skill ";
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Accuracy))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Accuracy);
                                line += Role.Flags.SpellID.Accuracy.ToString();
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Cyclone))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.Cyclone);
                                line += "/" + Role.Flags.SpellID.Cyclone.ToString();
                            }
                            data.AddText(line)
                                            .AddOption("Thank you..", 255)
                                            .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }
                case 15:
                    {
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader) && client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                        {
                            data.AddText("You`ve learned Fast Blade and Scented Sword!")
                                                             .AddOption("Okay.", 255)
                                                             .AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            string line = "You just have learned the skill ";
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                                line += Role.Flags.SpellID.FastBlader.ToString();
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                                line += "/" + Role.Flags.SpellID.ScrenSword.ToString();
                            }
                            data.AddText(line)
                                            .AddOption("Thank you..", 255)
                                            .AddAvatar(5).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 15 && client.Player.Class == 10)
                        {
                            data.AddText("The Trojans are all-out offensive melee combat fighters. Do you want to be a qualified Trojan, now?.")
                                                             .AddOption("Yeah,~please!", 2)
                                                             .AddAvatar(5).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Only the powerful deserve to be trained. You are still a mere fledgeling.")
                                                              .AddOption("Oh,~I~see..", 255)
                                                              .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Player.Level >= 15 && client.Player.Class == 10)
                        {
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.FastBlader))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.FastBlader);
                            }
                            if (!client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScrenSword))
                            {
                                client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.ScrenSword);
                            }
                            client.Player.Class++;
                            data.AddText("Excellent! You`ve learned ways of the Trojan. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                              //.AddText("~For a limited time, you can buy special Super and Elite Kits that are just right for you! Only at the Kit Merchant! One more thing, the Vice Captain in Twin City (511,360) has a quest to test you. You won`t say NO, right?")
                                                              .AddOption("Thank~you,~Master.", 255)
                                                              .AddAvatar(5).FinalizeDialog();

                        }
                        else
                        {
                            data.AddText("Only the powerful deserve to be trained. You are still a mere fledgeling.")
                                                                 .AddOption("Oh,~I~see..", 255)
                                                                 .AddAvatar(5).FinalizeDialog();
                        }


                        break;
                    }

            }

        }
        [NpcAttribute(NpcID.PromotionArcher)]
        public static void PromotionArcher(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            if (!(client.Player.Class >= 40 && client.Player.Class <= 45))
            {
                data.AddText("Sorry, but you are not a Archer.")
                                                           .AddOption("Alright.", 255)
                                                           .AddAvatar(10).FinalizeDialog();
                return;
            }

            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Class == 40)
                        {
                            data.AddText("Born with sharp insight and swift skill, the Archers are expert in shooting arrows and wielding throwing knives to deadly purpose.")
                            .AddOption("I~want~to~get~promoted", 1)
                            .AddOption("I`ll~think~about~it.", 255)
                            .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("Born with sharp insight and swift skill, the Archers are expert in shooting arrows and wielding throwing knives to deadly purpose.")
                               .AddOption("I~want~to~get~promoted", 33)
                               .AddOption("Learn~the~Class~Skill.", 5)
                            //   .AddOption("Learn~the~Pure~Skill.", 30)
                               .AddOption("I`ll~think~about~it.", 255)
                               .AddAvatar(10).FinalizeDialog();
                        }


                        break;
                    }
                case 110:
                    {

                        data.AddText("Ah, you look promising. I bet `Archer` will be a big name in a short time. Listen, you can learn class skills and")
                                  .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.")
                        .AddOption("Thanks.", 111)
                        .AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 111:
                    {
                        data.AddText("Wow, look at you, you`ll be another hero in the world of Conquer! Here, you can learn some skills and get promoted! Do you want to learn more?")
                                    .AddText("~get promoted here to start your life. Would you like to learn something about your class promotion and quests?.");
                        if (client.Player.Class == 40)
                            data.AddOption("I~want~to~get~promoted", 1);
                        else
                            data.AddOption("I~want~to~get~promoted", 33);
                        data.AddAvatar(259).FinalizeDialog();

                        break;
                    }
                case 33:
                    {
                        if (client.Player.Level >= 15 && client.Player.Level < 40 && client.Player.Class == 41)
                        {
                            data.AddText("Sorry,~you~cannot~get~promoted~before~you~reach~level~40.~Please~train~harder.")
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(234).FinalizeDialog();
                            return;
                        }


                        switch (client.Player.Class)
                        {
                            case 41:
                                {
                                    if (client.Player.Level < 40)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 40+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1072031, 5))
                                        {
                                            data.AddText("I'm sorry but you need to have 5 EuxeniteOre in your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {

                                            client.Inventory.Remove(1072031, 5, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(10).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }

                                    break;
                                }
                            case 42:
                                {
                                    if (client.Player.Level < 70)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 70+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(1080001, 1) && !client.Inventory.Contain(1080001, 1, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Emerald at your inventory , to get one go and kill some HillMonsters ( Desert City ) to get one .")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            client.Inventory.Remove(1080001, 1, stream);
                                            client.Player.Class++;
                                            data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                              .AddOption("Thank~you,~Master.", 255)
                                                                              .AddAvatar(10).FinalizeDialog();
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            case 43:
                                {
                                    if (client.Player.Level < 100)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 100+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.Meteor, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 Meteor at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn >= 0)
                                            {
                                                client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                                                client.Player.Class++;
                                                client.Inventory.Add(stream, 133079, 1, 0, 0, 0, Role.Flags.Gem.EmptySocket, Role.Flags.Gem.NoSocket, true);
                                                data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                                  .AddOption("Thank~you,~Master.", 255)
                                                                                  .AddAvatar(10).FinalizeDialog();
                                            }
                                            else
                                            {
                                                data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                            }
                                        }
                                    }
                                    break;
                                }
                            case 44://133089 EagleCoat
                                {
                                    if (client.Player.Level < 110)
                                    {
                                        data.AddText("There is much that you must learn before you can accept my training. Slaughter a legion of monsters first! [Level 110+]")
                                                                         .AddOption("I~see.", 255)
                                                                         .AddAvatar(10).FinalizeDialog();
                                    }
                                    else
                                    {
                                        if (!client.Inventory.Contain(Database.ItemType.MoonBox, 1))
                                        {
                                            data.AddText("I'm sorry but you need to have 1 MoonBox at your inventory.")
                                                                     .AddOption("I~see.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                                            break;
                                        }
                                        if (Database.DataCore.AtributeStatus.CheckStatus(client.Player))
                                        {
                                            if (client.Player.Reborn >= 0)
                                            {
                                                if (client.Inventory.HaveSpace(1))
                                                {
                                                    client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                    client.Player.Class++;
                                                    data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                                      .AddOption("Thank~you,~Master.", 255)
                                                                                      .AddAvatar(6).FinalizeDialog();

                                                    client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                                }
                                                else
                                                {
                                                    data.AddText("please remove 1 room from your inventory")
                                                                            .AddOption("oh oky.", 255)
                                                                            .AddAvatar(6).FinalizeDialog();
                                                    break;
                                                }
                                            }
                                            else
                                            {
                                                client.Inventory.Remove(Database.ItemType.MoonBox, 1, stream);
                                                client.Player.Class++;
                                                data.AddText("Excellent! You`ve learned ways of the Archer. Do you feel a different energy in your body? That`s stronger power and battle prowess!")
                                                                                  .AddOption("Thank~you,~Master.", 255)
                                                                                  .AddAvatar(6).FinalizeDialog();
                                            }
                                        }
                                        else
                                        {
                                            data.AddText(Database.DataCore.AtributeStatus.InfoStr(client.Player.Class, (byte)client.Player.Level)).AddOption("Thank you..", 255).AddAvatar(5).FinalizeDialog();
                                        }
                                    }


                                    break;
                                }
                            default:
                                {
                                    data.AddText("You cannot be promoted anymore. You have mastered your class")
                                                                                                        .AddOption("Thank~you,~Master.", 255)
                                                                                                        .AddAvatar(10).FinalizeDialog();


                                    break;
                                }
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Flight, ranged attack and maneuverability are powers all possessed by the archer.")
                           .AddOption("I~want~to~get~promoted", 2)
                           .AddOption("I`ll~think~about~it.", 255)
                           .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.Class == 40)
                        {
                            client.MySpells.Add(stream, (ushort)Role.Flags.SpellID.XpFly);
                            client.Player.Class++;
                            data.AddText("Good, you have trained hard, and completed my lesson this day. You have gained power and skills.")
                       .AddOption("Thank~you,~Master.", 255)
                       .AddAvatar(10).FinalizeDialog();
                        }


                        break;
                    }
                case 30:
                    {
                        data.AddText("Only Pure Archers can learn the Pure Skill, Star Arrow. If you`ve been Reborn twice, but are not a Pure Archer, you can take some Oblivion Dew to the Reincarnation Seer in the Market and be")
                     .AddText("~Reincarnated. That way, you can obtain a new class combination.")
                            .AddOption("I~want~to~learn~it~now.", 31)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(10).FinalizeDialog();



                        break;
                    }
                case 31:
                    {
                        if (client.Player.Reborn == 2 && Database.AtributesStatus.IsArcher(client.Player.FirstClass) && Database.AtributesStatus.IsArcher(client.Player.SecondClass))
                        {
                            var SpellID = Role.Flags.SpellID.StarArrow;
                            if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                            {
                                data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                                break;
                            }
                            client.MySpells.Add(stream, (ushort)SpellID);
                            data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                     .AddOption("Ok , thank you.", 255)
                                                                     .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Only pure Archers, whose classes for their past two lives and their current life are all Archers, can learn the pure skill Star Arrow.")
                      .AddOption("Okay.~I~see.", 255)
                      .AddAvatar(10).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("The powerful Archers are expert in shooting clustered demons to death. When transforming into Oriental Assassins, they are able to wield the Throwing Knives to deadly purpose.")
                             .AddOption("Learn~Archer~skills.", 10)
                             //.AddOption("Learn~Superior~skills.", 12)
                             .AddOption("Leave.", 255)
                             .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        data.AddText("After equipping bow and arrows, Archers can fly and attack enemies in the air!")
                      .AddOption("XP~Fly~[Level~1]", 70)
                      .AddOption("Rapid~Fire" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.RapidFire) ? "(Learned)" : "[Level~46+]") + "", 13)
                      .AddOption("Improved~Fly" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Fly) ? "(Learned)" : "[Level~70+]") + "", 14)
                      .AddOption("Arrow~Rain" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ArrowRain) ? "(Learned)" : "[Level~70+]") + "", 15)
                      .AddOption("Intensify" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.Intensify) ? "(Learned)" : "[Level~71+]") + "", 16)
                      .AddOption("Scatter~Fire" + (client.MySpells.ClientSpells.ContainsKey((ushort)Role.Flags.SpellID.ScatterFire) ? "(Learned)" : "[Level~23+]") + "", 17)
                      .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 70:
                    {
                        var SpellID = Role.Flags.SpellID.XpFly;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 17:
                    {
                        if (client.Player.Level < 23 || client.Player.Class < 41)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 23 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ScatterFire;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 16:
                    {
                        if (client.Player.Level < 71 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 71 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Intensify;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 15:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.ArrowRain;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(5).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 14:
                    {
                        if (client.Player.Level < 70 || client.Player.Class < 42)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 70 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.Fly;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 13:
                    {
                        if (client.Player.Level < 46 || client.Player.Class < 41)
                        {
                            data.AddText("Sorry. I can`t teach you this skill until you reach level 46 and get promoted.")
                                                  .AddOption("Okay.~I~see..", 255)
                                                  .AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        var SpellID = Role.Flags.SpellID.RapidFire;
                        if (client.MySpells.ClientSpells.ContainsKey((ushort)SpellID))
                        {
                            data.AddText("You`ve learned " + SpellID.ToString() + "!").AddOption("Okay.", 255).AddAvatar(10).FinalizeDialog();
                            break;
                        }
                        client.MySpells.Add(stream, (ushort)SpellID);
                        data.AddText("Congratulation! You just have learned the skill " + SpellID.ToString() + "")
                                                                 .AddOption("Ok , thank you.", 255)
                                                                 .AddAvatar(10).FinalizeDialog();


                        break;
                    }
            }
        }

        #endregion
        #region Guild
        [NpcAttribute(NpcID.GuildCreator)]
        public static void GuildCreator(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.MyGuild == null)
                        {
                            data.AddText("I'm the Guild Director, in charge of administrating and managing Guilds.\n")
                                .AddText("Guild Leaders can post up a Guild recruitment ad to recruit new blood for their Guilds!\n")
                                .AddText("Players without a Guild can get the latest Guild recruitment information from me, and then find a good guild to join!")
                                .AddOption("Create~a~Guild.", 1)
                                .AddOption("Never~mind.", 255).AddAvatar(6).FinalizeDialog();
                        }
                        else if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("I'm the Guild Director, in charge of administrating and managing guilds. What business do you have with me?\n")
                                .AddText("Guild Leaders can post up a guild recruitment ad to recruit new blood for their guilds! Players without a guild can get the latest guild recruitment information from me, and then find a good guild to join!\n")
                             // .AddOption("Create~a~guild", 1)
                                .AddOption("Add Ally.", 6)
                                .AddOption("Add Enemy.", 8)
                                .AddOption("Remove Ally.", 10)
                                .AddOption("Remove Enemy.", 12)
                                .AddOption("Promote Member.", 14)
                                .AddOption("Demote Member.", 16)
                                .AddOption("Pass Leadership.", 4)
                                .AddOption("Disband~my~guild.", 2)
                                .AddAvatar(6).FinalizeDialog();

                        }
                        else
                        {
                            data.AddText("Sorry, you're not the Guild Leader.").AddOption("Okay.", 255).AddAvatar(6).FinalizeDialog();

                        }
                        break;
                    }
                #region Passing LeaderShip
                case 4:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                               .AddOption("Okay.", 255)
                               .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        data.AddText("You may pass Guild Leader to another member of your Guild.")
                            .AddInput("Member name:", 5).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        string Username = Input;
                        if (client.Player.MyGuild == null) break;
                        if (client.Player.MyGuildMember == null) break;
                        if (client.Player.MyGuildMember.Rank != Role.Flags.GuildMemberRank.GuildLeader)
                            break;
                        if (Username.Length > 0 && Username != null)
                        {
                            client.Player.MyGuild.Promote((uint)Role.Flags.GuildMemberRank.GuildLeader, client.Player, Username, stream);
                        }
                        break;
                    }
                #endregion
                #region AddAlly
                case 6:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        data.AddText("Please enter the name of the Guild you wish to Ally.")
                            .AddInput("Ally name:", 7).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        string name = Input;
                        if (client.Player.MyGuild == null) break;
                        if (client.Player.MyGuildMember == null) break;
                        if (client.Player.MyGuildMember.Rank != Role.Flags.GuildMemberRank.GuildLeader)
                            break;
                        if (name.Length > 0 && name != null)
                        {
                            if (name == client.Player.MyGuild.GuildName)
                                break;
                            if (client.Player.MyGuild.AllowAddAlly(name))
                            {
                                if (!client.Player.MyGuild.IsEnemy(name))
                                {
                                    var leader = Role.Instance.Guild.GetLeaderGuild(name);
                                    if (leader != null && leader.IsOnline)
                                    {
                                        Client.GameClient LeaderClient;
                                        if (Database.Server.GamePoll.TryGetValue(leader.UID, out LeaderClient))
                                        {
                                            LeaderClient.Send(stream.GuildRequestCreate(COServer.Game.MsgServer.MsgGuildProces.GuildAction.RequestAllied, 0, new int[3], client.Player.MyGuild.GuildName));
                                            client.Player.MyGuild.AddAlly(stream, name);
                                        }
                                    }
                                    else
                                    {
                                        client.SendSysMesage("This Guild doesn't exist.");

                                    }
                                }

                                else
                                {
                                    client.SendSysMesage("Sorry, this Guild is in Enemies list.");
                                }
                            }
                        }

                        //  client.Player.MyGuild.AddAlly(stream, GuildAlly);
                        break;
                    }
                #endregion
                #region AddEnemy
                case 8:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                     .AddOption("Okay.", 255)
                     .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        data.AddText("Please enter the name of the Guild you wish to Enemy.")
                         .AddInput("Enemy~name:", 9).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        string name = Input;
                        if (client.Player.MyGuild == null) break;
                        if (client.Player.MyGuildMember == null) break;
                        if (client.Player.MyGuildMember.Rank != Role.Flags.GuildMemberRank.GuildLeader)
                            break;
                        if (name.Length > 0 && name != null)
                        {
                            if (name == client.Player.MyGuild.GuildName)
                                break;
                            if (client.Player.MyGuild.AllowAddAlly(name))
                            {
                                client.Player.MyGuild.AddEnemy(stream, name);
                                client.Player.MyGuild.SendMessajGuild("Guild Leader " + client.Player.Name + " has added Guild " + name + " to the Enemies list!");
                            }
                            else
                            {
                                client.SendSysMesage("Sorry, this Guild is in Allies list.");
                            }

                        }

                        //  client.Player.MyGuild.AddAlly(stream, GuildAlly);
                        break;
                    }
                #endregion
                #region RemoveAlly
                case 10:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                     .AddOption("Okay.", 255)
                     .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        data.AddText("Please enter the name of the Guild you wish to remove from Allies list.")
                         .AddInput("Ally~name:", 11).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 11:
                    {
                        string name = Input;
                        if (client.Player.MyGuild == null) break;
                        if (client.Player.MyGuildMember == null) break;
                        if (client.Player.MyGuildMember.Rank != Role.Flags.GuildMemberRank.GuildLeader)
                            break;
                        if (name.Length > 0 && name != null)
                        {
                            client.Player.MyGuild.RemoveAlly(name, stream);
                        }


                        //  client.Player.MyGuild.AddAlly(stream, GuildAlly);
                        break;
                    }
                #endregion
                #region RemoveEnemy
                case 12:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                     .AddOption("Okay.", 255)
                     .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        data.AddText("Please enter the name of the Guild you wish to remove from Enemies list.")
                         .AddInput("Enemy~name:", 13).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        string name = Input;
                        if (client.Player.MyGuild == null) break;
                        if (client.Player.MyGuildMember == null) break;
                        if (client.Player.MyGuildMember.Rank != Role.Flags.GuildMemberRank.GuildLeader)
                            break;
                        if (name.Length > 0 && name != null)
                        {
                            client.Player.MyGuild.RemoveEnemy(name, stream);
                        }


                        break;
                    }
                #endregion
                #region PromotMember
                case 14:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                     .AddOption("Okay.", 255)
                     .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        data.AddText("Which member would you like to promote?")
                         .AddInput("Member~name:", 15).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 15:
                    {
                        string name = Input;
                        if (client.Player.MyGuild == null) break;
                        if (client.Player.MyGuildMember == null) break;
                        if (client.Player.MyGuildMember.Rank != Role.Flags.GuildMemberRank.GuildLeader)
                            break;
                        if (name.Length > 0 && name != null)
                        {
                            client.Player.MyGuild.Promote((uint)Role.Flags.GuildMemberRank.DeputyLeader, client.Player, name, stream);

                        }


                        break;
                    }
                #endregion
                #region DemoteMember
                case 16:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }
                        data.AddText("Which member would you like to Demote?")
                            .AddInput("Member~name:", 17).AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 17:
                    {
                        string name = Input;
                        if (client.Player.MyGuild == null) break;
                        if (client.Player.MyGuildMember == null) break;
                        if (client.Player.MyGuildMember.Rank != Role.Flags.GuildMemberRank.GuildLeader)
                            break;
                        if (name.Length > 0 && name != null)
                        {
                            client.Player.MyGuild.Promote((uint)Role.Flags.GuildMemberRank.Member, client.Player, name, stream);

                        }


                        break;
                    }
                #endregion

                case 1:
                    {
                        data.AddText("Please choose a Guild name.")
                            .AddInput("Name:", 3).AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.GuildRank != Role.Flags.GuildMemberRank.GuildLeader)
                        {
                            data.AddText("Sorry, you're not the Guild Leader.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                            break;
                        }

                        if (client.Player.MyGuild != null && client.Player.MyGuildMember != null)
                        {
                            client.Player.MyGuild.Dismis(client, stream);
                        }
                        else
                        {
                            data.AddText("You don't have a Guild.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        string GuildName = Input;
                        if (Role.Instance.Guild.AllowToCreate(GuildName))
                        {
                            if (client.Player.Level >= 90)
                            {
                                if (client.Player.Money >= 5000000)
                                {

                                    if (client.Player.MyGuild == null)
                                    {

                                        client.Player.Money -= 5000000;
                                        client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                        new Role.Instance.Guild(client, GuildName, stream);
                                        Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage(string.Format("Congratulations! {0} has created new guild {1} successfully!", client.Player.Name, GuildName), Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.System).GetArray(stream));
                                    }
                                    else
                                    {
                                        data.AddText("Sorry, you already have a Guild.")
                                            .AddOption("Okay.", 255)
                                            .AddAvatar(6).FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("You don't have 5,000,000 gold with you.")
                                        .AddOption("Okay.", 255)
                                        .AddAvatar(6).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, you need to be at least level 90.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("Sorry, this Guild name is taken.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GoldPrizeToken)]
        public static void GoldPrizeToken(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            if (!client.Inventory.Contain(723467, 7))
            {
                client.SendSysMesage("Sorry, you don`t have a 7 LordTokens.");
                return;
            }



            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("Hey " + client.Player.Name + ", are you sure if your account is ready to equip the legendary GoldPrize ?!")
                          .AddOption("Yes , i am ready.", 1)
                          .AddOption("Nevermind.", 255)
                          .FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {

                            string MSG = "Congratulation to " + client.Player.Name + " ! he/she managed to open the legendary LordToken and received 1 GoldPrize.";
                            Program.SendGlobalPackets.Enqueue(new MsgMessage(MSG, MsgMessage.MsgColor.red, MsgMessage.ChatMode.System).GetArray(stream));
                            client.Inventory.Remove(723467, 7, stream);
                            client.Inventory.Add(stream, 2100075, 1);
                        }
                        else
                        {
                            client.CreateBoxDialog("Please make 1 more space in your inventory.");
                        }
                        break;
                    }

            }
        }
        public static void GuildCondTeleBack(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Would you like to enter the Guild Area?")
                            .AddOption("Yes.", 1)
                            .AddOption("Never~mind.", 255).AddAvatar(3).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 500)
                        {
                            client.Player.Money -= 500;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Teleport(348, 339, 1038);
                        }
                        else
                        {
                            data.AddText("You don't have 500 gold with you.")
                                 .AddOption("I~see.", 255)
                                 .AddAvatar(3).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        #region GuildWar
        [NpcAttribute(NpcID.GWJail)]
        public static void GWJail(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You're in Guild War jail, please wait until pardon.")
                            .AddOption("Leave jail.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("You may now leave jail.")
                            .AddOption("Twin City.", 3)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(63).FinalizeDialog();



                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002, 0, true, true);
                        break;
                    }
            }
        }

        public static void GuildConductorsProces(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Are you headed to the next teleporter?")
                            .AddOption("Yes.", 1)
                            .AddOption("Buy~Guild~Teleporter.", 2)
                            .AddOption("Just~passing~by.", 255).AddAvatar(3).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);

                            ushort x, y;
                            uint map;
                            MsgSchedules.GuildWar.GuildConductors[(NpcID)client.ActiveNpc - 1].GetCoords(out x, out y, out map);

                            client.Teleport(x, y, map);
                        }
                        else
                        {
                            data.AddText("It costs 1,000 gold to use the teleporter.")
                                .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("A Guild Conductor Teleporter costs 1kk gold.")
                            .AddOption("Buy GuildConductor1.", 3)
                            .AddOption("Buy GuildConductor2.", 4)
                            .AddOption("Buy GuildConductor3.", 5)
                            .AddOption("Buy GuildConductor4.", 6)
                            .AddOption("Never~mind.", 255).AddAvatar(3).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                                                   && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 1000000)
                                {
                                    client.Player.Money -= 1000000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720021);
                                }
                                else
                                {

                                    data.AddText("You don't have 1kk gold on you.")
                                  .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                                    .AddOption("Okay.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry, only the Guild Leader who won the last Guild War may buy this.")
                                .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
                case 6:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                            && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 1000000)
                                {
                                    client.Player.Money -= 1000000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720024);
                                }
                                else
                                {

                                    data.AddText("You don't have 1kk gold on you.")
                                        .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                                    .AddOption("Okay.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry, only the Guild Leader who won the last Guild War may buy this.")
                                .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
                case 5:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                           && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 1000000)
                                {
                                    client.Player.Money -= 1000000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720023);
                                }
                                else
                                {

                                    data.AddText("You don't have 1kk gold on you.")
                                        .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                                    .AddOption("Okay.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry, only the Guild Leader who won the last Guild War may buy this.")
                                .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
                case 4:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                            && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= 1000000)
                                {
                                    client.Player.Money -= 1000000;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, 720022);
                                }
                                else
                                {

                                    data.AddText("You don't have 1kk gold on you.")
                                        .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                                }
                            }
                            else
                            {

                                data.AddText("Please make one more space in your inventory.")
                                    .AddOption("Okay.", 255).AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {

                            data.AddText("Sorry, only the Guild Leader who won the last Guild War may buy this.")
                          .AddOption("I~see.", 255).AddAvatar(3).FinalizeDialog();
                        }



                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.GuildOfficer)]
        public static void GuildOfficer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            data.AddText("There~is~" + MsgGuildWar.GuildWarScrore.ConquerPointsReward.ToString() + "~CPs~income~every~week.")
                                .AddOption("Claim rewards.", 1)
                                .AddOption("Just~passing~by.", 255).AddAvatar(110).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Guild War is being held now. Afterwards the Guild Leader of the winning Guild can gain the tax income,")
                                .AddText("which can be claimed from Monday through Thursday next week.")
                                .AddOption("Ok,~I~see.", 255).AddAvatar(110).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                            && client.Player.MyGuild != null
                            && MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {

                            if (client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader && MsgSchedules.GuildWar.Winner.LeaderReward > 0
                                 && !MsgSchedules.GuildWar.RewardLeader.Contains(client.Player.UID))
                            {
                                if (!client.Inventory.HaveSpace(3))
                                {
                                    data.AddText("Please make more space in your inventory.")
                                        .AddOption("Let me check.", 255).AddAvatar(110).FinalizeDialog();
                                    break;
                                }

                                MsgSchedules.GuildWar.RewardLeader.Add(client.Player.UID);
                                MsgSchedules.GuildWar.Winner.LeaderReward -= 1;
                                client.Player.ConquerPoints += MsgGuildWar.GuildWarScrore.ConquerPointsReward;
                                client.Inventory.Add(stream, 2100085, 1);//GoldTrophy
                                client.Player.AddFlag(MsgServer.MsgUpdate.Flags.TopGuildLeader, Role.StatusFlagsBigVector32.PermanentFlag, false);
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("" + client.Player.Name + " , Guild Leader from " + client.Player.MyGuild.GuildName + " was rewarded with " + MsgGuildWar.GuildWarScrore.ConquerPointsReward.ToString() + " CPs, and a Gold Trophy for winning Guild War.", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.TopLeft).GetArray(stream));
                                data.AddText("You've got 20,000 CPs.")
                                    .AddOption("Thank you.", 255).AddAvatar(110).FinalizeDialog();
                            }
                            //Remove the 1,000 CPs reward that goes to every Guild member. Search for:  "You've received 1,000 CPs for helping your Guild win Guild War!"
                            //else if (client.Player.GuildRank == Role.Flags.GuildMemberRank.Member)
                            //{
                            //    client.Player.ConquerPoints += 1000;
                            //    data.AddText("You've received 1,000 CPs for helping your Guild win Guild War!")
                            //        .AddOption("Okay,~thank~you.", 255).AddAvatar(110).FinalizeDialog();
                            //}
                            else
                            {
                                data.AddText("Only the Guild Leader or Deputy Leader can claim the reward!")
                                    .AddOption("Okay.", 255).AddAvatar(110).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your guild hasn't dominated the Guild Area.")
                                .AddOption("Okay.", 255).AddAvatar(110).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.GuildPole)]
        public static void GuildPole(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Select the option you want to pursue.")
                            .AddOption("Heal The Pole.", 1)
                            .AddOption("Never~mind.", 255).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.MyGuild != null)
                        {
                            if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                                && client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader
                                || client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader)
                            {
                                data.AddText("How much of your Guild Fund are you going to waste? (1 silver = 2 hp)")
                                    .AddInput("Heal The Pole.", 2)
                                    .AddOption("Never~mind.", 255).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You're not authorized to do that.")
                                    .AddOption("I see.", 255).FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        if (client.Player.MyGuild != null)
                        {
                            if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID
                                && client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader
                                || client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader)
                            {
                                uint Amount = 0;
                                if (uint.TryParse(Input, out Amount))
                                {
                                    if (Amount > 0 && Amount <= client.Player.MyGuild.Info.SilverFund && MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].HitPoints < MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].MaxHitPoints)
                                    {
                                        if (client.Player.View.Contains(MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole]))
                                        {
                                            uint totalheal = (uint)(MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].MaxHitPoints - MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].HitPoints);

                                            if (Amount > totalheal / 2)
                                                Amount = totalheal / 2;

                                            client.Player.MyGuild.Info.SilverFund -= Amount;
                                            Amount *= 2;

                                            MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].HitPoints += (int)Amount;

                                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].UID, 2);
                                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].Mesh);

                                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Hitpoints, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].HitPoints);
                                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.MaxHitpoints, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.Pole].MaxHitPoints);
                                            stream = upd.GetArray(stream);
                                            foreach (var pclient in Database.Server.GamePoll.Values)
                                            {
                                                if (pclient.Player.Map == 1038)
                                                {
                                                    pclient.Send(stream);
                                                }
                                            }

                                        }
                                    }
                                    else
                                    {
                                        data.AddText("Pole health is max.")
                                            .AddOption("Okay.", 255).FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText("Please enter a valid amount. ")
                                                                .AddOption("Okay.", 255).FinalizeDialog();
                                }
                            }

                        }
                        else
                        {

                            data.AddText("Sorry,~you~can't~open~it.\n")
                                .AddText("Only the Guild Leader or Deputy Leader can, from the Guild which dominated the pole.")
                                .AddOption("Okay.", 255).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.LeftGate)]
        public static void LeftGate(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What do you want to do?")
                            .AddOption("Open~the~gate.", 1)
                            .AddOption("Close~the~gate.", 2)
                            .AddOption("Enter.", 3)
                            .AddOption("Never~mind.", 255).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID)
                        {
                            client.TerainMask = 0;
                            client.Teleport(162, 192, 1038);
                        }
                        else
                        {
                            data.AddText("Only the Guild Leader or Deputy Leader can, from the guild which dominated the pole.")
                                .AddOption("Okay.", 255).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) && MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh == Role.SobNpc.StaticMesh.LeftGate)
                            {
                                data.AddText("Gate~is~already~closed.")
                                    .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            if (MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].HitPoints == 0)
                                MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].HitPoints = MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].MaxHitPoints;

                            MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh = Role.SobNpc.StaticMesh.LeftGate;

                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].UID, 2);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh);
                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Hitpoints, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].HitPoints);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].X
                                        , MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Only the Guild Leader or Deputy Leader can, from the guild which dominated the pole.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) && MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh == Role.SobNpc.StaticMesh.OpenLeftGate)
                            {
                                data.AddText("Gate~is~already~opened.")
                                    .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh = Role.SobNpc.StaticMesh.OpenLeftGate;
                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].UID, 1);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Mesh);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].X
                                        , MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.LeftGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Only the Guild Leader or Deputy Leader can, from the guild which dominated the pole.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.RightGate)]
        public static void RightGate(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What do you want to do?")
                        .AddOption("Open~the~gate", 1)
                        .AddOption("Close~the~gate.", 2)
                        .AddOption("Enter.", 3)
                        .AddOption("Never~mind.", 255).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.GuildID == MsgSchedules.GuildWar.Winner.GuildID)
                        {
                            client.TerainMask = 0;
                            client.Teleport(203, 176, 1038);
                        }
                        else
                        {
                            data.AddText("Only the Guild Leader or Deputy Leader can, from the guild which dominated the pole.")
                              .AddOption("Okay.", 255).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) && MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh == Role.SobNpc.StaticMesh.RightGate)
                            {
                                data.AddText("Gate~is~already~closed.")
                                    .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            if (MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].HitPoints == 0)
                                MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].HitPoints = MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].MaxHitPoints;

                            MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh = Role.SobNpc.StaticMesh.RightGate;

                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].UID, 2);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh);
                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Hitpoints, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].HitPoints);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].X
                                        , MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Only Guild Leader or Deputy Leader can, from the guild which dominated the pole.")
                                .AddOption("Okay.", 255).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if ((client.Player.GuildRank == Role.Flags.GuildMemberRank.DeputyLeader
                            || client.Player.GuildRank == Role.Flags.GuildMemberRank.GuildLeader) && MsgSchedules.GuildWar.Winner.GuildID == client.Player.GuildID)
                        {
                            if (MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh == Role.SobNpc.StaticMesh.OpenRightGate)
                            {
                                data.AddText("Gate~is~already~opened.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                                break;
                            }
                            MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh = Role.SobNpc.StaticMesh.OpenRightGate;
                            MsgServer.MsgUpdate upd = new MsgServer.MsgUpdate(stream, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].UID, 1);

                            stream = upd.Append(stream, MsgServer.MsgUpdate.DataType.Mesh, (long)MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Mesh);
                            stream = upd.GetArray(stream);
                            foreach (var pclient in Database.Server.GamePoll.Values)
                            {
                                if (pclient.Player.Map == 1038)
                                {
                                    if (Role.Core.GetDistance(pclient.Player.X, pclient.Player.Y, MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].X
                                        , MsgSchedules.GuildWar.Furnitures[Role.SobNpc.StaticMesh.RightGate].Y) <= Role.SobNpc.SeedDistrance)
                                    {
                                        pclient.Send(stream);
                                    }
                                }
                            }
                        }
                        else
                        {

                            data.AddText("Only Guild Leader or Deputy Leader can, from the guild which dominated the pole.")
                            .AddOption("Okay.", 255).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame1)]
        public static void Flame1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729960, 1))
                        {
                            client.Inventory.Remove(729960, 1, stream);
                            client.Inventory.Add(stream, 729961);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(317,270)~on~the~right~of~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(317,270)~on~the~right~of~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame2)]
        public static void Flame2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729961, 1))
                        {
                            client.Inventory.Remove(729961, 1, stream);
                            client.Inventory.Add(stream, 729962);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(236,291)~near~the~bridge~in~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(236,291)~near~the~bridge~in~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame3)]
        public static void Flame3(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729962, 1))
                        {
                            client.Inventory.Remove(729962, 1, stream);
                            client.Inventory.Add(stream, 729963);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(194,168)~near~the~right~gate~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(194,168)~near~the~right~gate~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame4)]
        public static void Flame4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729963, 1))
                        {
                            client.Inventory.Remove(729963, 1, stream);
                            client.Inventory.Add(stream, 729964);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(115,53)~on~the~right~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(115,53)~on~the~right~of~the~Guild~City.").FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame5)]
        public static void Flame5(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729964, 1))
                        {
                            client.Inventory.Remove(729964, 1, stream);
                            client.Inventory.Add(stream, 729965);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(316,378)~on~the~left~of~the~Guild~Arena.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(316,378)~on~the~left~of~the~Guild~Arena.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame6)]
        public static void Flame6(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729965, 1))
                        {
                            client.Inventory.Remove(729965, 1, stream);
                            client.Inventory.Add(stream, 729966);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(136,182)~near~the~left~gate~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(136,182)~near~the~left~gate~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame7)]
        public static void Flame7(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729966, 1))
                        {
                            client.Inventory.Remove(729966, 1, stream);
                            client.Inventory.Add(stream, 729967);
                            data.AddText("Congratulation! light~up~the~Flame~Stone~(38,94)~on~the~left~of~the~Guild~City.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(38,94)~on~the~left~of~the~Guild~City.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame8)]
        public static void Flame8(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729967, 1))
                        {
                            client.Inventory.Remove(729967, 1, stream);
                            client.Inventory.Add(stream, 729968);
                            data.AddText("Congratulations! light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame9)]
        public static void Flame9(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("It`s not the right time. You can`t light up the Flame Stone.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (client.Inventory.Contain(729968, 1))
                        {
                            client.Inventory.Remove(729968, 1, stream);
                            client.Inventory.Add(stream, 729969);
                            data.AddText("Congratulations! light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You cannot flame up this stone without the proper rune. Light~up~the~Flame~Stone~(350,321)~near~the~Flame~Taoist.").FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Flame10)]
        public static void Flame10(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                        {
                            client.SendSysMesage("You totally missed the right time.the 10th Flame Stone can`t be lit up now.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            break;
                        }
                        if (MsgSchedules.GuildWar.FlamesQuest.ActiveFlame10)
                        {
                            if (client.Inventory.Contain(729969, 1))
                            {
                                client.Inventory.Remove(729969, 1, stream);
                                client.Inventory.Add(stream, 729970);
                                data.AddText("Congratulations! light~up~the~Flame~Stone~(62,59)~near~the~Stone~Pole~in~the~Guild~City.").FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You cannot flame up this stone without the proper rune. light~up~the~Flame~Stone~(62,59)~near~the~Stone~Pole~in~the~Guild~City.").FinalizeDialog();
                            }
                        }
                        else
                        {
                            client.SendSysMesage("You totally missed the right time.the 10th Flame Stone can`t be lit up now.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.FlameTaoist)]
        public static void FlameTaoist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You must have heard that the Olympic Games. I`ve been waiting for it for my entire life. There are 10 Flame Stones")
                                                      .AddText("~that I would like you to light up...You will get some rewards, of course. It really makes sense to us, ah, at least to me.")
                                                  .AddOption("Rewards?~Tell~me~more!~Come~on!", 1)
                                                  .AddOption("Can you give me a rune?", 4)
                                                  .AddOption("I~have~a~rune.~Gimme~the~reward!", 5)
                                                  .AddOption("Not~interested.", 255)
                                                  .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(729970, 1))
                        {
                            if (MsgSchedules.GuildWar.Proces == ProcesType.Dead)
                            {
                                client.Inventory.Remove(729970, 1, stream);
                                client.GainExpBall(6000 * 12, true, Role.Flags.ExperienceEffect.angelwing);
                            }
                            else
                            {
                                data.AddText("You can't claim the reward during Guild War.")
                   .AddOption("Okay.", 255)
                   .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You can't claim the reward if you don't have a rune.")
                   .AddOption("Okay.", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        if (MsgSchedules.GuildWar.Proces != ProcesType.Dead)
                        {
                            if (!MsgSchedules.GuildWar.FlamesQuest.Registred.Contains(client.Player.UID))
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    MsgSchedules.GuildWar.FlamesQuest.Registred.Add(client.Player.UID);
                                    client.Inventory.Add(stream, 729960);
                                }
                                else
                                {
                                    data.AddText("There is not enough room in your inventory.")
                    .AddOption("Sorry.", 255)
                    .AddAvatar(67).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You already have a rune.")
                .AddOption("Thank you.", 255)
                .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You? Wait a sec... Oh, yeah, no wonder you looked familir. Each player can carry this quest ONCE a week")
                                .AddText("only, and if you have more runes, you may as well accept the quest with Flame Taoist next week and claim your reward directly when the quest ends.")
               .AddOption("Once~a~week?!", 255)
               .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 1:
                    {
                        data.AddText("Ah, you seem very interested! Good. You are eligible to light up the flame! But, it`s not the right time. You see, the")
                                                     .AddText("~ceremony will be held till the last two hours of the Guild War. Come and sign up then.")
                                                 .AddOption("Would~you~please~give~me~more~information?", 2)
                                                 .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("Yeah. I`ve prepare 10 Flame Stones in the Wind Plain and Guild Arena. When the time comes, I will give you a Jade Rune. You")
                                                      .AddText("~just take it to light up all the Flame Stones in sequence.")
                                                  .AddOption("Sure.", 255)
                                                  .AddAvatar(67).FinalizeDialog();

                        break;
                    }
            }
        }
        #endregion
        [NpcAttribute(NpcID.GuildGateKeeper)]
        public static void GuildGateKeeper(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Are~you~going~to~leave~here?")
                       .AddOption("Yes.", 1)
                       .AddOption("Never~mind.", 255)
                       .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.GuildConductor)]
        public static void GuildConductor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What~can~I~do~for~you?")
                                                .AddOption("Enter~the~guild~area.", 1)

                                                .AddOption("Buy~statue.", 2)
                                                .AddOption("Just~passing~by.", 255)
                                                .AddAvatar(123).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        client.Teleport(232, 385, 3868);
                        break;
                    }
                case 1:
                    {
                        if (MsgSchedules.GuildWar.Proces == ProcesType.Alive)
                        {
                            byte RandTele = (byte)Program.GetRandom.Next(1, 14);
                            switch (RandTele)
                            {
                                case 1: client.Teleport(326, 374, 1038); break;
                                case 2: client.Teleport(299, 371, 1038); break;
                                case 3: client.Teleport(293, 352, 1038); break;
                                case 4: client.Teleport(262, 337, 1038); break;
                                case 5: client.Teleport(285, 324, 1038); break;
                                case 6: client.Teleport(315, 289, 1038); break;
                                case 7: client.Teleport(323, 268, 1038); break;
                                case 8: client.Teleport(351, 282, 1038); break;
                                case 9: client.Teleport(371, 305, 1038); break;
                                case 10: client.Teleport(370, 326, 1038); break;
                                case 11: client.Teleport(357, 335, 1038); break;
                                case 12: client.Teleport(333, 330, 1038); break;
                                default: client.Teleport(322, 321, 1038); break;
                            }
                        }
                        else
                        {
                            client.Teleport(349, 340, 1038);
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("A statue which can be placed inside Guild War castle, will cost you 1kk gold.")
                        .AddOption("Buy statue.", 3)
                        .AddOption("Never~mind.", 255)
                        .AddAvatar(123).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        if (client.Player.Money >= 1000000)
                        {
                            if (!client.Inventory.HaveSpace(1))
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(123).FinalizeDialog();
                                break;
                            }
                            client.Inventory.Add(stream, 720020);
                            client.Player.Money -= 1000000;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);

                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 1kk gold.")
                       .AddOption("I~see.", 255)
                       .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }

            }
        }

        #endregion
        #region House
        [NpcAttribute(NpcID.Class6House)]
        public static void Class6House(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome, this is the Class 6 model house with many new features. When you`re walking around the house,")
                            .AddText("~you can talk to our guide in each area to learn more. If you want to upgrade your house to Class 6,")
                            .AddText("~I`m the right person to serve you./n")
                            .AddText("You will need 1000000 Silver in order to update your House to the next level.");
                        data.AddOption("Upgrade~my~house~with~CPs.", 1);
                        data.AddOption("Use~materials~to~upgrade.", 3);
                        data.AddOption("How~to~upgrade~my~house?", 6);
                        data.AddOption("Where~is~the~exit?", 2);
                        data.AddOption("Just passing by.", 255).AddAvatar(111).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        data.AddText("There are two ways to upgrade to Class 6: pay 8,999 CPs or submit 500 Class 6 House Packs. You can collect the Class 6 House Packs")
                            .AddText("~by participating in Dis City, Evil Labyrinth, cross-server competitions and other quests, or buy them with Honor Points,")
                            .AddText("~Horse Racing Points, or Champion Points.")
                              .AddOption("I~see", 255).AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        data.AddText("We need totally 500 Class 6 House Packs to upgrade your house to Class 6. So, how many packs would you like to submit this time?")//asta?
                                .AddOption("100.", 4)
                                .AddOption("500.", 5)
                                .AddOption("Let~me~see.", 255).AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(3008100, 100))
                        {
                            client.Inventory.RemoveStackItem(3008100, 100, stream);
                            if (Role.Core.Rate(30))
                            {
                                if (client.MyHouse == null)
                                    break;

                                ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                                if (House_ID != 0)
                                {
                                    //remove players house
                                    foreach (var pClient in Database.Server.GamePoll.Values)
                                        if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                            pClient.Teleport(1036, 200, 200);
                                }
                                if (client.MyHouse.Furnitures.Count != 0)
                                {
                                    data.AddText("Please remove all your furnitures from your house.")//asta?
                                       .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                                    break;
                                }
                                if (client.MyHouse.Level == 5)
                                {

                                    client.MyHouse.Level++;
                                    data.AddText("You have successfully updated your House.")
                                 .AddOption("Thank you.", 255).AddAvatar(111).FinalizeDialog();
                                    Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hurray ! " + client.Player.Name + " has successfully updated his house to the level 6.", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                    client.Teleport(200, 95, 1036);
                                    client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                                }
                            }
                            else
                            {
                                data.AddText("You have failed to upgrade the house to level 6 , give a try again later maybe you will have more luck .")
                              .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I`m afraid I can`t help you if you don`t have enough materials. Please go collect more.")
                               .AddOption("Okay.", 255).AddAvatar(111).FinalizeDialog();
                        }
                        break;
                    }
                case 5:
                    {
                        if (client.Inventory.Contain(3008100, 500))
                        {

                            if (client.MyHouse == null)
                                break;

                            ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                            if (House_ID != 0)
                            {
                                //remove players house
                                foreach (var pClient in Database.Server.GamePoll.Values)
                                    if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                        pClient.Teleport(1036, 200, 200);
                            }
                            if (client.MyHouse.Furnitures.Count != 0)
                            {
                                data.AddText("Please remove all your furnitures from your house.")//asta?
                                   .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                                break;
                            }
                            if (client.MyHouse.Level == 5)
                            {
                                client.Inventory.RemoveStackItem(3008100, 500, stream);
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(111).FinalizeDialog();
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hurray ! " + client.Player.Name + " has successfully updated his house to the level 6.", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                client.Teleport(200, 95, 1036);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                            }
                        }
                        else
                        {
                            data.AddText("I`m afraid I can`t help you if you don`t have enough materials. Please go collect more.")
                               .AddOption("Okay.", 255).AddAvatar(111).FinalizeDialog();
                        }
                        break;
                    }
                case 2:
                    {
                        client.Teleport(200, 95, 1036);
                        client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 1000000)
                        {
                            if (client.MyHouse == null)
                                break;

                            ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                            if (House_ID != 0)
                            {
                                //remove players house
                                foreach (var pClient in Database.Server.GamePoll.Values)
                                    if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                        pClient.Teleport(1036, 200, 200);
                            }
                            if (client.MyHouse.Furnitures.Count != 0)
                            {
                                data.AddText("Please remove all your furnitures from your house.")//asta?
                                   .AddOption("I~see.", 255).AddAvatar(111).FinalizeDialog();
                                break;
                            }
                            if (client.MyHouse.Level == 5)
                            {
                                client.Player.Money -= 1000000;
                                client.MyHouse.Level++;
                                data.AddText("You have successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(111).FinalizeDialog();
                                Program.SendGlobalPackets.Enqueue(new MsgServer.MsgMessage("Hurray ! " + client.Player.Name + " has successfully updated his house to the level 6.", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.System).GetArray(stream));

                                client.Teleport(200, 95, 1036);
                                client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, "movego");
                            }


                        }
                        else
                        {
                            data.AddText("Sorry, I can`t help you in this matter since you don`t have enough CPs. Please bring the money, next time.")
                            .AddOption("Okay.", 255).AddAvatar(111).FinalizeDialog();
                        }
                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.HouseAdmin)]
        public static void HouseAdmin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.MyHouse == null)
                        {
                            data.AddText("I'm HouseAgent, if you want to buy a house you must have my authorization!");
                            data.AddOption("How to buy a house.", 50);
                            data.AddOption("Buy a house.", 1);
                            data.AddOption("Buy House Certificate.", 2);
                            data.AddOption("Visit my wife`s house.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        else if (client.MyHouse.Level == 0)
                        {
                            data.AddText("What can I do for you?");
                            data.AddOption("Buy a house.", 1);
                            data.AddOption("Buy House Certificate.", 2);
                            data.AddOption("Visit my wife`s house.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        else if (client.MyHouse.Level == 1)
                        {
                            data.AddText("What can i do for you?");
                            data.AddOption("Visit house.", 4);
                            data.AddOption("Upgrade house.", 5);
                            data.AddOption("Buy House Certificate.", 2);
                            data.AddOption("Visit my wife`s house.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();

                        }
                        else if (client.MyHouse.Level == 5)
                        {
                            data.AddText("As the owner of a Class 5 House, you`ll be able to hold a Grand Wedding. Additionally, you can upgrade it to Class 6")
                                .AddText("~to get a more luxurious living space and more services.");
                            data.AddOption("I~wanna~go~home.", 4);
                            if (client.MyHouse.Level < 6)
                            {
                                data.AddOption("Upgrade~to~Class~6.", 20);
                                data.AddOption("Remove all furnitures.", 6);
                            }
                            data.AddOption("Visit my wife`s house.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("What can i do for you?");
                            data.AddOption("Visit house.", 4);
                            data.AddOption("Upgrade house.", 5);
                            data.AddOption("Remove all furnitures.", 6);
                            if (client.MyHouse.Level < 5)
                                data.AddOption("Buy House Certificate.", 2);
                            data.AddOption("Visit my wife`s house.", 3);
                            data.AddOption("Just passing by.", 255).AddAvatar(7).FinalizeDialog();

                        }

                        break;
                    }
                case 50:
                    {
                        data.AddText("I can give you a House Permit if you bring me 5 TimberVouchers!")
                            .AddOption("Here are the vouchers.", 51)
                            .AddOption("I'll be back.", 255).FinalizeDialog();
                        break;
                    }
                case 51:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            data.AddText("Please make some space in your inventory.")
                           .AddOption("Okay.", 255).FinalizeDialog();
                        }
                        if (client.Inventory.Contain(721173, 5))
                        {
                            client.Inventory.Remove(721173, 5, stream);
                            client.Inventory.Add(stream, 721170, 1);
                            data.AddText("Congratulations! You now have a HousePermit!")
                          .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have 5 Timber Vouchers!")
                        .AddOption("Sorry.", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 20:
                    {
                        data.AddText("To upgrade your house to Class 6, you need to talk to the Class 6 House Admin in the Class 6 Model House.");
                        data.AddOption("Okay,~send~me~there.", 21);
                        data.AddOption("Just~passing~by.", 255).AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 21:
                    {

                        client.Teleport(127, 138, 3995, 0);
                        break;
                    }
                case 6:
                    {
                        if (client.MyHouse != null)
                        {
                            client.MyHouse.Furnitures.Clear();

                            data.AddText("Your furnitures have been removed successfully.")
                                .AddOption("Thank~you.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (client.MyHouse == null)
                        {
                            if (client.Inventory.Remove(721170, 1, stream))
                            {
                                client.MyHouse = new Role.Instance.House(client.Player.UID);
                                data.AddText("You've successfully created your new house!")
                               .AddOption("Thank~you.", 255).AddAvatar(7).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("Sorry, you don't have a House Permit.")
                                .AddOption("Ok", 255).AddAvatar(7).FinalizeDialog();

                            }

                        }


                        break;
                    }
                case 5:
                    {
                        if (client.MyHouse == null) break;

                        if (client.MyHouse.Level == 0)
                        {
                            data.AddText("You don`t have a house.")
                              .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        ushort House_ID = Database.HouseTable.GetHouseId(client.MyHouse.Level);
                        if (House_ID != 0)
                        {
                            //remove players house
                            foreach (var pClient in Database.Server.GamePoll.Values)
                                if (pClient.Player.Map == House_ID && pClient.Player.DynamicID == client.Player.UID)
                                    pClient.Teleport(1036, 200, 200);
                        }
                        if (client.MyHouse.Furnitures.Count != 0)
                        {
                            data.AddText("Please remove all your furnitures from your house.")
                               .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.MyHouse.Level == 1)
                        {
                            if (client.Inventory.Remove(721174, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You've successfully updated your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have an Upgrade Cert for your house upgrade.")
                           .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 2)
                        {
                            if (client.Inventory.Remove(711198, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You've successfully upgraded your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have a Upgrade Cert(Class 3).")
                                     .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 3)
                        {
                            if (client.Inventory.Remove(711200, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You've successfully upgraded your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have a Upgrade Cert(Class 4).")
                                       .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else if (client.MyHouse.Level == 4)
                        {
                            if (client.Inventory.Remove(711553, 1, stream))
                            {
                                client.MyHouse.Level++;
                                data.AddText("You've successfully upgraded your House.")
                             .AddOption("Thank you.", 255).AddAvatar(7).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have a Upgrade Cert(Class 5).")
                                     .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Your house is max level.")
                                      .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 4:
                    {
                        if (client.MyHouse == null)
                            break;
                        if (client.MyHouse.Level == 0)
                        {
                            data.AddText("You don`t have a house.")
                              .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        ushort HouseID = 0;
                        ushort house_x = 0;
                        ushort house_y = 0;
                        if (client.MyHouse.Level == 1)
                        {
                            HouseID = 1098;
                            house_x = 32;//3
                            house_y = 39;//40
                        }
                        else if (client.MyHouse.Level == 2)
                        {
                            HouseID = 1099;
                            house_x = 53;
                            house_y = 83;
                        }
                        else if (client.MyHouse.Level == 3)
                        {
                            HouseID = 2080;
                            house_x = 78;
                            house_y = 57;
                        }
                        else if (client.MyHouse.Level == 4)
                        {
                            HouseID = 601;
                            house_x = 80;
                            house_y = 58;
                        }
                        else if (client.MyHouse.Level == 5)
                        {
                            HouseID = 3024;
                            house_x = 105;
                            house_y = 139;
                        }
                        else if (client.MyHouse.Level == 6)
                        {
                            HouseID = 3995;
                            house_x = 127;
                            house_y = 138;
                        }
                        if (HouseID != 0)
                        {

                            if (client.Team != null)
                            {
                                foreach (var members in client.Team.Temates)
                                {
                                    if (members.client != null)
                                    {
                                        if (members.client.Player.UID != client.Player.UID)
                                        {
                                            if (Role.Core.GetDistance(client.Player.X, client.Player.Y, members.client.Player.X, members.client.Player.Y) < 18)
                                            {
                                                members.client.Teleport(house_x, house_y, HouseID, client.Player.UID);
                                            }
                                        }
                                    }
                                }
                            }
                            client.Teleport(house_x, house_y, HouseID, client.Player.UID);
                        }
                        break;
                    }
                case 3:
                    {
                        if (client.Player.SpouseUID != 0)
                        {
                            if (Database.Server.GamePoll.ContainsKey(client.Player.SpouseUID))
                            {
                                var MySpouse = Database.Server.GamePoll[client.Player.SpouseUID];
                                if (MySpouse.MyHouse != null)
                                {
                                    ushort HouseID = 0;
                                    ushort house_x = 0;
                                    ushort house_y = 0;
                                    if (MySpouse.MyHouse.Level == 1)
                                    {
                                        HouseID = 1098;
                                        house_x = 33;
                                        house_y = 40;
                                    }
                                    else if (MySpouse.MyHouse.Level == 2)
                                    {
                                        HouseID = 1099;
                                        house_x = 53;
                                        house_y = 83;
                                    }
                                    else if (MySpouse.MyHouse.Level == 3)
                                    {
                                        HouseID = 2080;
                                        house_x = 78;
                                        house_y = 57;
                                    }
                                    else if (MySpouse.MyHouse.Level == 4)
                                    {
                                        HouseID = 601;
                                        house_x = 80;
                                        house_y = 58;
                                    }
                                    else if (MySpouse.MyHouse.Level == 5)
                                    {
                                        HouseID = 3024;
                                        house_x = 105;
                                        house_y = 139;
                                    }
                                    else if (client.MyHouse.Level == 6)
                                    {
                                        HouseID = 3995;
                                        house_x = 127;
                                        house_y = 138;
                                    }
                                    client.Teleport(house_x, house_y, HouseID, MySpouse.Player.UID);
                                }
                                else
                                {
                                    data.AddText("Sorry, but your wife doesn't own a house.")
                                                              .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("Sorry, but your wife isn't online.")
                                                              .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but your wife doesn't own a house.")
                                   .AddOption("Okay.", 255).AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("Do you want a memorable wedding ceremony?\n");
                        data.AddText("I can assist you in making your first house purchase.\n");
                        data.AddText("It'll cost you 500kk gold for a House Permit.");
                        data.AddOption("Buy House Permit.", 10);
                        //data.AddOption("Upgrade Cert: 199 Cps", 11);
                        //data.AddOption("UpgradeCert(Class 3): 259 CPs", 12);
                        //data.AddOption("UpgradeCert(Class 4): 299 CPs", 13);
                        //data.AddOption("UpgradeCert(Class 5): 9999 CPs", 14);
                        data.AddOption("Let me think about it.", 255).AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 10:
                    {
                        uint cost = 500000000;
                        if (client.Player.Money >= cost)
                        {
                            if (client.Inventory.Add(stream, 721170))
                            {
                                client.Player.Money -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough gold to buy that.")
                        .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 11:
                    {
                        ushort cost = 199;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 721174))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                     .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 12:
                    {
                        ushort cost = 259;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 711198))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                   .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 13:
                    {
                        ushort cost = 299;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 711200))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                   .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 14:
                    {
                        ushort cost = 9999;
                        if (client.Player.ConquerPoints >= cost)
                        {
                            if (client.Inventory.Add(stream, 711553))
                            {
                                client.Player.ConquerPoints -= cost;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs to buy that.")
                   .AddOption("Alright.", 255).AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.vouchers)]
        public static void vouchers(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("Are you here for Vouchers?");
                        dialog.Option("Yes.", 1);
                        dialog.Option("Just passing by.", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.Text("I can issue 1 Rosewood Voucher for 10 pieces of Timber, and 1 Timber Voucher for 10 Rosewood Vouchers.\n");
                        dialog.Option("Rosewood Vouchers.", 2);
                        dialog.Option("Timber Vouchers.", 3);
                        dialog.Option("Just passing by.", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            dialog.AddText("Please make some space in your inventory.")
                           .AddOption("Okay.", 255).FinalizeDialog();
                        }
                        if (client.Inventory.Contain(721171, 10))
                        {
                            client.Inventory.Remove(721171, 10, stream);
                            client.Inventory.Add(stream, 721172, 1);
                            dialog.AddText("Congratulations! You've exchanged 1 Rooswood Voucher for 1 piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have 10 pieces of Timber. I heard that Craftsman is supplying Timber.")
                       .AddOption("I see.", 255).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            dialog.AddText("Please make some space in your inventory.")
                           .AddOption("Okay.", 255).FinalizeDialog();
                        }
                        if (client.Inventory.Contain(721172, 10))
                        {
                            client.Inventory.Remove(721172, 10, stream);
                            client.Inventory.Add(stream, 721173, 1);
                            dialog.AddText("Congratulations! You've exchanged 1 Timber Voucher for 10 Rosewood Vouchers.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have 10 Rooswood Vouchers.")
                       .AddOption("I see.", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Craftsman)]
        public static void Craftsman(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("What can I do for you?");
                        dialog.Option("Do you have Timber?", 1);
                        dialog.Option("Never~mind.", 255);
                        dialog.AddAvatar(92).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        dialog.Text("We're rebuilding the market, and have a lot of extra Timber stored.");
                        dialog.Option("May I have some?", 2);
                        dialog.Option("Never~mind.", 255);
                        dialog.AddAvatar(92).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        dialog.Text("We're in urgent need of Iron Ores, I can give you a piece of Timber for 5 Iron Ores.");
                        dialog.Option("Here are 5 Iron Ores.", 3);
                        dialog.Option("I'll be back.", 255);
                        dialog.AddAvatar(92).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (!client.Inventory.HaveSpace(1))
                        {
                            dialog.AddText("Please make some space in your inventory.")
                           .AddOption("Okay.", 255).FinalizeDialog();
                        }

                        if (client.Inventory.Contain(1072010, 5))
                        {
                            client.Inventory.Remove(1072010, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072011, 5))
                        {
                            client.Inventory.Remove(1072011, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072012, 5))
                        {
                            client.Inventory.Remove(1072012, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072013, 5))
                        {
                            client.Inventory.Remove(1072013, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072014, 5))
                        {
                            client.Inventory.Remove(1072014, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072015, 5))
                        {
                            client.Inventory.Remove(1072015, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072016, 5))
                        {
                            client.Inventory.Remove(1072016, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072017, 5))
                        {
                            client.Inventory.Remove(1072017, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072018, 5))
                        {
                            client.Inventory.Remove(1072018, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else if (client.Inventory.Contain(1072019, 5))
                        {
                            client.Inventory.Remove(1072019, 5, stream);
                            client.Inventory.Add(stream, 721171, 1);
                            dialog.AddText("Congratulations! You've exchanged 5 Iron Ores for a piece of Timber.")
                        .AddOption("Thanks.", 255).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Sorry, you don't have 5 Iron Ores!")
                       .AddOption("I see.", 255).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        #endregion
        #region discity
        [NpcAttribute(NpcID.DicCityMap4)]
        public static void DicCityMap4(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What can I do for you?")
                   .AddOption("Send me to Twin City.", 2)
                   .AddOption("I have the DarkHorn.", 20)
                   .AddOption("Never~mind.", 255)
                   .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(790001, 1))
                        {
                            if (client.Inventory.HaveSpace(8))
                            {
                                MsgSchedules.DisCity.RewardDarkHorn(client, stream);
                            }
                            else
                            {
                                data.AddText("Please make 8 more spaces in your inventory.")
                                              .AddOption("Let me check.", 255)
                                              .AddAvatar(8).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have the DarkHorn.")
                      .AddOption("Okay.", 255).AddAvatar(154).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("Are you sure you'd like to be sent to Twin City?")
                            .AddOption("Yes.", 3)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DisCityMap2)]
        public static void DisCityMap2(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Can you help me? If you kill the required monsters I desire I can give you experience. You must kill " + MsgSchedules.DisCity.KillsMap2Records(client.Player.Class) + " monsters.")
                                .AddText("You've killed: " + client.Player.KillersDisCity + " monsters.")
                                .AddOption("I'm finished.", 1)
                           .AddOption("Sorry, I'll be back.", 255).AddAvatar(154).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.KillersDisCity >= MsgSchedules.DisCity.KillsMap2Records(client.Player.Class))
                        {
                            if (client.Inventory.HaveSpace(2))
                            {
                                client.Inventory.Add(stream, 723087);
                                if (Role.Core.Rate(2, 10))
                                {
                                    if (Role.Core.Rate(1, 2))
                                    {
                                        client.Inventory.Add(stream, 724155, 1);
                                        client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Veneer Pack.");
                                    }
                                    else
                                    {
                                        client.Inventory.Add(stream, 724161, 1);
                                        client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Cutter Pack.");
                                    }
                                }
                                else
                                {
                                    switch (Program.GetRandom.Next(0, 8))
                                    {
                                        case 0:
                                            {
                                                client.Inventory.Add(stream, 724158, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Red Tassel Pack.");
                                                break;
                                            }
                                        case 1:
                                            {
                                                client.Inventory.Add(stream, 724137, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Plate Pack.");
                                                break;
                                            }
                                        case 2:
                                            {
                                                client.Inventory.Add(stream, 724140, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Visor Pack.");
                                                break;
                                            }
                                        case 3:
                                            {
                                                client.Inventory.Add(stream, 724164, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Cauterant Pack.");
                                                break;
                                            }
                                        case 4:
                                            {
                                                client.Inventory.Add(stream, 724143, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Breastplate Pack.");
                                                break;
                                            }
                                        case 5:
                                            {
                                                client.Inventory.Add(stream, 724173, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Tri Plume Pack.");
                                                break;
                                            }
                                        case 6:
                                            {
                                                client.Inventory.Add(stream, 724176, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Belt Pack.");
                                                break;
                                            }
                                        case 7:
                                            {
                                                client.Inventory.Add(stream, 724146, 1);
                                                client.SendSysMesage("You've passed the 2nd level in Dis City and got the Medium Hat Rope Pack.");
                                                break;
                                            }
                                    }
                                }
                                MsgSchedules.DisCity.TeleportToMap3(client);

                            }
                            else
                            {
                                data.AddText("Please make 2 empty spaces in your inventory to receive the reward for passing the 2nd level.");
                                data.AddOption("Okay.");
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You need to kill" + MsgSchedules.DisCity.KillsMap2Records(client.Player.Class) + "~monsters~in~Hell Hall.~Hurry~up!~Only~30~players~can~be~sent~to~HellCloister~with~me.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DisCityMap1)]
        public static void DisCityMap1(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(723085, 5))
                        {
                            data.AddText("Well, now that you`ve got 5 Soul Stones, I`ll give you 2 Exp Ball(B), a Cordiality Book(B), an Exp Pill(B) and a Dis City Bless Stone(12H)(B). Then, send you to the next level. Are you ready?");
                            data.AddOption("I`m~ready.", 2);
                            data.AddOption("Leave~Dis~City.", 1);
                            data.AddOption("Wait~a~moment.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I~need~five~SoulStones~in~order~to~help~you.");
                            data.AddOption("I~see.");
                            data.FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(723085, 5))
                        {
                            client.Inventory.Remove(723085, 5, stream);

                            client.Inventory.AddItemWitchStack(Database.ItemType.ExpBall2, 0, 2, stream, true);
                            client.Inventory.Add(stream, 728883, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 720393, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                            client.Inventory.Add(stream, 728888, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);

                            MsgSchedules.DisCity.TeleportToMap2(client);
                        }
                        else
                        {
                            data.AddText("I~need~five~SoulStones~in~order~to~help~you.");
                            data.AddOption("I~see.");
                            data.AddAvatar(67);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        client.Teleport(428, 378, 1002);



                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.TwinDisCityMain)]
        public static void TwinDisCityMain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                          data.AddText("Our ancestors exerted their utmost efforts and defeated the demons.\n")
                              .AddText("Since then, the world has been at peace for hundreds of years.\n")
                              .AddText("Now the demons have come back, and the world is getting into turbulence again.\n")
                              .AddText("Dis City will take place during 7:30-7:35 and 17:30-17:35 every day, except Sundays.")
                              .AddOption("Could you tell me more?", 1)
                              .AddOption("I'm here to drive away the evils!", 10)
                              .AddOption("I`m have the DarkHorn.", 20)
                              .AddOption("Never~mind.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("The decisive battle between humans and demons broke out here.\n")
                            .AddText("The ferocious battle lasted for seven days and nights.\n")
                            .AddText("Countless heroes lost their lives, and justice won.\n")
                            .AddText("We've lived in peace for hundreds of years since.")
                            .AddOption("Tell me more!", 2).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("UltimatePluto, the leader of the demons, sworn to take revenge for one thousand years before he managed to run away.\n")
                            .AddText("To prevent the demons from returning, I've been scouting their land cautiously.\n")
                            .AddText("It seems that UltimatePluto has come back to endanger humans again.")
                            .AddOption("What should we do?", 3).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Fortunately UltimatePluto is still unfledged. He must resort to a Battle Formation for the moments. So i am about to organize an army too infiltrate his")
                            .AddText(" land and destroy his formation before he becomes stronger.")
                            .AddOption("I'd like to know more.", 4).AddOption("Sigh, I'm helpless.", 255).AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("You must kill UltimatePluto to get the Darkhorn, so I can use it to disable the formation.\n")
                            .AddText("Before you do that, you must break into HellGate, enter the HellHall, and fight through the HellCloister.\n")
                            .AddText("Countless ferocious demons are watching those strongholds.")
                            .AddText("I'll give you some strategies for breaking through those fortresses.")
                            .AddOption("Tell me about HellGate.", 6)
                            .AddOption("Tell me about HellHall.", 7)
                            .AddOption("Tell me about HellCloister.", 8)
                            .AddOption("Tell me about BattleFormation.", 9)
                            .AddOption("Thanks!", 255)
                            .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        data.AddText("HellGate is shielded from poisonous fog, so you can't approach it.\n")
                            .AddText("But demons don't fear the gas, they may turn into SoulStones after they die.\n")
                            .AddText("If you can get 5 stones for me, I'll help you break through the gate.\n")
                            .AddText("I can only help the first 60 players pass through the gate.")
                            .AddOption("Previous menu.", 4)
                            .AddOption("Thank you.", 255).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        data.AddText("HellHall is the spot where the demons swear their oaths of allegiance to UltimatePluto.\n")
                            .AddText("Every player must do their best to make a way out. Due to limited time, I can lead only 30 players to HellCloister!")
                            .AddOption("Previous menu.", 4)
                            .AddOption("Thank you.", 255).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        data.AddText("You will be divided into 2 groups to attack from the left and the right flank of HellCloister.\n")
                            .AddText("Kill as many Wraiths as you can because you can't reach Battle Formation untill the amount of Wraiths is decreased to a certain level.")
                            .AddOption("Previous menu.", 4)
                            .AddOption("Thank you.", 255).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 9:
                    {
                        data.AddText("Battle Formation is protected by Syrens, after they are killed out, UltimatePluto will appear.\n")
                            .AddText("Make the best effort to kill him, get his Darkhorn, and give it to me.\n")
                            .AddText("I can disable the Battle Formation with it.\n")
                            .AddText("Then I'll send you back, but if you fail to do it, we have to retreat and wait for another opportunity.")
                            .AddOption("Thank you.", 255)
                            .AddOption("I'd like to know more.", 4).AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain(790001, 1))
                        {
                            if (client.Inventory.HaveSpace(3))
                            {
                                MsgSchedules.DisCity.RewardDarkHorn(client, stream);
                            }
                            else
                            {
                                data.AddText("Please free up 3 spaces in your inventory.")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have the DarkHorn.")
                                .AddOption("Okay.", 255).AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 11:
                    {
                        client.SendSysMesage("You need to be Level 110+ to enter Dis City.");
                        break;
                    }
                case 10:
                    {
                        if (MsgSchedules.DisCity.AllowJoin())
                        {
                            if (client.Player.Level >= 110)
                            {
                                if (client.Inventory.HaveSpace(1))
                                {
                                    data.AddText("Kill~the~demons~to~gather~five~SoulStones, then~go~northeast~through~HellBridge,~and~look~for~me~at~HellGate.");
                                    data.AddOption("I~see.");
                                    data.AddAvatar(67);
                                    data.FinalizeDialog();

                                    MsgSchedules.DisCity.TeleportMap1(stream, client);
                                }
                                else
                                    client.CreateBoxDialog("Please make 1 more space in your inventory.");

                            }
                            else
                            {
                                data.AddText("You`re~not~strong~enough~at~the~moment.~Don`t~lose~your~life~in~vain.");
                                data.AddOption("I~see.", 11);
                                data.AddAvatar(67);
                                data.FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Please sign up between 7:30-7:35 and 17:30-17:35 every day, except Sundays.")
                                .AddOption("Thanks.", 255)
                                .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.DisCityMain)]
        public static void DisCityMain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I have been questing the meaning of life for decades.");
                        data.AddOption("Have~you~found~anything?");
                        data.AddAvatar(67);
                        data.FinalizeDialog();

                        break;
                    }
                case 40:
                    {
                        data.AddText("The Stone Ape was born from the rock used to restore cracks in the sky. He never know about it. He gets potentials. If guided properly, he can be a great immortal!")
                               .AddOption("Thank~you~for~the~information!", 42)
                               .AddOption("See~you~then!", 255)
                               .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 42:
                    {
                        data.AddText("I have a Divine Calix. Get some water from the fountain in the Maple Forest. It will help the Stone Ape to unleash his potential!")
                              .AddOption("Okay!", 43)
                              .AddOption("See~you~then!", 255)
                              .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 41:
                    {
                        data.AddText("Our ancestors exerted their utmost efforts and defeathed the demons. Since")
                         .AddText(" then the world has been kept in peace for hundreads of years. Now the demons have come back and the world is getting into turbulence again.")
                         .AddText("The Dis City will take place during 7:30-7:35 and 17:30-17:35 every day, except Sundays.")
                         .AddOption("Could you tell me more?", 1)
                         .AddOption("I am here to drive away the evils!", 10)
                         .AddOption("I`m have the DarkHorn.", 20)
                    .AddOption("I'd better leave.", 255).AddAvatar(67).FinalizeDialog();


                        break;
                    }

            }
        }

        #endregion
        #region TwinCity
        [NpcAttribute(NpcID.Moonplat)]
        public static void Moonplat(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("You may enjoy the bright moon and twinkling stars on the Moon Platform. I can teleport you there for a fee of 500 silver.")
                        .AddOption("Teleport me there", 1)
                        .AddOption("Just passing by", 255)
                        .AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 500)
                        {
                            client.Player.Money -= 500;
                            client.Teleport(184, 164, 1105);
                            dialog.AddText("Enjoy your stay at the MoonPlatform!")
                            .AddOption("Thank you", 255).AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("You don't have 500 Silvers.")
                          .AddOption("I see", 255).AddAvatar(102).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ArenaNpc)]
        public static void ArenaNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The~arena~is~open.~Welcome~to~challenge~other~people.~The~admission~fee~is~only~50~silver.")
                            .AddText("If~you~PK~in~the~arena,~you~will~not~gain~or~lose~any~experience~or~items~equipped,~and~will~get~revived~at~the~place~you~die.")
                            .AddText("The~Kungfu~circle~is~very~dangerous,~I~suggest~you~PK~in~area.")
                        .AddOption("Enter~the~arena.", 1)
                        .AddOption("Just~passing~by.", 255)
                        .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money >= 50)
                        {
                            client.Player.Money -= 50;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Teleport(51, 69, 1005);
                        }
                        else
                        {
                            data.AddText("You do not have 50 silvers with you.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(7).FinalizeDialog();

                        }

                        break;
                    }
            }
        }
        #region Jail
        [NpcAttribute(NpcID.JailCPAdmin)]
        public static void JailCPAdmin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You can exchange your DragonBalls for CPS with me.\n")
                            .AddText("I'll pay you 215 CPs per DragonBall, and 2150 CPs per DBScroll.")
                            .AddOption("Exchange~a~DBScroll.", 1)
                            .AddOption("Exchange~a~DragonBall.", 2)
                            .AddOption("I~have~nothing.", 255).AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBallScroll, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBallScroll, 1, stream);
                            client.Player.ConquerPoints += 2150;

                            client.CreateBoxDialog("Congratulations! You've received 2150 CPs!");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DBScroll?")
                          .AddOption("Sorry.", 255).AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            client.Player.ConquerPoints += 215;

                            client.CreateBoxDialog("Congratulations! You've received 215 CPs!");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DragonBall?")
                          .AddOption("Sorry.", 255).AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.JailWarden)]
        public static void JailWarden(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Lucky~for~you,~the~player~who~killed~you~is~willing~to~drop~the~murder~charges~if~you~pay~him~according~to~what~you~did.")
                            .AddText("~So~if~you~pay~him~properly~he~is~willing~to~drop~the~murder~charges.")
                            .AddOption("Ok!~Let~me~get~out~from~here.", 1)
                            .AddOption("Any~chance~for~discount?", 2)
                       .AddOption("I~would~rather~rot~in~hell!", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("The~red~name,~whose~PK~points~are~30-99,~can~leave~here~without~any~price.~The~black~name,~whose~PK~points~are~100~")
                            .AddText("or~above,~should~pay~gold~as~recognizance~to~leave~here.~Or~pay~in~CPs~if~they~really~killed~a~lot.")
                            .AddOption("Ok,~I~will~pay.", 1)
                       .AddOption("I~would~rather~stay~here.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.PKPoints < 100)
                        {
                            data.AddText("You~don\'t~need~to~stay~here~any~more.~Let~me~help~you~out")
                       .AddOption("Ok,~thanks.", 3)
                  .AddOption("I~wanna~stay~here.", 255).AddAvatar(37).FinalizeDialog();

                            break;
                        }
                        else
                        {
                            int cost = 30000;
                            // int cost = (int)(5000 + client.Player.PKPoints * 10);
                            data.AddText("You~really~murdered~a~lot.~Well~in~this~case~if~you~pay~for~yours~sins~" + cost.ToString() + "~CPs~I~will~let~you~go.")
         .AddOption("Here~is~my~payment.", 4)
    .AddOption("No,~thanks.", 255).AddAvatar(37).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        uint cost = 20000;
                        // uint cost = (uint)(5000 + client.Player.PKPoints * 10);
                        if (client.Player.ConquerPoints >= cost)
                        {
                            client.Player.ConquerPoints -= cost;
                            client.Player.PKPoints = 0;

                            if (client.Player.JailerUID > 1000000)
                            {
                                Database.TheCrimeTable crime;
                                if (Database.Server.TheCrimePoll.TryGetValue(client.Player.JailerUID, out crime))
                                {
                                    crime.AddCrime(client.Player.Name, client.Player.UID, (int)(cost / 2));
                                }
                                else
                                {
                                    crime = new Database.TheCrimeTable();
                                    crime.AddCrime(client.Player.Name, client.Player.UID, (int)(cost / 2));
                                    Database.Server.TheCrimePoll.TryAdd(client.Player.JailerUID, crime);
                                }
                                client.Player.JailerUID = 0;
                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage($"Congratulation {client.Player.Name} paid {cost} ConquerPoints compensation for his crimes!", MsgServer.MsgMessage.MsgColor.white, MsgServer.MsgMessage.ChatMode.TopLeftSystem).GetArray(stream));
                            }
                            client.Teleport(516, 356, 1002);

                        }
                        else
                        {
                            data.AddText("You do not have " + cost.ToString() + " ConquerPoints with you.")
                             .AddOption("I~see", 255).AddAvatar(37).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        client.Teleport(513, 355, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.JailJoin)]
        public static void JailJoin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("What~can~I~do~for~you?")
                            .AddOption("Visit~the~jail.", 1)
                       .AddOption("Just~passing~by.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Give~me~1000~silver,~I~will~teleport~you~there.")
                                 .AddOption("Here~are~1000~silver.", 2)
                            .AddOption("If~so,~I~will~stay~here.", 255).AddAvatar(37).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (client.Player.PKPoints < 30)
                        {
                            if (client.Player.Money > 1000)
                            {
                                client.Player.Money -= 1000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Teleport(29, 72, 6000);

                            }
                            else
                            {
                                data.AddText("You do not have 1000 silvers with you.")
                               .AddOption("I~see", 255).AddAvatar(37).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("I'm sorry you have more Pkpoints")
                             .AddOption("I~see", 255).AddAvatar(37).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        #endregion
        #region Shops
        [NpcAttribute(NpcID.BlackSmith)]
        public static void BlackSmith(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            dwParam3 = client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Pharmacist)]
        public static void Pharmacist(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            dwParam3 = client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TheStorekeeper)]
        public static void TheStorekeeper(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = (uint)Role.Flags.NpcType.DialogAndGui,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            wParam5 = (ushort)client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.Armorer)]
        public static void Armorer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            ObjId = client.Player.UID,
                            dwParam = 32,
                            Type = ActionType.OpenGuiNpc,
                            Timestamp = (int)client.ActiveNpc,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y,
                            wParam5 = (ushort)client.Player.Map
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }

        #endregion
        #region Furnitures
        [NpcAttribute(NpcID.FurnitureStore)]
        public static void FurnitureStore(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome!~This~is~the~Twin~City~Furniture~Store.~Take~a~look~around.~I~have~the~best~furniture~in~Twin~City.")
                        .AddOption("Show~me~your~wares.", 1)
                        .AddOption("Not~my~concern.", 255)
                        .AddAvatar(188).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        client.Teleport(52, 70, 1511);
                        break;
                    }

            }
        }


        public static void Furnitures(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Database.NpcServer.Furniture Furniture;
            if (Database.NpcServer.FurnitureInformations.TryGetValue(id, out Furniture))
            {
                Dialog data = new Dialog(client, stream);
                switch (Option)
                {
                    case 0:
                        {
                            data.AddText("Do you want this " + Furniture.Name + " ? It costs only " + Furniture.MoneyCost + " silvers.")
                                                     .AddOption("Yes.", 1)
                                                       .AddOption("No.", 255)
                                                     .AddAvatar(0).FinalizeDialog();


                            break;
                        }
                    case 1:
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                if (client.Player.Money >= Furniture.MoneyCost)
                                {
                                    client.Player.Money -= (uint)Furniture.MoneyCost;
                                    client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                    client.Inventory.Add(stream, Furniture.ItemID, 1);

                                    Database.ItemType.DBItem item;
                                    if (Database.Server.ItemsBase.TryGetValue(Furniture.ItemID, out item))
                                    {
                                        client.SendSysMesage("You got a " + item.Name + "!", MsgMessage.ChatMode.System);
                                    }
                                }
                                else
                                {

                                    data.AddText("You do not have " + Furniture.MoneyCost + " silvers with you.")
                                     .AddOption("I~see.", 255)
                                   .AddAvatar(0).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("There is not enough room in your inventory.")
                                    .AddOption("Ah~yes.", 255)
                                  .AddAvatar(0).FinalizeDialog();
                            }


                            break;
                        }
                }
            }
        }

        #endregion
        [NpcAttribute(NpcID.Barber)]
        public static void Barber(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You look like you could use a new hairstyle.")
                           .AddOption("New~Dynasty~styles.", 1)
                           .AddOption("New~styles.", 2)
                           .AddOption("Nostalgic~styles.", 3)
                        // .AddOption("(Level~4+)~VIP~Hairstyles.", 6)
                           .AddOption("Just~passing~by.", 255)
                           .AddAvatar(111).FinalizeDialog();
                        break;
                    }
                case 105:
                    {
                        data.AddText("Hm, I guess you will need to store your items in the Warehouse in the future! Pay a visit to the Warehouseman, you may need his help!")
                            .AddOption("Thanks!.", 255)
                            .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 100:
                    {
                        data.AddText("You look like you could use a new hairstyle.")
                            .AddOption("New~Dynasty~styles.", 1)
                            .AddOption("New~styles.", 2)
                            .AddOption("Nostalgic~styles.", 3)
                          //.AddOption("(Level~4+)~VIP~Hairstyles.", 6)
                            .AddOption("Just~passing~by.", 255)
                            .AddAvatar(111).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("Which style would you like to change to?")
                            .AddOption("New~Dynasty~style~01.", 10)
                            .AddOption("New~Dynasty~style~02.", 11)
                            .AddOption("New~Dynasty~style~03.", 12)
                            .AddOption("New~Dynasty~style~04.", 13)
                            .AddOption("New~Dynasty~style~05.", 14)
                            .AddOption("Next~Page.", 4)
                            .AddAvatar(111).FinalizeDialog();



                        break;
                    }
                case 16:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 48);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 15:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 47);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 14:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 46);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 13:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 45);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 12:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 44);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 11:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 43);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 10:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 42);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                default:
                    {
                        if (client.Player.Hair < 300)
                            client.Player.Hair = 300;
                        ushort NewHaire = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + Option);
                        if (client.Player.Money >= 500)
                        {
                            client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                            client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                            client.Player.Money -= 500;
                            client.Player.Hair = NewHaire;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        else
                        {
                            data.AddText("You don't have 500 gold.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(111).FinalizeDialog();
                        }

                        break;
                    }
                case 17:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 49);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 21:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 50);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 22:
                    {
                        if (client.Player.Money < 50000)
                        {
                            data.AddText("You don't have 50,000 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 50000)
                            {
                                client.Player.Money -= 50000;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 51);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are you satisfied with your new hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 1);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 56:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 70);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("What do you think? Do you like it?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 57:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 71);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("What do you think? Do you like it?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 70:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 72);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("What do you think? Do you like it?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 71:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 73);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("What do you think? Do you like it?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 72:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 74);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("What do you think? Do you like it?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 6);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.VipLevel < 4)
                        {
                            data.AddText("Sorry, your VIP Level has to be at least Level 4 to purchase this hairstyle.");
                            data.AddOption("Alright.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You can try out the different hairstyles, until you find your favorite!")
                        .AddOption("(Level~4+)~VIP~Hairstyle~1.", 56)
                        .AddOption("(Level~4+)~VIP~Hairstyle~2.", 57)
                        .AddOption("(Level~4+)~VIP~Hairstyle~3.", 70)
                        .AddOption("(Level~4+)~VIP~Hairstyle~4.", 71)
                        .AddOption("(Level~4+)~VIP~Hairstyle~5.", 72)
                      //.AddOption("Special~HairStyle06", 73)
                     // .AddOption("Special~HairStyle07", 74)
                        .AddOption("I~won`t~change~my~hairstyle.")
                        .AddAvatar(111).FinalizeDialog();

                        }
                        break;
                    }
                case 4:
                    {
                        data.AddText("Which style would you like to change to?")
                      .AddOption("New~Dynasty~style~06.", 15)
                      .AddOption("New~Dynasty~style~07.", 16)
                      .AddOption("New~Dynasty~style~08.", 17)
                      .AddOption("New~Dynasty~style~09.", 21)
                      .AddOption("New~Dynasty~style~10.", 22)
                      .AddOption("Previous.", 1)
                      .AddAvatar(111).FinalizeDialog();


                        break;
                    }
                case 30:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 30);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("It`s~completed.~Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Cool!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 31:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You~have~not~enough~money.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 33);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 32:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 34);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 33:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 35);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 34:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 36);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 35:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 37);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 36:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 38);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 37:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 39);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 38:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 40);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 2);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 2:
                    {
                        data.AddText("Which~style~would~you~like~to~select~from?")
                                                .AddOption("New~style~01.", 30)
                                                .AddOption("New~style~02.", 31)
                                                .AddOption("New~style~03.", 32)
                                                .AddOption("New~style~04.", 33)
                                                .AddOption("New~style~05.", 34)
                                                .AddOption("New~style~06.", 35)
                                                .AddOption("New~style~07.", 36)
                                                .AddOption("Next~Page.", 5)
                                                .AddAvatar(111).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("Which~style~would~you~like~to~select~from?")
                            .AddOption("New~style~08.", 37)
                            .AddOption("New~style~09.", 38)
                          //.AddOption("New~style~10.", 39)
                            .AddOption("New~style~11.", 40)
                            .AddOption("New~style~12.", 41)
                            .AddOption("New~style~13.", 42)
                            .AddOption("New~style~14.", 43)
                            .AddOption("Previous.", 2)
                            .AddAvatar(111).FinalizeDialog();

                        break;
                    }
                case 44:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 10);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 45:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 11);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 46:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 12);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 47:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 13);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 48:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 14);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;

                    }
                case 49:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 15);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 50:
                    {
                        if (client.Player.Money < 500)
                        {
                            data.AddText("You don't have 500 gold.");
                            data.AddOption("I`m~sorry.");
                            data.AddAvatar(111);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            if (client.Player.Money >= 500)
                            {
                                client.Player.Money -= 500;

                                client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 0);
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Effect, true, "Health");
                                client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Sound, 0, false, "sound/gethp.wav", "1");
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                data.AddText("Are~you~satisfied~with~your~new~hairstyle?");
                                data.AddOption("Yes!");
                                data.AddOption("I~want~to~change~it.", 3);
                                data.AddAvatar(111);
                                data.FinalizeDialog();
                            }
                        }
                        break;
                    }
                case 3:
                    {
                        data.AddText("Which style would you like to change to?")
                            .AddOption("Nostalgic~01.", 44)
                            .AddOption("Nostalgic~02.", 45)
                            .AddOption("Nostalgic~03.", 46)
                            .AddOption("Nostalgic~04.", 47)
                            .AddOption("Nostalgic~05.", 48)
                            .AddOption("Nostalgic~06.", 49)
                            .AddOption("Bald~head.", 50)
                          //.AddOption("Nostalgic08", 51)
                            .AddOption("Never~mind.")
                            .AddAvatar(111).FinalizeDialog();


                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.Tinter)]
        public static void Tinter(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome!~Please~wear~the~armors~first.~What~armors~do~you~want~me~to~dye?")
                        .AddOption("Cap", 1)
                        .AddOption("Coat", 2)
                        .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("There~are~seven~colors~for~you~to~choose.~You~can~try~all~the~colors~for~no~more~charges.~What~color~do~you~like~best?")
                       .AddOption("Color~1", 13)
                       .AddOption("Color~2", 14)
                       .AddOption("Color~3", 15)
                       .AddOption("Color~4", 16)
                       .AddOption("Color~5", 17)
                       .AddOption("Color~6", 18)
                       .AddOption("Color~7", 19)
                       .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                    {
                        MsgServer.MsgGameItem Coat;
                        if (client.Equipment.TryGetEquip(Role.Flags.ConquerItem.Armor, out Coat))
                        {
                            Coat.Color = (Role.Flags.Color)(Option - 10);
                            Coat.Mode = Role.Flags.ItemMode.Update;
                            Coat.Send(client, stream);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("There~are~seven~colors~for~you~to~choose.~You~can~try~all~the~colors~for~no~more~charges.~What~color~do~you~like~best?")
                        .AddOption("Color~1", 3)
                        .AddOption("Color~2", 4)
                        .AddOption("Color~3", 5)
                        .AddOption("Color~4", 6)
                        .AddOption("Color~5", 7)
                        .AddOption("Color~6", 8)
                        .AddOption("Color~7", 9)
                        .AddAvatar(7).FinalizeDialog();
                        break;
                    }
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                    {
                        MsgServer.MsgGameItem Cap;
                        if (client.Equipment.TryGetEquip(Role.Flags.ConquerItem.Head, out Cap))
                        {
                            Cap.Color = (Role.Flags.Color)Option;
                            Cap.Mode = Role.Flags.ItemMode.Update;
                            Cap.Send(client, stream);
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Shopboy)]
        public static void Shopboy(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Our~shop~is~famous~for~dyeing.~If~you~want~to~have~your~equipment~dyed,~please~wear~them~before~you~enter.~You")
                            .AddText("have~a~wide~choice~of~colors.~One~meteor~will~be~charged~before~you~try~the~colors.~Do~you~want~a~try?")
                        .AddOption("Yes,~here~is~a~meteor.", 1)
                        .AddOption("Can~you~dye~my~armor~black?", 2)
                        .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 1, stream);
                            client.Teleport(22, 26, 1008);
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~a~meteor.")
                      .AddOption("Oh.~I~am~sorry.", 255)
                      .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure.~Once~your~armor~is~dyed~black,~it~will~never~fade~no~matter~how~it~is~updated,~unless~I~dye~it~to~other")
                         .AddText("colors.~I~will~charge~1~dragonball~to~do~it.~")
                     .AddOption("Yes.~Here`s~a~Dragonball.", 3)
                     .AddOption("Let~me~think~it~over.", 255)
                     .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            MsgServer.MsgGameItem Armor;
                            if (client.Equipment.TryGetEquip(Role.Flags.ConquerItem.Armor, out Armor))
                            {
                                Armor.Color = Role.Flags.Color.Black;
                                Armor.Mode = Role.Flags.ItemMode.Update;
                                Armor.Send(client, stream);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~a~DragonBall.")
                      .AddOption("Oh.~I~am~sorry.", 255)
                      .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
            }
        }


        #endregion
        #region Boxer
        [NpcAttribute(NpcID.TcBoxer)]
        public static void TcBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may enter the training grounds.\n")
                            .AddText("Do you want me to teleport you there for 1,000 gold?")
                            .AddOption("Please teleport me there.", 1)
                            .AddOption("Just passing by.", 255)
                            .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("You can only attack the Scarecrows or Stakes which level is lower than or equal to yours.")
                                .AddOption("I see.", 255)
                                .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have 1,000 gold with you.")
                                           .AddOption("Oh, sorry.", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.BirdBoxer)]
        public static void BirdBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may enter the training grounds.\n")
                            .AddText("Do you want me to teleport you there for 1,000 gold?")
                            .AddOption("Please teleport me there.", 1)
                            .AddOption("Just passing by.", 255)
                            .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("You can only attack the Scarecrows or Stakes which level is lower than or equal to yours.")
                                .AddOption("I see.", 255)
                                .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have 1,000 gold with you.")
                                           .AddOption("Oh, sorry.", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.PheonixBoxer)]
        public static void PheonixBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may enter the training grounds.\n")
                            .AddText("Do you want me to teleport you there for 1,000 gold?")
                            .AddOption("Please teleport me there.", 1)
                            .AddOption("Just passing by.", 255)
                            .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("You can only attack the Scarecrows or Stakes which level is lower than or equal to yours.")
                                .AddOption("I see.", 255)
                                .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have 1,000 gold with you.")
                                           .AddOption("Oh, sorry.", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.ApeBoxer)]
        public static void ApeBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may enter the training grounds.\n")
                            .AddText("Do you want me to teleport you there for 1,000 gold?")
                            .AddOption("Please teleport me there.", 1)
                            .AddOption("Just passing by.", 255)
                            .AddAvatar(8).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("You can only attack the Scarecrows or Stakes which level is lower than or equal to yours.")
                                .AddOption("I see.", 255)
                                .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have 1,000 gold with you.")
                                           .AddOption("Oh, sorry.", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }



                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.DesertBoxer)]
        public static void DesertBoxer(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you are level 20 or above, you may enter the training grounds.\n")
                            .AddText("Do you want me to teleport you there for 1,000 gold?")
                            .AddOption("Please teleport me there.", 1)
                            .AddOption("Just passing by.", 255)
                            .AddAvatar(8).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.Money > 1000)
                        {
                            client.Player.Money -= 1000;
                            client.Teleport(226, 218, 1039);
                            client.Player.SendUpdate(stream, client.Player.Money, MsgUpdate.DataType.Money);
                            data.AddText("You can only attack the Scarecrows or Stakes which level is lower than or equal to yours.")
                                .AddOption("I see.", 255)
                                .AddAvatar(8).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You don't have 1,000 gold with you.")
                                           .AddOption("Oh, sorry.", 255)
                                           .AddAvatar(8).FinalizeDialog();
                        }


                        break;
                    }

            }
        }

        #endregion
        #region Market
        [NpcAttribute(NpcID.NameRegister)]
        public static void NameChange(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you want to turn a new page in your life, you can pay me 5,000 CPs to get a new name. Your new name will be registered, immediately.")
                   .AddInput("Okay,~here`s~my~new~name:", 1)
                   .AddOption("Reset edit times.", 10)
                   .AddAvatar(31).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Do you want to reset your name for 5,000 CPs?")
                        .AddOption("Yes!", 11)
                        .AddOption("No!", 255)
                        .AddAvatar(31).FinalizeDialog();
                        break;
                    }
                case 11:
                    {
                        if (client.Player.ConquerPoints >= 5000)
                        {
                            client.Player.ConquerPoints -= 5000;
                            client.Player.NameEditCount = 0;
                            data.AddText("Your name has been changed successfully!")
                       .AddOption("Thank you!", 255)
                      .AddAvatar(31).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough CPs.")
                       .AddOption("Okay.", 255)
                      .AddAvatar(31).FinalizeDialog();
                        }
                        break;
                    }

                case 1:
                    {
                        if (client.Player.ConquerPoints >= 5000)
                        {
                            string Username = Input;
                            if (Username != string.Empty && Username.Length != 0 && Username != client.Player.Name && Program.NameStrCheck(Username))
                            {
                                Game.MsgServer.MsgNameChange.ChangeName(client, Username, false);
                            }
                            else
                            {

                                data.AddText("That name isn't available, please choose another.")
                                .AddOption("Oh!", 255)
                                .AddAvatar(31).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("At your service! Oh, no... I`m sorry. You`d better check your bag, again. You don`t have enough CPs to rename yourself. It takes 5,000 CPs, and I`m not allowed to offer any discounts.")
                      .AddOption("Rules~are~rules.~I`ll~wait.", 255)
                      .AddAvatar(31).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        #region LadyLuck
        [NpcAttribute(NpcID.LotteryCollectorWong)]
        public static void LotteryCollectorWong(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I~am~fond~of~collecting~all~kinds~of~treasure.~If~you~happen~to~have~any~Disguise Amulets,~Life Fruit Basket,~or")
                            .AddText("~PenitenceAmulets,~you~may~sell~them~to~me.~I~will~pay~you~ten~CPs~for~each~one.")
                    .AddOption("Here~are~my~Disguise~Amulets.", 1)
                    .AddOption("Here~are~my~Life~Fruit~Baskets.", 2)
                    .AddOption("Here~are~my~Penitence~Amulets.", 3)
                    .AddOption("Really?~I~don`t~believe~it.", 255)
                    .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(723724, 1))
                        {
                            client.Inventory.Remove(723724, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You've received 15 CPs for your item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(723725, 1))
                        {
                            client.Inventory.Remove(723725, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You've received 15 CPs for your item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(723727, 1))
                        {
                            client.Inventory.Remove(723727, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You've received 15 CPs for your item.")
                   .AddOption("Ok~thank~you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You~do~not~have~what~I~want.~Whenever~you~have~one~of~DisguiseAmulets,~LifeFruitBaskets~or~PenitenceAmulets,~just~come~here.")
                   .AddOption("See~you~again.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.LotteryLadyLuck)]
        public static void LotteryLadyLuck(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Many precious prizes are available to be won in the Lottery Center.\n")
                            .AddText("Once fortune falls in your lap, you're going to want to thank your lucky stars!")
                            .AddOption("I'd like to leave.", 1)
                            .AddOption("Tell me more.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(159).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        client.Teleport(217, 193, 1036);
                        break;
                    }
                case 2:
                    {
                        data.AddText("Try your lucky by opening a LuckyBox.\n")
                            .AddText("Many precious items are available, it all depends on your luck!")
                            .AddOption("Thank you.", 255)
                            .AddAvatar(159).FinalizeDialog();

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MarketLadyLuck)]
        public static void MarketLadyLuck(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Welcome to the Lottery Center!\n")
                            .AddText("There are many Lucky Boxes here, each containing incredible treasures!")
                            .AddOption("Try my luck.", 1)
                          //.AddOption("Buy~3~Lottery~Tickets.", 2)
                            .AddOption("What are the rules?", 3)
                          //.AddOption("How~about~the~VIP~privilege?", 4)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(123).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 70)
                        {
                            client.Teleport(45, 50, 700);
                        }
                        else
                        {
                            data.AddText("Sorry, you need to be at least level 70.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
                //case 2:
                //    {
                //        if (client.Inventory.HaveSpace(3) && client.Player.ConquerPoints >= 27)
                //        {
                //            client.Player.ConquerPoints -= 27;
                //            client.Inventory.Add(stream, 710212, 3);
                //        }
                //        else
                //        {
                //            data.AddText("You don`t have enough conquer points or enough space in your inventory.")
                //   .AddOption("Oops.", 255)
                //   .AddAvatar(123).FinalizeDialog();
                //        }


                //        break;
                //    }
                case 3:
                    {
                        data.AddText("There are many Lucky Boxes in the Lottery Center. Pay 1 lotto ticket, and you can draw from the Lucky Box!\n")
                            .AddText("Each player is allowed to draw from the Lottery up to 10 times, each day.")
                            .AddOption("Alright.", 255)
                            .AddAvatar(123).FinalizeDialog();

                        break;
                    }
            }
        }
        public static void LotteryBoxes(Client.GameClient user, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(user, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Are you sure you want to open this LotteryBox?")
                            .AddOption("Pay 150 CPS.", 2)
                            .AddOption("Use LotteryTicket.", 1)
                            .AddOption("No thanks.", 255)
                            .AddAvatar(123)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                    {

                        if (user.Player.LotteryEntries < Role.Player.LotteryEntry(user.Player.VipLevel))
                        {
                            if (user.Inventory.Contain(710212, 1))
                            {
                                if (user.Inventory.HaveSpace(1))
                                {
                                    user.Inventory.Remove(710212, 1, stream);
                                    user.Player.LotteryEntries++;
                                    //reset lottery jade 
                                    Database.Lottery.GetRandomPrize(user, stream);
                                    Game.MsgServer.MsgStringPacket packet = new Game.MsgServer.MsgStringPacket();
                                    packet.ID = MsgStringPacket.StringID.Effect;
                                    packet.UID = id;
                                    packet.Strings = new string[1] { "lottery" };
                                    user.Player.View.SendView(stream.StringPacketCreate(packet), true);
                                    data.AddText("You got an item from the lottery. Check your inventory.")
                                        .AddOption("Thank you!", 255)
                                        .AddAvatar(123).FinalizeDialog();
                                }
                                else
                                    user.SendSysMesage("Please make 1 more space in your inventory.");

                            }
                            else
                            {
                                data.AddText("You need to have a LotteryTicket to draw from the lottery in the Lottery Center.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(123).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you've already used " + user.Player.LotteryEntries + " entries today.\n")
                                .AddText("You may enter again tomorrow.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {

                        if (user.Player.LotteryEntries < Role.Player.LotteryEntry(user.Player.VipLevel))
                        {
                            if (user.Player.ConquerPoints >= 150)
                            {
                                if (user.Inventory.HaveSpace(1))
                                {
                                    user.Player.ConquerPoints -= 150;
                                    user.Player.LotteryEntries++;
                                    //reset lottery jade 
                                    Database.Lottery.GetRandomPrize(user, stream);
                                    Game.MsgServer.MsgStringPacket packet = new Game.MsgServer.MsgStringPacket();
                                    packet.ID = MsgStringPacket.StringID.Effect;
                                    packet.UID = id;
                                    packet.Strings = new string[1] { "lottery" };
                                    user.Player.View.SendView(stream.StringPacketCreate(packet), true);
                                    data.AddText("You got an item from the lottery. Check your inventory.")
                                        .AddOption("Thank you!", 255)
                                        .AddAvatar(123).FinalizeDialog();
                                }
                                else
                                    user.SendSysMesage("Please make 1 more space in your inventory.");

                            }
                            else
                            {
                                data.AddText("You need to have a LotteryTicket to draw from the lottery in the Lottery Center.")
                                    .AddOption("Okay.", 255)
                                    .AddAvatar(123).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you've already used " + user.Player.LotteryEntries + " entries today.\n")
                                .AddText("You may enter again tomorrow.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        #endregion
        private static byte baseGemRequest = 0;
        private static uint BASE_GEM_ID = 0, cost = 0;
        [NpcAttribute(NpcID.GemCompose)]
        public static void GemCompose(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Do you need to exchange some gems for ones of higher quality?\n")
                            .AddText("For every 15 gems of Normal or Refined quality, I'll give you one of higher quality.")
                            .AddOption("Compose gems.", 2)
                            .AddOption("I see.", 255)
                            .AddAvatar(45).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("What kind of gems do you wish to compose?\n")
                            .AddText("The fee for composing is 100,000 gold for Normal into Refined and 1,000,000 gold for Refined into Super.")
                            .AddOption("Compose Normal to Refined Gems.", 3)
                            .AddOption("Compose Refined to Super Gems.", 4)
                            .AddOption("I'll be back later.", 255)
                            .AddAvatar(45).FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        BASE_GEM_ID = 700001;
                        cost = 100000;
                        data.FinalizeDialog();
                        goto case 5;
                    }
                case 4:
                    {
                        BASE_GEM_ID = 700002;
                        cost = 1000000;
                        data.FinalizeDialog();
                        goto case 5;
                    }
                case 5:
                    {
                        data.AddText("What type of gem would you like?")
                        .AddOption("Phoenix Gem.", 20)
                        .AddOption("Dragon Gem.", 21)
                        .AddOption("Fury Gem.", 22)
                        .AddOption("Rainbow Gem.", 23)
                        .AddOption("More Options.", 6)
                        .AddOption("Never mind.", 255)
                        .AddAvatar(45).FinalizeDialog();

                        break;
                    }

                case 6:
                    {
                        data.AddText("What type of gem would you like?")
                        .AddOption("Kylin Gem.", 24)
                        .AddOption("Violet Gem.", 25)
                        .AddOption("Moon Gem.", 26)
                        .AddOption("Tortoise Gem.", 27)
                        .AddOption("Previous Options.", 4)
                        .AddOption("Never mind.", 255)
                        .AddAvatar(45).FinalizeDialog();

                        break;
                    }
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                    {
                        baseGemRequest = (byte)(Option % 10);
                        Option = 7;
                        data.FinalizeDialog();
                        goto case 7;
                    }
                case 7:
                    {
                        if (client.Player.Money < cost)
                        {
                            data.AddText("You don't have the required amount of gold!")
                                .AddOption("Okay.", 255)
                                .AddAvatar(45).FinalizeDialog();
                            break;
                        }
                        else if (client.Inventory.Contain((uint)(BASE_GEM_ID + baseGemRequest * 10), 15))
                        {
                            client.Inventory.Remove((uint)(BASE_GEM_ID + baseGemRequest * 10), 15, stream);
                            client.Player.Money -= cost;
                            client.Inventory.Add(stream, (uint)(BASE_GEM_ID + baseGemRequest * 10 + 1));
                            data.AddText("There you go. Check it out in your inventory!")
                                .AddOption("Thanks!", 255)
                                .AddAvatar(45).FinalizeDialog();
                            break;
                        }
                        else
                        {
                            data.AddText("You don't have the required amount of gems or not enough gold!")
                                .AddOption("I see.", 255)
                                .AddAvatar(45).FinalizeDialog();
                        }
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Ethereal)]
        public static void Ethereal(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("A good set of equipment can help you a lot in future battles. I can help you by upgrading the blessed attribute.\n")
                            .AddText("Keep in mind that each upgrade costs Tortoise Gems which are rare and expensive.")
                            .AddOption("Upgrade blessed attribute.", 10)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 10:
                    {
                        data.AddText("Upgrading an items blessed attribute will help you receive less damage.\n")
                            .AddText("Which item would you like to upgrade?")
                            .AddOption("Helmet/Earrings/TaoCap.", 1)
                            .AddOption("Necklace/Bag.", 2)
                            .AddOption("Armor.", 3)
                            .AddOption("Right Weapon.", 4)
                            .AddOption("Shield/Left Weapon.", 8)
                            .AddOption("Ring/Bracelet.", 6)
                            .AddOption("Boots.", 8)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(63)
                            .FinalizeDialog();
                        break;
                    }
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option, out item))
                        {
                            if (item != null)
                            {
                                if (item.Bless != 7)
                                {
                                    uint cost = 0;

                                    if (item.Bless == 0)
                                        cost = 1;
                                    else if (item.Bless == 1)
                                        cost = 1;
                                    else if (item.Bless == 3)
                                        cost = 3;
                                    else if (item.Bless == 5)
                                        cost = 5;

                                    if (client.Inventory.Contain(700073, cost))
                                    {
                                        client.Inventory.Remove(700073, cost, stream);

                                        if (item.Bless == 0)
                                            item.Bless += 1;
                                        else
                                            item.Bless += 2;
                                        item.Mode = Role.Flags.ItemMode.Update;
                                        item.Send(client, stream);
                                        if (item.Position != 0)
                                            client.Equipment.QueryEquipment();

                                        data.AddText($"Congratulations! You've upgraded your {Database.Server.ItemsBase.GetItemName(item.ITEM_ID)} blessed attribute!")
                                            .AddOption("Thanks.", 255)
                                            .AddAvatar(63).FinalizeDialog();
                                    }
                                    else
                                    {
                                        data.AddText($"To upgrade this {Database.Server.ItemsBase.GetItemName(item.ITEM_ID)} you need to pay " + cost + " Super Tortoise Gems!")
                                            .AddOption("I~see.", 255)
                                            .AddAvatar(63).FinalizeDialog();
                                    }
                                }
                                else
                                {
                                    data.AddText($"Your {Database.Server.ItemsBase.GetItemName(item.ITEM_ID)} has the max blessed attribute!")
                                        .AddOption("Never mind.", 255)
                                        .AddAvatar(63).FinalizeDialog();

                                }
                            }
                            else
                            {
                                data.AddText("There must be some mistake. You must be wearing an item before you may upgrade it!")
                                    .AddOption("Never mind.", 255)
                                    .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.MerchantClerk)]
        public static void Merchant(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.Merchant == 255)
                        {
                            data.AddText("You have been a merchant now. All of your equipment and items are not protected by the Forbidden Sale system")
                                .AddText("~in the game, and TQ Digital is not responsible for any loss related.")
                                .AddText("Click the Cancel button to reset your merchant account to be normal. A normal account will be protected by all the")
                                .AddText("~trading protection measures in case of equipment loss resulted from accounts being hacked.")
                                .AddOption("I~want~to~cancel~my~merchant~account.", 3)
                                .AddOption("Let~me~think~it~over.", 255)
                                .AddAvatar(94).FinalizeDialog();
                            //client.SendSysMesage("You have canceled merchant account.");
                        }
                        else if (client.Player.Merchant == 1)
                        {
                            data.AddText("Your merchant application is being processed. Please wait for 5 days. All of your equipment and items")
                                .AddText("~are not protected by the Forbidden Sale system in the game, and TQ Digital is not responsible for any loss related.")
                                .AddText("Click the Cancel button to reset your merchant account to be normal. A normal account will be protected by all the")
                                .AddText("~trading protection measures in case of equipment loss resulted from accounts being hacked.")
                                .AddOption("Cancel~my~application,~please.", 2)
                                .AddOption("Let~me~think~it~over.", 255)
                                .AddAvatar(94).FinalizeDialog();
                            //client.SendSysMesage("You have canceled the application.");
                        }
                        else
                        {
                            data.AddText("A merchant account is for any who frequently engages in commercial activities. A merchant account is not protected")
                                .AddText("~by the virtual property protection measures. So TQ Digital will be not responsible for any loss related.")
                                .AddText("After you apply to be a merchant account, tt will take you 5 days to censor your application. You can reset it to be a normal account at any time.")
                                .AddText("Are you ready to be a merchant?")
                                .AddOption("I~want~to~be~a~merchant.", 1)
                                .AddOption("Let~me~think~it~over.", 255)
                                .AddAvatar(94).FinalizeDialog();
                            // client.SendSysMesage("You have applied for a merchant.");
                        }
                        break;
                    }
                case 3:
                    {
                        client.Player.Merchant = 0;
                        client.SendSysMesage("You have canceled merchant account.");
                        break;
                    }
                case 2:
                    {
                        client.Player.Merchant = 0;
                        client.SendSysMesage("You have canceled the application.");
                        break;
                    }
                case 1:
                    {
                        client.Player.Merchant = 1;
                        client.Player.MerchantApplicationEnd = DateTime.Now.AddDays(5);
                        client.SendSysMesage("You have applied for a merchant.");
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.Shelby)]
        public static void Shelby(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {

                        data.AddText("By power leveling new players you'll receive Virtue Points, which can be traded here rewards!")
                            .AddOption("Tell~me~more~details.", 1)
                            .AddOption("Check~my~Virtue~Points.", 5)
                            .AddOption("Claim~prize.", 6)
                            .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("If you're above level 70 you can power level new players at least 20 levels under you to gain Virtue Points as they level.")
                            .AddOption("What are Virtue Points?", 2)
                            .AddAvatar(7).FinalizeDialog();



                        break;
                    }
                case 2:
                    {
                        data.AddText("The more new players you power level, the more Virtue Points you'll receive.")
                           .AddOption("How~can~I~gain~Virtue~Points?", 3)
                           .AddOption("What~prize~can~I~expect?", 4)
                           .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 3:
                    {
                        data.AddText("As the new player gains levels, you'll receive Virtue Points.")
                             .AddOption("I~see.", 255)
                             .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        data.AddText("You can receive either 1 Meteor for 1,000 Virtue Points, Experience worth a ExpBall for 5,000 Virtue Points, or a DragonBall for 10,000 Virtue Points.")
                         .AddOption("I~see.", 255)
                         .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 5:
                    {
                        data.AddText("Your~current~Virtue~Points~are~" + client.Player.VirtutePoints + ",~please~try~to~gain~more.")
                           .AddOption("Thanks.", 255)
                           .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        data.AddText("Please pick a reward.")
                            .AddOption("Meteor - (1K VP).", 10)
                            .AddOption("ExpBall - (5K VP).", 11)
                            .AddOption("DragonBall - (10K VP).", 12)
                            .AddOption("Let~me~think~it~over.", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        if (client.Player.VirtutePoints >= 1000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VirtutePoints -= 1000;
                                client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                                client.Inventory.Add(stream, Database.ItemType.Meteor);
                            }
                            else
                            {
                                data.AddText("Please make 1 more space in your inventory")
                                    .AddOption("Let me check.", 255)
                                    .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~the~required~Virtue~Points.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 11:
                    {
                        if (client.Player.Level >= 130)
                        {
                            data.AddText("Only the characters below level 130 can exchange the Virtue Points for experience. You may find Simon")
                                .AddText(" (Twin City 393,235) and spend 2,000 Virtue Points to hunt the treasure in the Labyrinth.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(7).FinalizeDialog();
                            break;
                        }
                        if (client.Player.VirtutePoints >= 5000)
                        {
                            client.Player.VirtutePoints -= 5000;
                            client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                            client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);

                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~the~required~Virtue~Points.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 12:
                    {
                        if (client.Player.VirtutePoints >= 10000)
                        {
                            if (client.Inventory.HaveSpace(1))
                            {
                                client.Player.VirtutePoints -= 10000;
                                client.Player.SendUpdate(stream, client.Player.VirtutePoints, MsgUpdate.DataType.VirtutePoints);
                                client.Inventory.Add(stream, Database.ItemType.DragonBall);
                            }
                            else
                            {
                                data.AddText("Please make 1 more space in your inventory.")
                                                         .AddOption("Let me check.", 255).AddAvatar(7)
                                                        .FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~do~not~have~the~required~Virtue~Points.")
                            .AddOption("I~see.", 255)
                            .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.Downgrade)]
        public static void DowngradeItems(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I can downgrade the level of your item for 1 DragonBall.")
                            .AddOption("Select item.", 100)
                       .AddOption("Never~mind.", 255).AddAvatar(3).FinalizeDialog();

                        break;
                    }
                case 100:
                    {
                        data.AddText("Which item would you like to downgrade?")
                            .AddOption("Headgear.", 1)
                            .AddOption("Necklace/Bag.", 2)
                            .AddOption("Armor.", 3)
                            .AddOption("Right Weapon.", 4)
                            .AddOption("Left Weapon.", 5)
                            .AddOption("Ring/Bracelet.", 6)
                            .AddOption("Boots.", 8)
                          //.AddOption("Riding Crop", 18)
                            .AddOption("Never~mind. ", 255).FinalizeDialog();
                        break;
                    }
                default:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            MsgServer.MsgGameItem GameItem;
                            if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option, out GameItem))
                            {
                                if (Database.ItemType.IsArrow(GameItem.ITEM_ID))
                                    return;
                                if (GameItem.Durability < GameItem.MaximDurability)
                                {
                                    data.AddText("Sorry, please repair this item first. I only repair the max durability.")
                                        .AddOption("I see. ", 255)
                                        .AddAvatar(3).FinalizeDialog();
                                    break;
                                }
                                client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                                GameItem.ITEM_ID = Database.Server.ItemsBase.DowngradeItem(GameItem.ITEM_ID);
                                Database.ItemType.DBItem DBItem;
                                if (Database.Server.ItemsBase.TryGetValue(GameItem.ITEM_ID, out DBItem))
                                {
                                    GameItem.Durability = GameItem.MaximDurability = DBItem.Durability;
                                    GameItem.Mode = Role.Flags.ItemMode.Update;
                                    GameItem.Send(client, stream);
                                    data.AddText($"Your {Database.Server.ItemsBase.GetItemName(GameItem.ITEM_ID)} was downgraded successfully.")
                                        .AddOption("Thank you.", 255)
                                        .AddAvatar(3).FinalizeDialog();
                                }

                            }
                            else
                            {
                                data.AddText("Sorry, you're not wearing this item. Please equip it first.")
                                    .AddOption("I see. ", 255)
                                    .AddAvatar(3).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("It looks like you don't have a DragonBall in your inventory!")
                                .AddOption("Oh!", 255)
                                .AddAvatar(3).FinalizeDialog();
                        }
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.GodlyArtisan)]
        public static void GodlyArtisan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hey, I`m proficient in repairing the max durability. What item do you want me to repair?")
                   // .AddOption("Repair the Talisman", 20)
                   .AddOption("Headgear.", 1)
                   .AddOption("Necklace/Bag.", 2)
                   .AddOption("Armor.", 3)
                   .AddOption("Weapon.", 4)
                   .AddOption("Ring/Bracelet.", 6)
                   .AddOption("Boots.", 8)
                   //.AddOption("Riding Crop", 18)
                   .AddOption("Never~mind. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 20:
                    {
                        data.AddText("What Talisman do you want me to repair?")
                  .AddOption("Attack Talisman.", 11)
                  .AddOption("Defense Talisman.", 12)
                  .AddOption("I will come later. ", 255)
                  .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        MsgServer.MsgGameItem GameItem;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option, out GameItem))
                        {
                            if (GameItem.Durability < GameItem.MaximDurability)
                            {
                                data.AddText("Sorry, please repair this item first. I only repair the max durability.")
         .AddOption("I see. ", 255)
         .AddAvatar(63).FinalizeDialog();
                                break;
                            }

                            Database.ItemType.DBItem DBItem;
                            if (Database.Server.ItemsBase.TryGetValue(GameItem.ITEM_ID, out DBItem))
                            {
                                if (GameItem.MaximDurability == DBItem.Durability)
                                {
                                    data.AddText("The max durability of this item is in good condition.")
           .AddOption("I see. ", 255)
           .AddAvatar(63).FinalizeDialog();
                                    break;
                                }

                                GameItem.Durability = GameItem.MaximDurability = DBItem.Durability;
                                GameItem.Mode = Role.Flags.ItemMode.Update;
                                GameItem.Send(client, stream);

                                data.AddText("Your durability was repaired successfully.")
       .AddOption("Thank you.", 255)
       .AddAvatar(63).FinalizeDialog();
                            }

                        }
                        else
                        {
                            data.AddText("Sorry, you're not wearing this item. Please equip it first.")
            .AddOption("I see. ", 255)
            .AddAvatar(63).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.EquipmentBlacksmith)]
        private static void EquipmentBlacksmith(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.AddText("I always succeed in upgrading the item quality and level as I`ve penetrated the mystery of their powers.\n")
                              .AddText("What can I do for you?")
                              .AddOption("Upgrade~Quality.", 1)
                              .AddOption("Upgrade~Item~Level.", 30)
                            //.AddOption("Lower Equipment Level.", 3)
                              .AddOption("Just passing by.")
                              .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 30:
                    {
                        dialog.AddText("I see. Upgrading an item`s level makes it more powerful, but also harder to use, increasing the item level prerequisite.")
                        .AddOption("Headgear.", 31)
                        .AddOption("Necklace/Bag.", 32)
                        .AddOption("Armor.", 33)
                        .AddOption("Right Weapon.", 34)
                        .AddOption("Left Weapon.", 35)
                        .AddOption("Ring/Bracelet.", 36)
                        .AddOption("Boots.", 38)
                        .AddOption("Shield.", 35)
                        //.AddOption("Goodbye.")
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 38:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 30, out item))
                        {
                            if (item.Durability < item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            var lvl = Database.Server.ItemsBase[item.ITEM_ID].Level;
                            if (lvl < 110)
                            {
                                var cost = Database.ItemType.GetUpEpLevelInfo(item.ITEM_ID);
                                //var cost = lvl / 5;
                                //cost += (byte)((item.ITEM_ID % 10) / 3);
                                //cost += (byte)(lvl / 10);
                                //if (cost > 40)
                                //    cost = 40;
                                dialog.AddText("You have to give me " + cost + " meteors to upgrade this item's level.")
                           .AddOption("Sure.", (byte)(Option + 10))
                           .AddOption("Never~mind.")
                           .AddAvatar(63).FinalizeDialog();
                            }
                            else
                            {
                                var cost = 1;
                                dialog.AddText("You have to give me " + cost + " DragonBall to upgrade this item's level.")
                           .AddOption("Sure.", (byte)(Option + 10))
                           .AddOption("Never~mind.")
                           .AddAvatar(63).FinalizeDialog();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 48:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 40, out item))
                        {
                            if (item.Durability < item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            var lvl = Database.Server.ItemsBase[item.ITEM_ID].Level;
                            if (lvl < 110)
                            {
                                var cost = Database.ItemType.GetUpEpLevelInfo(item.ITEM_ID);
                                //var cost = lvl / 5;
                                //cost += (byte)((item.ITEM_ID % 10) / 3);
                                //cost += (byte)(lvl / 10);
                                if (!client.Inventory.CheckMeteors((byte)cost, false, stream))
                                {
                                    dialog.AddText("You do not have the required " + cost + " Meteors to upgrade this item's level!")
                                    .AddOption("Sorry.", 255)
                                    .AddAvatar(63).FinalizeDialog();
                                    break;
                                }
                                Database.ItemType.DBItem DBItem;
                                if (Database.Server.ItemsBase.TryGetValue(item.ITEM_ID, out DBItem))
                                {
                                    bool succesed = false;

                                    uint nextItemId = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);

                                    Database.ItemType.DBItem dBItem;
                                    if (Database.Server.ItemsBase.TryGetValue(nextItemId, out dBItem))
                                    {
                                        if (dBItem.Level > client.Player.Level)
                                        {

                                            dialog.AddText("You can`t upgrade this item, please get level " + dBItem.Level + " first.")
                                       .AddOption("Oh,~I~see.")
                                       .AddAvatar(63).FinalizeDialog();
                                            break;
                                        }
                                    }

                                    if ((/*DBItem.Level >= 70 && */Database.ItemType.Equipable(nextItemId, client, true) == false)
                                        /*&& (Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.RightWeapon
                                        || Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.LeftWeapon)*/)
                                    {
                                        dialog.AddText("You can`t upgrade this item.")
                                      .AddOption("Oh,~I~see.")
                                      .AddAvatar(63).FinalizeDialog();
                                        break;
                                    }
                                    else
                                    {
                                        item.Durability = item.MaximDurability = DBItem.Durability;
                                        item.ITEM_ID = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);
                                        item.Mode = Role.Flags.ItemMode.Update;
                                        item.Send(client, stream);
#if TEST
                                            Console.WriteLine("Update Item " + DBItem.Name + " id = " + Database.ItemType.GetLevel(DataItem.ITEM_ID));
#endif
                                        client.Inventory.CheckMeteors((byte)cost, true, stream);
                                        // client.Inventory.Remove(Database.ItemType.Meteor, (byte)cost, stream);
                                        if (item.Position != 0)
                                            client.Equipment.QueryEquipment();

                                        dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                        .AddOption("Thanks~a~lot!")
                                        .AddAvatar(63).FinalizeDialog();
                                    }
                                }
                            }
                            else
                            {
                                var cost = 1;
                                if (!client.Inventory.Contain(Database.ItemType.DragonBall, (byte)cost))
                                {
                                    dialog.AddText("You do not have the required " + cost + " DragonBall to upgrade this item's level!")
                                    .AddOption("Sorry.", 255)
                                    .AddAvatar(63).FinalizeDialog();
                                    break;
                                }
                                Database.ItemType.DBItem DBItem;
                                if (Database.Server.ItemsBase.TryGetValue(item.ITEM_ID, out DBItem))
                                {
                                    bool succesed = false;

                                    uint nextItemId = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);

                                    Database.ItemType.DBItem dBItem;
                                    if (Database.Server.ItemsBase.TryGetValue(nextItemId, out dBItem))
                                    {
                                        if (dBItem.Level > client.Player.Level)
                                        {

                                            dialog.AddText("You can`t update this item, please get level " + dBItem.Level + " first.")
                                       .AddOption("Oh,~I~see.")
                                       .AddAvatar(63).FinalizeDialog();
                                            break;
                                        }
                                    }

                                    if ((/*DBItem.Level >= 70 && */Database.ItemType.Equipable(nextItemId, client, true) == false) || nextItemId == item.ITEM_ID
                                        /*&& (Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.RightWeapon
                                        || Database.ItemType.ItemPosition(item.ITEM_ID) == (ushort)Role.Flags.ConquerItem.LeftWeapon)*/)
                                    {
                                        dialog.AddText("You can`t upgrade this item.")
                                      .AddOption("Oh,~I~see.")
                                      .AddAvatar(63).FinalizeDialog();
                                        break;
                                    }
                                    else
                                    {
                                        // item.Durability = item.MaximDurability = DBItem.Durability;
                                        item.ITEM_ID = Database.Server.ItemsBase.UpdateItem(item.ITEM_ID, out succesed);
                                        item.Mode = Role.Flags.ItemMode.Update;
                                        item.Send(client, stream);
#if TEST
                                            Console.WriteLine("Update Item " + DBItem.Name + " id = " + Database.ItemType.GetLevel(DataItem.ITEM_ID));
#endif

                                        client.Inventory.Remove(Database.ItemType.DragonBall, (byte)cost, stream);
                                        if (item.Position != 0)
                                            client.Equipment.QueryEquipment();

                                        dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                        .AddOption("Thanks~a~lot!")
                                        .AddAvatar(63).FinalizeDialog();
                                    }
                                }

                            }

                            // client.Equipment.Add(item, stream);
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        dialog.AddText("Which piece of equipment do you want to upgrade the quality of?")
                        .AddOption("Headgear.", 11)
                        .AddOption("Necklace.", 12)
                        .AddOption("Armor.", 13)
                        .AddOption("Right~Weapon.", 14)
                        .AddOption("Left~Weapon.", 15)
                        .AddOption("Ring/Bracelet.", 16)
                        .AddOption("Boots.", 18)
                        .AddOption("Shield.", 15)
                        //.AddOption("Just passing by.")
                        .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 18:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 10, out item))
                        {
                            if (item.ITEM_ID % 10 == 9)
                            {
                                dialog.AddText("Sorry, this item is Super. There is no quality higher than this. It`s perfect!")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            // int cost = 1 + 100 / Database.ItemType.ChanceToUpgradeQuality(item.ITEM_ID);
                            var cost = Database.ItemType.GetUpEpQualityInfo(item.ITEM_ID);
                            dialog.AddText("Please give me " + cost + " Dragon Balls to upgrade this item.")
                            .AddOption("Sure.", (byte)(Option + 10))
                            .AddOption("Never~mind.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 28:
                    {
                        MsgServer.MsgGameItem item;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 20, out item))
                        {
                            if (item.ITEM_ID % 10 == 9)
                            {
                                dialog.AddText("Sorry, this item is Super. There is no quality higher than this. It`s perfect!")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (item.Durability != item.MaximDurability)
                            {
                                dialog.AddText("Sorry, this item has been damaged. Please get it repaired first.")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            // int cost = 1 + 100 / Database.ItemType.ChanceToUpgradeQuality(item.ITEM_ID);
                            //  if (cost > 40)
                            //     break;
                            var cost = Database.ItemType.GetUpEpQualityInfo(item.ITEM_ID);
                            if (!client.Inventory.Contain(Database.ItemType.DragonBall, (byte)cost))
                            {
                                dialog.AddText("You do not have the required " + cost + " DragonBalls to upgrade the quality!")
                                .AddOption("Sorry.", 255)
                                .AddAvatar(63).FinalizeDialog();
                                break;

                            }
                            if (!Database.ItemType.UpQualityDB(item.ITEM_ID, (uint)(cost + 1)))
                            {
                                dialog.AddText("Sorry,~I~cannot~upgrade~this~item.~You~either~don`t~have~the~required~items~or~your~level~isn`t~sufficient.")
                                .AddOption("Oh,~I~see.")
                                .AddAvatar(63).FinalizeDialog();
                                break;
                            }
                            if (client.Inventory.Remove(Database.ItemType.DragonBall, (byte)cost, stream))
                            {
                                if (item.ITEM_ID % 10 < 5)
                                    item.ITEM_ID += 5 - item.ITEM_ID % 10;
                                item.ITEM_ID++;
                                item.Mode = Role.Flags.ItemMode.Update;
                                item.Send(client, stream);
                                client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                                dialog.AddText("Your item has been upgraded. Look and behold my marvelous upgrading skill! Isn`t it amazing?")
                                .AddOption("Thanks~a~lot!")
                                .AddAvatar(63).FinalizeDialog();

                                if (item.Position != 0)
                                    client.Equipment.QueryEquipment();
                            }
                        }
                        else
                        {
                            dialog.AddText("Sorry, please wear the item you want to upgrade first.")
                            .AddOption("Oh,~I~see.")
                            .AddAvatar(63).FinalizeDialog();
                        }
                        break;
                    }
                case 3:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.DegradeEquip,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }



        [NpcAttribute(NpcID.MarketCpAdmin)]
        public static void MarketCpAdmin(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("You can exchange your DragonBalls for CPS with me.\n")
                            .AddText("I'll pay you 215 CPs per DragonBall, and 2150 CPs per DBScroll.")
                            .AddOption("Exchange~a~DBScroll.", 1)
                            .AddOption("Exchange~a~DragonBall.", 2)
                            .AddOption("I~have~nothing.", 255).AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBallScroll, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBallScroll, 1, stream);
                            client.Player.ConquerPoints += 2150;

                            client.CreateBoxDialog("Congratulations! You've received 2150 CPs!");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DBScroll?")
                          .AddOption("I'll be right back.", 255).AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            client.Player.ConquerPoints += 215;

                            client.CreateBoxDialog("Congratulations! You've received 215 CPs!");
                        }
                        else
                        {
                            data.AddText("Where~is~your~DragonBall?")
                          .AddOption("I'll be right back.", 255).AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.WuxingOven)]
        public static void WuxingOven(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);

            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I can improve the enchant of an item and I can also improve the plus of an item. Please let me know how can I help you.")
                   .AddOption("Compose.", 1)
                   .AddOption("Enchant.", 2)
                   .AddOption("I will come later. ", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.Compose,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
                case 2:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenCustom,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.CustomCommands.Enchant,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.ResetPoints)]
        public static void ResetPoints(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Reborned Level 70+ players can redistribute their attribute points at the cost of 1 DragonBall.")
                    .AddOption("Reallot attribute points.", 1).AddOption("Let~me~think~it~over.", 255)
                    .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 70 && client.Player.Reborn > 0)
                        {
                            if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                            {
                                client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);

                                client.Player.Agility = 0;
                                client.Player.Strength = 0;
                                client.Player.Vitality = 1;
                                client.Player.Spirit = 0;

                                client.CreateBoxDialog("You have successfully reloaded your attribute points.");
                                if (client.Player.Reborn == 0)
                                {
                                    client.Player.Atributes = 0;
                                    Database.DataCore.AtributeStatus.ResetStatsNonReborn(client.Player);
                                    if (Database.AtributesStatus.IsWater(client.Player.Class))
                                    {
                                        if (client.Player.Level > 110)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 110) * 3 + client.Player.ExtraAtributes);
                                    }
                                    else
                                    {
                                        if (client.Player.Level > 120)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 120) * 3 + client.Player.ExtraAtributes);
                                    }
                                }
                                else if (client.Player.Reborn == 1)
                                {
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass)
                                        + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                else
                                {
                                    if (client.Player.SecoundeRebornLevel == 0)
                                        client.Player.SecoundeRebornLevel = 130;
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) +
                                        Database.Server.RebornInfo.ExtraAtributePoints(client.Player.SecoundeRebornLevel, client.Player.SecondClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                client.Player.SendUpdate(stream, client.Player.Strength, Game.MsgServer.MsgUpdate.DataType.Strength);
                                client.Player.SendUpdate(stream, client.Player.Agility, Game.MsgServer.MsgUpdate.DataType.Agility);
                                client.Player.SendUpdate(stream, client.Player.Spirit, Game.MsgServer.MsgUpdate.DataType.Spirit);
                                client.Player.SendUpdate(stream, client.Player.Vitality, Game.MsgServer.MsgUpdate.DataType.Vitality);
                                client.Player.SendUpdate(stream, client.Player.Atributes, Game.MsgServer.MsgUpdate.DataType.Atributes);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have 1 DragonBall.")
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You can't reallot your attribute points unless you're reborned and at least Level 70+.")
                  .AddOption("I~see.", 255)
                  .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.RebirthMaster)]
        public static void RebirthMaster(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I devote all my life to the research of eternity, and finally I know the secret of rebirth!\n")
                            .AddText("What would you like to know?")
                            .AddOption("1st~Rebirth.", 1)
                            //   .AddOption("2nd~Rebirth.", 4)
                            .AddOption("What's a CelestialStone?", 10)
                            .AddOption("Distribute the attributes?", 12)
                             .AddOption("Powerful skills?", 13)
                             //    .AddOption("Reallot~my~Attribute~Points.", 8)
                             .AddOption("Just~passing~by.", 255)
                             .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 10:
                    {
                        data.AddText("The CelestialStone syncretizes seven gems in the world. If you're able to find a CleanWater and each one of the gems you'll be able to make one.\n")
                        .AddText("Find Celestine in TwinCity(365,92) if you wish to know more about it!")
                        .AddOption("I see.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 12:
                    {
                        data.AddText("After the rebirth you'll be starting at level 15, and will receive bonus attribute points for reborning.\n")
                        .AddText("You'll also get 3 attribute points for each level you get which you'll be able to redistribute freely.")
                        .AddOption("I see.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 13:
                    {
                        data.AddText("The skills you have before the rebirth will disappear. But some only disappear for a while and they'll come back when their level reaches half of what it was in your past life.\n")
                        .AddText("You can also learn new skills if you reborn into the same class you were before reborning.")
                        .AddOption("I see.", 255).AddAvatar(67).FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        data.AddText("Reborn~level~70+~players~can~redistribute~their~attribute~points~at~the~cost~of~a~dragonball.")
                    .AddOption("I~will~reallot~my~points.", 9).AddOption("Let~me~think~it~over.", 255)
                    .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 9:
                    {
                        if (client.Player.Level >= 70 && client.Player.Reborn > 0)
                        {
                            if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                            {
                                client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);

                                client.Player.Agility = 0;
                                client.Player.Strength = 0;
                                client.Player.Vitality = 1;
                                client.Player.Spirit = 0;

                                client.CreateBoxDialog("You have successfully reloaded your attribute points.");
                                if (client.Player.Reborn == 0)
                                {
                                    client.Player.Atributes = 0;
                                    Database.DataCore.AtributeStatus.ResetStatsNonReborn(client.Player);
                                    if (Database.AtributesStatus.IsWater(client.Player.Class))
                                    {
                                        if (client.Player.Level > 110)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 110) * 3 + client.Player.ExtraAtributes);
                                    }
                                    else
                                    {
                                        if (client.Player.Level > 120)
                                            client.Player.Atributes = (ushort)((client.Player.Level - 120) * 3 + client.Player.ExtraAtributes);
                                    }
                                }
                                else if (client.Player.Reborn == 1)
                                {
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass)
                                        + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                else
                                {
                                    if (client.Player.SecoundeRebornLevel == 0)
                                        client.Player.SecoundeRebornLevel = 130;
                                    client.Player.Atributes = (ushort)(Database.Server.RebornInfo.ExtraAtributePoints(client.Player.FirstRebornLevel, client.Player.FirstClass) +
                                        Database.Server.RebornInfo.ExtraAtributePoints(client.Player.SecoundeRebornLevel, client.Player.SecondClass) + 52 + 3 * (client.Player.Level - 15) + client.Player.ExtraAtributes);
                                }
                                client.Player.SendUpdate(stream, client.Player.Strength, Game.MsgServer.MsgUpdate.DataType.Strength);
                                client.Player.SendUpdate(stream, client.Player.Agility, Game.MsgServer.MsgUpdate.DataType.Agility);
                                client.Player.SendUpdate(stream, client.Player.Spirit, Game.MsgServer.MsgUpdate.DataType.Spirit);
                                client.Player.SendUpdate(stream, client.Player.Vitality, Game.MsgServer.MsgUpdate.DataType.Vitality);
                                client.Player.SendUpdate(stream, client.Player.Atributes, Game.MsgServer.MsgUpdate.DataType.Atributes);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have one DragonBall.")
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~cannot~reallot~your~ability~points~unless~you~are~reborn~and~above~level~70.")
                  .AddOption("I~see", 255)
                  .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("From now on, have total control of your life! If you've been Reborn twice and are at least Level 110, just bring me some Oblivion Dew and I'll help you become Reincarnated! After the Reincarnation, your class skills will revert to level 0,")
                                                    .AddText("~but they`ll return to their previous levels when you reach Level 110, again. If your classes have been the same for all three lives, including your current one, you can learn the Pure Skills from your class trainer,")
                                                    .AddText("~in the job center.")
                                          .AddOption("I~want~to~get~Reincarnated.", 6)
                                          .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        if (client.Player.ConquerPoints >= 5000)
                        {
                            client.Player.ConquerPoints -= 5000;
                            client.Inventory.AddItemWitchStack(711083, 0, 1, stream, false);
                        }
                        else
                        {
                            data.Text("Sorry you dont Have 5.000 cps in your bag.");
                            data.Option("Ok.", 255)
                           .AddAvatar(67).FinalizeDialog();
                        }
                        break;
                    }
                case 6:
                    {
                        if (client.Player.Reborn == 2 && (client.Inventory.Contain(711083, 1, 1) || client.Inventory.Contain(711083, 1, 0)))
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.Reincarnation,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));


                        }
                        else
                        {
                            data.AddText("You have not been Reborn twice. I`m afraid you will not withstand the power of the Oblivion Dew. Come to me when you get stronger.")
                     .AddOption("Got~it!~Thanks!", 255)
                     .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
                case 1:
                    {
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1) || client.Inventory.Contain(721259, 1, 1))
                            {
                                data.AddText("There are two kinds of reborns. One is the normal one and the second one is blessed.\n")
                                    .AddText("The normal reborn will give you a Super Gem, and the blessed reborn will set a -1 into one of your equipment that you wear during the reborn.\n")
                                    .AddText("Which reborn would you like?")
                             .AddOption("Normal reborn.", 2)
                             .AddOption("Blessed reborn.", 3)
                             .AddOption("I`ll~think~about~it.", 255)
                             .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have a CelestialStone.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You~haven`t~reached~the~highest~rank~yet.~Please~work~harder. You cannot reborn if your level is not 110+ for water saints and 120+ for other masters.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {
                        if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1) || client.Inventory.Contain(723701, 1, 1))
                            {
                                data.AddText("You don't worry, it's not going to hurt you a bit when getting the third life. You just need an exemption token and it's all going to be fine.")
                             .AddOption("Here is the ExemptionToken.", 3)
                             .AddOption("I`ll~think~about~it.", 255)
                             .AddAvatar(67).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have Exemption Token.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry,~you~are~ineligible~for~second~rebirth.~Please~wait~until~you~are~a~level~120~reborn~person.")
                        .AddOption("I~see.", 255)
                        .AddAvatar(67).FinalizeDialog();
                        }



                        break;
                    }
                case 2:
                    {
                        data.AddText("Select the super gem you desire:\n")
                      .AddOption("Super Phoenix Gem.", 203)
                      .AddOption("Super Dragon Gem.", 213)
                      .AddOption("Super Fury Gem.", 223)
                      .AddOption("Super Rainbow Gem.", 233)
                      .AddOption("Super Violet Gem.", 253)
                      .AddOption("Super Moon Gem.", 254)
                      .AddOption("Super Kylin Gem.", 252)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 203:
                case 213:
                case 223:
                case 233:
                case 253:
                case 254:
                case 252:
                    {
                        if (client.Player.Reborn == 0)
                        {
                            if (Option == 252)
                                client.RebornGem = 43;
                            else if (Option == 254)
                                client.RebornGem = 63;
                            else client.RebornGem = (uint)(Option % 100);
                        }
                        data.AddText("Select the class you want.")
                      .AddOption("Trojan.", 11)
                      .AddOption("Warrior.", 21)
                      .AddOption("Archer.", 41)
                      .AddOption("Water Taoist.", 132)
                      .AddOption("Fire Taoist.", 142)
                      //.AddOption("Ninja.", 51)
                      //.AddOption("Monk", 61)
                      .AddOption("I`ll~think~about~it.", 255)
                      .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        data.AddText("Select the class you want.")
                    .AddOption("Trojan.", 11)
                    .AddOption("Warrior.", 21)
                    .AddOption("Archer.", 41)
                    .AddOption("Water Taoist.", 132)
                    .AddOption("Fire Taoist.", 142)
                    //.AddOption("Ninja.", 51)
                    .AddOption("I`ll~think~about~it.", 255)
                    .AddAvatar(67).FinalizeDialog();

                        break;
                    }
                case 11:
                case 21:
                case 41:
                case 132:
                case 142:
                case 51:
                    {

                        if (!client.Inventory.HaveSpace(4))
                        {
                            data.AddText("Sorry, but you need atleast 4 free spaces in your inventory.")
            .AddOption("I~see.", 255)
            .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Player.Reborn == 0 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(721259, 1) || client.Inventory.Contain(721259, 1, 1))
                            {
                                client.Inventory.Remove(721259, 1, stream);

                                if (client.RebornGem != 0)
                                {
                                    client.Inventory.Add(stream, (uint)(700000 + client.RebornGem), 1);
                                    client.RebornGem = 0;

                                }
                                else
                                {
                                    foreach (var item in client.Equipment.CurentEquip)
                                    {
                                        if (item.Bless == 0)
                                        {
                                            item.Bless = 1;
                                            item.Mode = Role.Flags.ItemMode.Update;
                                            item.Send(client, stream);
                                            break;
                                        }
                                    }
                                }
                                //if (client.Player.Level >= 110 && client.Player.Class == 135)
                                //{
                                //    client.Inventory.Add(stream, Database.ItemType.DragonBall, 1);
                                //}
                                switch (Option)
                                {
                                    case 161:
                                    case 11:
                                    case 21:
                                    case 51:
                                    case 61:
                                    case 71:
                                    case 81:
                                        {
                                            client.Inventory.Add(stream, 410077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Poison);
                                            break;
                                        }
                                    case 41:
                                        {
                                            client.Inventory.Add(stream, 500077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.Shield);
                                            break;
                                        }
                                    case 132:
                                    case 142:
                                        {
                                            client.Inventory.Add(stream, 421077, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, false, Role.Flags.ItemEffect.MP);

                                            break;
                                        }
                                }

                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have a Celestial Stone.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else if (client.Player.Reborn == 1 && (client.Player.Level >= 110 && client.Player.Class == 135 || client.Player.Level >= 120 & client.Player.Class % 10 == 5))
                        {
                            if (client.Inventory.Contain(723701, 1) || client.Inventory.Contain(723701, 1, 1))
                            {
                                client.Inventory.Remove(723701, 1, stream);
                                Database.Server.RebornInfo.Reborn(client.Player, Option, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you don't have an Exemption Token.")
                      .AddOption("I~see.", 255)
                      .AddAvatar(67).FinalizeDialog();
                            }
                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.BlacksmithLee)]
        public static void BlacksmithLee(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("How may I help you?")
                            .AddOption("Open socket in item.", 1)
                            .AddOption("Open socket in weapon.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        data.AddText("It costs 1 DragonBall for the first socket and 5 DragonBalls for the second!")
                       .AddOption("Left Weapon.", 15)
                       .AddOption("Right Weapon.", 14)
                       .AddAvatar(63).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        data.AddText("It costs 12 DragonBalls for the first socket and 7 StarDrills for second. If you consider yourself lucky try Tough Drill!")
                        .AddOption("Headgear.", 11)
                        .AddOption("Necklace/Bag.", 12)
                        .AddOption("Armor.", 13)
                        .AddOption("Ring/Bracelet.", 16)
                        .AddOption("Shield.", 15)
                        .AddOption("Boots.", 18)
                        .AddOption("Never~mind.", 255)
                            .AddAvatar(63)
                            .FinalizeDialog();
                        break;
                    }
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 18:
                    {
                        MsgServer.MsgGameItem DataItem;
                        if (client.Equipment.TryGetEquip((Role.Flags.ConquerItem)Option - 10, out DataItem))
                        {
                            if (DataItem != null)
                            {//5--1050002
                                ushort Position = Database.ItemType.ItemPosition(DataItem.ITEM_ID);
                                if (Database.ItemType.IsArrow(DataItem.ITEM_ID))
                                {
                                    client.SendSysMesage("Sorry, this item isn't allowed.");
                                    return;
                                }
                                if (Database.ItemType.AllowToUpdate((Role.Flags.ConquerItem)Position))
                                {
                                    if (Option == 14 || Option == 15 && !Database.ItemType.IsShield(DataItem.ITEM_ID))
                                    {
                                        if (DataItem.SocketOne == Role.Flags.Gem.NoSocket)
                                        {

                                            if (DataItem.SocketOne == Role.Flags.Gem.NoSocket)
                                            {
                                                if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                                                {
                                                    DataItem.SocketOne = Role.Flags.Gem.EmptySocket;
                                                    DataItem.Mode = Role.Flags.ItemMode.Update;
                                                    DataItem.Send(client, stream);
                                                    if (DataItem.Position != 0)
                                                        client.Equipment.QueryEquipment();

                                                    client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                                                }
                                                else
                                                {
                                                    client.SendSysMesage("Sorry, you don't have 1 DragonBall!");
                                                }
                                            }
                                            else
                                            {
                                                client.SendSysMesage("This weapon already has one socket!");
                                            }
                                        }
                                        else if (DataItem.SocketTwo == Role.Flags.Gem.NoSocket)
                                        {
                                            if (client.Inventory.Contain(Database.ItemType.DragonBall, 5))
                                            {
                                                DataItem.SocketTwo = Role.Flags.Gem.EmptySocket;
                                                DataItem.Mode = Role.Flags.ItemMode.Update;
                                                DataItem.Send(client, stream);
                                                if (DataItem.Position != 0)
                                                    client.Equipment.QueryEquipment();
                                                client.Inventory.Remove(Database.ItemType.DragonBall, 5, stream);

                                            }
                                            else
                                            {
                                                client.SendSysMesage("Sorry, you don't have 5 DragonBalls!");
                                            }
                                        }
                                    }
                                    else
                                    {
                                        if (DataItem.SocketOne == Role.Flags.Gem.NoSocket)
                                        {

                                            if (DataItem.SocketOne == Role.Flags.Gem.NoSocket)
                                            {
                                                if (client.Inventory.Contain(Database.ItemType.DragonBall, 12))
                                                {
                                                    DataItem.SocketOne = Role.Flags.Gem.EmptySocket;
                                                    DataItem.Mode = Role.Flags.ItemMode.Update;
                                                    DataItem.Send(client, stream);
                                                    if (DataItem.Position != 0)
                                                        client.Equipment.QueryEquipment();

                                                    client.Inventory.Remove(Database.ItemType.DragonBall, 12, stream);
                                                }
                                                else
                                                {
                                                    client.SendSysMesage("Sorry, you don't have 12 DragonBalls!");
                                                }
                                            }
                                            else
                                            {
                                                client.SendSysMesage("This item already has one socket!");
                                            }
                                        }
                                        else if (DataItem.SocketTwo == Role.Flags.Gem.NoSocket)
                                        {
                                            if (client.Inventory.Contain(Database.ItemType.ToughDrill, 1))
                                            {
                                                if (Role.Core.Rate(5))
                                                {
                                                    DataItem.SocketTwo = Role.Flags.Gem.EmptySocket;
                                                    DataItem.Mode = Role.Flags.ItemMode.Update;
                                                    DataItem.Send(client, stream);
                                                    if (DataItem.Position != 0)
                                                        client.Equipment.QueryEquipment();
                                                    client.Inventory.Remove(Database.ItemType.ToughDrill, 1, stream);
                                                    data.AddText("Congratulations! You've opened a 2nd socket in your item! ").AddOption("Thank you so much!", 255).FinalizeDialog();
                                                    Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has opened a 2nd socket in their " + Database.Server.ItemsBase.GetItemName(DataItem.ITEM_ID) + " with only one Tough Drill!", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                                }
                                                else
                                                {
                                                    if (client.Inventory.Contain(Database.ItemType.ToughDrill, 1))
                                                    {
                                                        client.Inventory.Remove(Database.ItemType.ToughDrill, 1, stream);
                                                        client.Inventory.Add(stream, Database.ItemType.StarDrill, 1);
                                                        data.AddText("You're unlucky, you've failed and got 1 Star Drill in return.").AddOption("Yikes.", 255).FinalizeDialog();
                                                    }
                                                }
                                            }
                                            if (client.Inventory.Contain(Database.ItemType.StarDrill, 7))
                                            {
                                                DataItem.SocketTwo = Role.Flags.Gem.EmptySocket;
                                                DataItem.Mode = Role.Flags.ItemMode.Update;
                                                DataItem.Send(client, stream);
                                                if (DataItem.Position != 0)
                                                    client.Equipment.QueryEquipment();

                                                client.Inventory.Remove(Database.ItemType.StarDrill, 7, stream);
                                                data.AddText("Congratulations! You've opened a 2nd socket in your item! ").AddOption("Thank you so much!", 255).FinalizeDialog();
                                                Program.SendGlobalPackets.Enqueue(new Game.MsgServer.MsgMessage("Congratulations! " + client.Player.Name + " has opened a 2nd socket in their " + Database.Server.ItemsBase.GetItemName(DataItem.ITEM_ID) + " .", Game.MsgServer.MsgMessage.MsgColor.white, Game.MsgServer.MsgMessage.ChatMode.Center).GetArray(stream));

                                            }
                                            //else
                                            //{
                                            //    client.SendSysMesage("Sorry you need 7 star drill!");
                                            //    return;
                                            //}
                                        }
                                    }
                                }
                            }
                            else
                            {
                                client.SendSysMesage("Sorry, you can't make socket in this item!");
                                return;
                            }
                        }
                        else
                        {
                            client.SendSysMesage("Sorry, can't make a socket in this item!");
                        }
                    }
                    break;


            }

        }

        [NpcAttribute(NpcID.LoveStone)]
        public static void LoveStone(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Fate can bring lovers together. I hope you all can get married and live happily with your lovers. What can I do for you?")
                            .AddOption("Claim x2 experience.", 1)
                            .AddOption("Get married.", 2)
                            .AddOption("Get a divorce.", 3)
                            .AddOption("Never~mind.", 4)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Player.HeavenBlessing > 0)
                        {
                            if (client.Player.BDExp == 0)
                            {
                                client.Player.BDExp = 1;

                                client.Player.RateExp = 2;
                                client.Player.DExpTime = 3600;
                                client.Player.CreateExtraExpPacket(stream);
                                client.SendSysMesage("You've received double experience for one hour.", MsgServer.MsgMessage.ChatMode.System, MsgServer.MsgMessage.MsgColor.white);
                            }
                            else
                            {
                                data.AddText("Sorry, but you've claimed double experience today!").AddOption("Okay.", 255)
                        .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have blessing!").AddOption("Okay.", 255)
                       .AddAvatar(6).FinalizeDialog();
                        }


                        break;
                    }
                case 3:
                    {
                        data.AddText("If your marriage left you nothing but regret and pain, then bring 10 Meteors, and I can help you get divorced.")
                            .AddOption("Get divorced.", 8)
                            .AddOption("Let me reconsider it.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 10))
                        {
                            if (client.Player.Spouse != "None")
                            {
                                client.Inventory.Remove(Database.ItemType.Meteor, 10, stream);
                                Client.GameClient Spouse;
                                if (Database.Server.GamePoll.TryGetValue(client.Player.SpouseUID, out Spouse))
                                {
                                    client.Player.Spouse = "None";
                                    client.Player.SpouseUID = 0;

                                    Spouse.Player.SpouseUID = 0;
                                    Spouse.Player.Spouse = "None";

                                    client.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Spouse, false, new string[1] { "None" });
                                    Spouse.Player.SendString(stream, MsgServer.MsgStringPacket.StringID.Spouse, false, new string[1] { "None" });
                                    return;
                                }
                                else
                                {
                                    client.ClientFlag |= Client.ServerFlag.RemoveSpouse;
                                    Database.ServerDatabase.LoginQueue.TryEnqueue(client);
                                }
                            }
                            else
                            {
                                data.AddText("You don`t have a spouse.")
                                    .AddOption("You're right.", 255)
                                    .AddAvatar(6).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("You don`t have 10 Meteors.")
                                .AddOption("You're right.", 255)
                                .AddAvatar(6).FinalizeDialog();
                        }

                        break;
                    }

                case 2:
                    {
                        data.AddText("Fate can bring lovers together, and everybody can live happily ever after. What can I do for you?")
                           .AddOption("Get married.", 5)
                           .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 5:
                    {
                        data.AddText("Marriage~is~the~promise~forever.~Are~you~sure~that~you~want~to~spend~the~rest~of~your~life~with~your~lover?")
                          .AddOption("Yes.", 6)
                           .AddOption("I~prefer~being~single.", 255)
                          .AddAvatar(6).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        data.AddText("Are~you~ready~to~propose?")
                            .AddOption("Yes, I'm ready.", 7)
                            .AddOption("Let~me~think~it~over.", 255)
                            .AddAvatar(6).FinalizeDialog();

                        break;
                    }
                case 7:
                    {
                        data.AddText("Please click on your lover to propose.")
                            .AddOption("Thank you!", 255)
                            .AddAvatar(6).FinalizeDialog();


                        ActionQuery action = new ActionQuery()
                        {
                            dwParam = MsgServer.CustomCommands.FlowerPointer,
                            Type = ActionType.OpenCustom,
                            ObjId = client.Player.UID
                        };
                        client.Send(stream.ActionCreate(&action));


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.CloudSaint)]
        public static void CloudSaint(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.DemonExterminator.FinishToday == 1)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                byte stage = client.DemonExterminator.GetDemonExterminatorStage(Jar);
                                if (stage == 3)
                                {
                                    data.AddText("You have finished killing all the monsters for today. Do you want to claim your prize?");
                                    data.AddOption("Yes.", 3);
                                    data.AddOption("Never~mind.", 255);
                                    data.AddAvatar(102).FinalizeDialog();
                                }
                                else if (stage != byte.MaxValue)
                                {
                                    data.AddText("You've killed the amount required for this stage. Do you want to advance?");
                                    data.AddOption("Yes.", 2);
                                    data.AddOption("Never~mind.", 255);
                                    data.AddAvatar(102).FinalizeDialog();
                                }
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters for your current stage.");
                                //  data.AddOption("Yes, I want to give up.", 4);
                                data.AddOption("Sorry.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                        }

                        else
                        {

                            if (client.DemonExterminator.FinishToday == 1)
                            {
                                data.AddText("You've already helped me out today my warrior, please come back to me tomorrow!");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            if (client.Player.Level < 120)
                            {
                                data.AddText("You are too weak to take quests from me. Go find the MC Captain.");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                                break;
                            }
                            data.AddText("Demons are taking control over CoPrivate.\n");
                            data.AddText("My family is the only one that can make a contract with humans to purify the world from these demons.\n");
                            data.AddText("I can give you two ExpBalls as a reward for doing it, but you can only do it once per day.\n");
                            data.AddText("What would you like to do?");
                            data.AddOption("Begin quest.", 1);
                            data.AddOption("Buy the quest.", 5);
                            data.AddOption("Just passing by.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 2:
                    {
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.DemonExterminator.HuntKills = 0;

                                byte stage = client.DemonExterminator.GetDemonExterminatorStage(Jar);
                                stage++;

                                client.DemonExterminator.CreateDemonExterminator(client, stream, Database.InfoDemonExterminators.StageKills[stage], Database.InfoDemonExterminators.QuestTyp[client.DemonExterminator.QuestTyp][stage]);
                                data.AddText(string.Concat("Now go and kill ", Database.InfoDemonExterminators.StageKills[stage], " ", Database.InfoDemonExterminators.QuestName[client.DemonExterminator.QuestTyp][stage], " then come back."));
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();

                            }
                            else
                            {
                                data.AddText("You don't have the jar.");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                        }

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.FinishToday = 1;
                            int questtype = Program.GetRandom.Next(0, Database.InfoDemonExterminators.QuestTyp.Length);
                            client.DemonExterminator.QuestTyp = (uint)questtype;
                            client.DemonExterminator.CreateDemonExterminator(client, stream, Database.InfoDemonExterminators.StageKills[0], Database.InfoDemonExterminators.QuestTyp[questtype][0]);
                            data.AddText("Thank you, brave soldier, for accepting this quest. Kill " + Database.InfoDemonExterminators.StageKills[0] + " " + Database.InfoDemonExterminators.QuestTyp[questtype][0] + " and come back.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 4:
                    {

                        client.Inventory.Remove(750000, 1, stream);
                        client.DemonExterminator.HuntKills = 0;
                        client.DemonExterminator.ItemUID = 0;
                        break;
                    }
                case 3:
                    {

                        //   client.DemonExterminator.FinishToday = 1;

                        client.GainExpBall(600 * 5, true, Role.Flags.ExperienceEffect.angelwing);
                        client.Inventory.Remove(750000, 1, stream);
                        client.DemonExterminator.HuntKills = 0;
                        client.DemonExterminator.ItemUID = 0;
                        break;
                    }
                case 5:
                    {
                        data.AddText("Would you like to buy the quest for 250 CPs?");
                        data.AddOption("Yes.", 6);
                        data.AddOption("Just passing by.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 6:
                    {
                        if (client.Player.ConquerPoints >= 250)
                        {
                            client.Player.ConquerPoints -= 250;


                            client.GainExpBall(600 * 5, true, Role.Flags.ExperienceEffect.angelwing);
                            client.Inventory.Remove(750000, 1, stream);
                            client.DemonExterminator.ItemUID = 0;
                            client.DemonExterminator.HuntKills = 0;
                            client.DemonExterminator.FinishToday = 1;
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 250 CPs.");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.Confiscator)]
        public static void Confiscator(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Those who were killed while red/black name and lost equipment may claim it back from me.\n")
                            .AddText("You have 7-days to redeem your equipment or it will be given to the player that killed you.")
                            .AddText("If you've killed a player that was red/black named, you can claim your rewards here.")
                            .AddOption("Redeem my equipment.", 1)
                            .AddOption("Claim my rewards.", 3)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("You must pay me CPs to redeem your equipment.")
                            .AddOption("I~want~my~equipment.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        if (!client.Confiscator.IsEmptyReadem())
                        {

                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.DetainRedeem,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));

                        }
                        else
                        {
                            data.AddText("You don't have any equipment to redeem.")
                                .AddOption("Okay.", 255)
                                .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("The red/black name you've killed can redeem equipment within 7-days.\n")
                            .AddText("You'll be rewarded the CPs that he/she pays for them.\n")
                            .AddText("If not, you will get the detained equipment as rewards.")
                            .AddOption("I~want~my~equipment.", 4)
                            .AddOption("Let~me~think.", 255)
                            .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Confiscator.IsEmptyClaim())
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.DetainClaim,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));

                        }
                        else
                        {
                            data.AddText("Sorry, you don't have anything to claim now.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.JailConfiscator)]
        public static void JailConfiscator(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("The red/black name can redeem their detained equipment within 7 days. The CPs they pay for their guilt will be rewarded to the")
                            .AddText("~who killed them. If they do not pay, the equipment detained will be given to the one who killed them as rewards.")
                            .AddOption("I~want~to~redeem~my~equipment.", 1)
                            .AddOption("I~want~to~claim~my~rewards.", 3)
                            .AddOption("What?", 255)
                            .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        data.AddText("You can pay some CPs to redeem your equipment.")
                  .AddOption("I~want~my~equipment.", 2)
                  .AddOption("Let~me~think.", 255)
                  .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 2:
                    {
                        if (!client.Confiscator.IsEmptyReadem())
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                Type = ActionType.OpenDialog,
                                ObjId = client.Player.UID,
                                dwParam = MsgServer.DialogCommands.DetainRedeem,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));


                        }
                        else
                        {
                            data.AddText("You do not have any equipment detained.")
                 .AddOption("Got~it.", 255)
                 .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("The red/black name you killed can redeem equipment within 7 days. You will be rewarded the CPs that he/she pay for the guilt.")
                            .AddText("~If not, you will get the detained equipment as rewards.")
                   .AddOption("I~want~my~equipment.", 4)
                   .AddOption("Let~me~think.", 255)
                   .AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 4:
                    {
                        if (!client.Confiscator.IsEmptyClaim())
                        {

                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                Type = ActionType.OpenDialog,
                                dwParam = MsgServer.DialogCommands.DetainClaim,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));

                        }
                        else
                        {
                            data.AddText("Sorry, you do not have anything to claim now.")
                 .AddOption("I~see.", 255)
                 .AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }

            }
        }
        [NpcAttribute(NpcID.GarmentShopKeeper)]
        public static void GarmentShopKeeper(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        ActionQuery action = new ActionQuery()
                        {
                            Type = ActionType.OpenDialog,
                            ObjId = client.Player.UID,
                            dwParam = MsgServer.DialogCommands.GarmentShop,
                            wParam1 = client.Player.X,
                            wParam2 = client.Player.Y
                        };
                        client.Send(stream.ActionCreate(&action));
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MillionaireLee)]
        public static void MillionaireLee(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hunting for treasure is an exciting thing.\n")
                            .AddText("~However,~they~also~pile~up~in~your~inventories.")
                            .AddOption("Pack~+1~Stones.", 1)
                          //.AddOption("Pack~+2~Stones.", 3)
                          //.AddOption("Pack~+3~Stones.", 5)
                          //.AddOption("Pack~Normal~Gems.", 7)
                          //.AddOption("Pack~EXP~Balls~for~me!", 32)
                            .AddOption("Pack~Meteors.", 34)
                            .AddOption("Pack~DragonBalls.", 36)
                            .AddOption("Just~passing~by.", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 36:
                    {
                        data.AddText("10 DragonBalls can be packed into a DBScroll.\n")
                            .AddText("Would you like me to pack them for you?")
                            .AddOption("Yes,~please.", 37)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 37:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 10))
                        {
                            client.Inventory.Remove(Database.ItemType.DragonBall, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.DragonBallScroll, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 DragonBalls.")
                                .AddOption("My~bad.", 255)
                                .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }

                case 34:
                    {
                        data.AddText("10 Meteors can be packed into a MeteorScroll.\n")
                            .AddText("Would you like me to pack them for you?")
                            .AddOption("Yes,~please.", 35)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 35:
                    {
                        if (client.Inventory.Contain(Database.ItemType.Meteor, 10, 1))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                        }
                        else if (client.Inventory.Contain(Database.ItemType.Meteor, 10, 0))
                        {
                            client.Inventory.Remove(Database.ItemType.Meteor, 10, stream);
                            client.Inventory.Add(stream, Database.ItemType.MeteorScroll, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 meteors.")
                                .AddOption("My~bad.", 255)
                                .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 32:
                    {
                        data.AddText("Pay 100,000 Silver and give me 5 EXP Balls, I can pack them into an EXP Ball Gift Box for you!")
                            .AddOption("Pack~EXP~Balls~for~me!", 33)
                            .AddOption("Bye.", 255)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 33:
                    {
                        if (client.Inventory.Contain(722136, 30))
                        {
                            if (client.Player.Money >= 100000)
                            {
                                client.Player.Money -= 100000;
                                client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                                client.Inventory.Remove(722136, 30, stream);
                                client.Inventory.Add(stream, 720757, 1);
                            }
                            else
                            {
                                data.AddText("You do not have 100,000 silvers with you.")
                                    .AddOption("My~bad.", 255)
                                    .AddAvatar(7).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 30 EXP Balls.")
                                .AddOption("My~bad.", 255)
                                .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 7:
                    {
                        data.AddText("Which kind of Normal Gems do you want to pack up?")
                          //.AddOption("Glory~Gems.", 8)
                          //.AddOption("Thunder~Gems.", 9)
                            .AddOption("Kylin~Gems.", 10)
                            .AddOption("Rainbow~Gems.", 11)
                            .AddOption("Fury~Gems.", 12)
                            .AddOption("Next~page.", 13)
                            .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 13:
                    {
                        data.AddText("Which kind of Normal Gems do you want to pack up?")
                  .AddOption("Dragon~Gems.", 14)
                  .AddOption("Phoenix~Gems.", 15)
                  .AddOption("Violet~Gems.", 16)
                  .AddOption("Moon~Gems.", 17)
                  .AddOption("Tortoise~Gems.", 18)
                  .AddOption("Back~page.", 7)
                  .AddOption("Just~passing~by.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 18:
                    {
                        data.AddText("5 Normal Tortoise Gems can be packed into a Tortoise Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 29)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 29:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalTortoiseGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalTortoiseGem), 5, stream);
                            client.Inventory.Add(stream, 727069, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Tortoise Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 17:
                    {
                        data.AddText("5 Normal Moon Gems can be packed into a Moon Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 28)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 28:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalMoonGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalMoonGem), 5, stream);
                            client.Inventory.Add(stream, 727068, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Moon Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 16:
                    {
                        data.AddText("5 Normal Violet Gems can be packed into a Violet Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 27)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 27:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalVioletGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalVioletGem), 5, stream);
                            client.Inventory.Add(stream, 727067, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Violet Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 15:
                    {
                        data.AddText("5 Normal Phoenix Gems can be packed into a Phoenix Gem Pack! Would you like me to pack them for you?")
                .AddOption("Yes,~please.", 26)
                .AddOption("Bye.", 255)
                .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 26:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalPhoenixGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalPhoenixGem), 5, stream);
                            client.Inventory.Add(stream, 727066, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Phoenix Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 14:
                    {
                        data.AddText("5 Normal Dragon Gems can be packed into a Dragon Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 25)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 25:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalDragonGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalDragonGem), 5, stream);
                            client.Inventory.Add(stream, 727065, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Dragon Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 12:
                    {
                        data.AddText("5 Normal Fury Gems can be packed into a Fury Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 24)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 24:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalFuryGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalFuryGem), 5, stream);
                            client.Inventory.Add(stream, 727064, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Fury Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 11:
                    {
                        data.AddText("5 Normal Rainbow Gems can be packed into a Rainbow Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 23)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 23:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalRainbowGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalRainbowGem), 5, stream);
                            client.Inventory.Add(stream, 727063, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Rainbow Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 10:
                    {
                        data.AddText("5 Normal Kylin Gems can be packed into a Kylin Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 22)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 22:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalKylinGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalKylinGem), 5, stream);
                            client.Inventory.Add(stream, 727062, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Kylin Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 9:
                    {
                        data.AddText("5 Normal Thunder Gems can be packed into a Thunder Gem Pack! Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 21)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 21:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalThunderGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalThunderGem), 5, stream);
                            client.Inventory.Add(stream, 727061, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Thunder Gems.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }

                case 8:
                    {
                        data.AddText("5 Normal Glory Gems can be packed into a Glory Gem Pack! Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 20)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();

                        break;
                    }
                case 20:
                    {
                        if (client.Inventory.Contain((uint)(700000 + (uint)Role.Flags.Gem.NormalGloryGem), 5))
                        {
                            client.Inventory.Remove((uint)(700000 + (uint)Role.Flags.Gem.NormalGloryGem), 5, stream);
                            client.Inventory.Add(stream, 727060, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 Normal Glory.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }


                        break;
                    }
                case 5:
                    {
                        data.AddText("10 +3 Stones can be packed into a +3 Stone Pack. Would you like me to pack them for you?")
                .AddOption("Yes,~please.", 6)
                .AddOption("Bye.", 255)
                .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 6:
                    {
                        if (client.Inventory.Contain(730003, 10))
                        {
                            client.Inventory.Remove(730003, 10, stream);
                            client.Inventory.Add(stream, 729023, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 +3 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
                case 3:
                    {
                        data.AddText("10 +2 Stones can be packed into a +2 Stone Pack. Would you like me to pack them for you?")
                  .AddOption("Yes,~please.", 4)
                  .AddOption("Bye.", 255)
                  .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 4:
                    {
                        if (client.Inventory.Contain(730002, 10))
                        {
                            client.Inventory.Remove(730002, 10, stream);
                            client.Inventory.Add(stream, 729022, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 10 +2 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }



                        break;
                    }
                case 1:
                    {
                        data.AddText("5 +1 Stones can be packed into a +1 Stone Pack. Would you like me to pack them for you?")
                 .AddOption("Yes,~please.", 2)
                 .AddOption("Bye.", 255)
                 .AddAvatar(7).FinalizeDialog();


                        break;
                    }
                case 2:
                    {

                        if (client.Inventory.Contain(730001, 5, 1))
                        {
                            client.Inventory.Remove(730001, 5, stream);
                            client.Inventory.Add(stream, 723712, 1, 0, 0, 0, Role.Flags.Gem.NoSocket, Role.Flags.Gem.NoSocket, true);
                        }
                        else if (client.Inventory.Contain(730001, 5, 0))
                        {
                            client.Inventory.Remove(730001, 5, stream);
                            client.Inventory.Add(stream, 723712, 1);
                        }
                        else
                        {
                            data.AddText("Sorry, you don`t have 5 +1 Stones.")
                  .AddOption("My~bad.", 255)
                  .AddAvatar(7).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.UnknowMan)]
        public static void UnknowMan(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("If you have a DragonBall I can help you gain a large amount of experience, would you like my help?")
                            .AddOption("Yes, please.", 1)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("I can help you gain experience from 1 Dragon Ball once a day, are you ready?")
                            .AddOption("I'm ready.", 2)
                            .AddOption("I'll be right back.", 255)
                            .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Player.Level == 137)
                        {
                            data.AddText("Sorry, but your level is too high.")
                                .AddOption("I~see.", 255)
                                .AddAvatar(67).FinalizeDialog();
                            break;
                        }
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            if (!client.Player.DbTry)
                            {
                                client.Player.DbTry = true;
                                client.GainExpBall(600 * 5, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            }
                            else
                            {
                                data.AddText("Sorry, you've already used my service today, come back tomorrow.")
                                    .AddOption("I'll be back.", 255)
                                    .AddAvatar(67).FinalizeDialog();
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, but you don`t have enough DragonBalls.")
                   .AddOption("I~see.", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.CollectorZhao)]
        public static void CollectorZhao(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I collect all kinds of treasures!\n")
                            .AddText("If you have any DisguiseAmulets, LifeFruitBaskets, or PenitenceAmulets, I will buy them from you.")
                            .AddOption("Here~are~my~Disguise~Amulets.", 1)
                            .AddOption("Here~are~my~Life~Fruit~Baskets.", 2)
                            .AddOption("Here~are~my~Penitence~Amulets.", 3)
                            .AddOption("I'll be back.", 255)
                            .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        if (client.Inventory.Contain(723724, 1))
                        {
                            client.Inventory.Remove(723724, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You'll receive 15 CPs for your item.")
                   .AddOption("Thank you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You don't have what I want.")
                   .AddOption("Sorry.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(723725, 1))
                        {
                            client.Inventory.Remove(723725, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You'll receive 15 CPs for your item.")
                   .AddOption("Thank you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You don't have what I want.")
                   .AddOption("Sorry.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
                case 3:
                    {
                        if (client.Inventory.Contain(723727, 1))
                        {
                            client.Inventory.Remove(723727, 1, stream);
                            client.Player.ConquerPoints += 15;


                            data.AddText("You'll receive 15 CPs for your item.")
                   .AddOption("Thank you.", 255)
                   .AddAvatar(10).FinalizeDialog();
                        }
                        else
                        {

                            data.AddText("You don't have what I want.")
                   .AddOption("Sorry.", 255)
                   .AddAvatar(10).FinalizeDialog();

                        }


                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.SurgeonMiracle)]
        public static void SurgeonMiracle(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I can help you change your body size, if you'd like to become much more adorable.")
                       .AddOption("Change my body size.", 1)
                       .AddOption("No, thank you.", 255)
                       .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 1:
                    {
                        data.AddText("It'll cost you 1 DragonBall for me to change your body size.")
                            .AddOption("Here is 1 DragonBall.", 2)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(67).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        if (client.Inventory.Contain(Database.ItemType.DragonBall, 1))
                        {
                            switch (client.Player.Body)
                            {
                                case 1003: client.Player.Body = 1004; break;
                                case 1004: client.Player.Body = 1003; break;
                                case 2001: client.Player.Body = 2002; break;
                                case 2002: client.Player.Body = 2001; break;
                            }
                            client.Player.View.SendView(client.Player.GetArray(stream, false), false);
                            client.Inventory.Remove(Database.ItemType.DragonBall, 1, stream);
                            data.AddText("Your body size has been changed successfully.")
                   .AddOption("Thank you.", 255)
                   .AddAvatar(67).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have a DragonBall.")
                    .AddOption("I~see.", 255)
                    .AddAvatar(67).FinalizeDialog();
                        }


                        break;
                    }

            }
        }

        #endregion
        #region DemonExterminator
        [NpcAttribute(NpcID.MCaptain)]
        public static void MCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[1001].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.BCaptain)]
        public static void BCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DCCaptain)]
        public static void DCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.AMCaptain)]
        public static void AMCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();



                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.PCCaptain)]
        public static void PCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.GainExpBall(600, true, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();


                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.TCCaptain)]
        public static void TCCaptain(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {

            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("I`m the TC Captain, I`m in charge of the public security around here.\n")
                            .AddText("If you can help me, I'll reward you.")
                            .AddOption("I'd like to help.", 240)
                            .AddOption("I'll think about it.", 255)
                            .AddAvatar(10).FinalizeDialog();
                        break;
                    }
                case 240:
                    {
                        data.AddText("I have some jobs for you to do here! The Pheasants outside Twin City are becoming more and more aggressive!\n")
                             .AddText("I want you to defeat 10 of them. This is for the safety of the people in Twin City.")
                             .AddOption("I'm ready.", 230)
                             .AddOption("Never~mind.", 255)
                             .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 233:
                    {
                        data.AddText("Good job! You've returned peace to Twin City!")
                            .AddOption("Thank you!", 233)
                            .AddAvatar(10).FinalizeDialog();


                        break;
                    }
                case 231:
                    {
                        data.AddText("There is a long way to go! You need some professional guidance to grow stronger!\n")
                            .AddText("Find the NPC of your class in the Job Center to learn more about your job promotion!")
                            .AddOption("Job Promotion 1.", 234)
                            .AddOption("I want to take a Daily Quest.", 230)
                            .AddAvatar(10).FinalizeDialog();

                        break;
                    }
                case 230:
                    {
                        if (client.Player.TCCaptainTimes == 3)
                        {
                            data.AddText("You already helped me out today my warrior, please come back to me tomorrow!");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                            break;
                        }
                        Game.MsgServer.MsgGameItem Jar;
                        if (client.Inventory.TryGetItem(client.DemonExterminator.ItemUID, out Jar))
                        {
                            if (Jar.Durability <= client.DemonExterminator.HuntKills)
                            {
                                client.IncreaseExperience(stream, 1400, Role.Flags.ExperienceEffect.angelwing);
                                client.Inventory.Remove(750000, 1, stream);
                                client.DemonExterminator.HuntKills = 0;
                                client.DemonExterminator.ItemUID = 0;

                                string itemname = client.DemonExterminator.SpecialReward(client, stream);

                                data.AddText("Thanks for the help. The quest finished! You have gaine a " + itemname + "");
                                data.AddOption("Okay.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                data.AddText("You didn't finish killing the amount of monsters.");
                                data.AddOption("ah ok.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("We're always looking for brave adventurers to protect the city from monsters. Are you interesed helping?");
                        data.AddOption("Yes please!", 103);
                        data.AddOption("I`m busy.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                case 211:
                    {
                        client.Teleport(229, 258, 1011);
                        break;
                    }
                case 220:
                    {
                        client.Teleport(569, 620, 1020);
                        break;
                    }
                case 215:
                    {
                        client.Teleport(791, 568, 1015);
                        break;
                    }
                case 200:
                    {
                        client.Teleport(476, 634, 1000);
                        break;
                    }
                case 201:
                    {
                        client.Teleport(82, 321, 1000);
                        break;
                    }
                case 103:
                    {
                        var array = Database.InfoDemonExterminators.CityQuests[client.Player.Map].Where(p => p.Level + 5 > client.Player.Level).ToArray();
                        if (array.Length == 0)
                        {
                            ushort next_map = Database.InfoDemonExterminators.GetNextMap((byte)client.Player.Level);
                            if (next_map == 0)
                            {
                                data.AddText("You're a bit too powerful for the monsters near here to be any real challenge.");
                                data.AddOption("Okay", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            else
                            {
                                var DBMap = Database.Server.ServerMaps[next_map];
                                data.AddText("You are powerfull now. I suggest you to go Captain of " + DBMap.Name + ", because i heard that is ")
                                              .AddText("annoyed by the rampant monsters there. I believe you can help a lot. I will teleport you in")
                                              .AddText(" " + DBMap.Name + ", so you can reach there very soon.");
                                data.AddOption("Please send me to " + DBMap.Name + "", (byte)(200 + (next_map % 100)));
                                data.AddOption("I don`d wana to go there.", 255);
                                data.AddAvatar(102).FinalizeDialog();
                            }
                            break;
                        }
                        data.AddText("" + client.Map.Name + " used to be a paradise, until those monsters came and ruined people`s life.")
                            .AddText("If want to hunt monsters for me. I will play you. Now, select the monsters you want to hunt.");
                        foreach (var mob in array)
                        {
                            data.AddOption(mob.Name + " Level(" + mob.Level + ")", (byte)mob.ID);
                        }
                        data.AddOption("See you later.", 255);
                        data.AddAvatar(102).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Inventory.HaveSpace(1))
                        {
                            client.DemonExterminator.CreateDemonExterminator(client, stream, 50, Option);
                            data.AddText("Perfect! I`ve added a jar to your inventory to track how many monsters you have killed.")
                                .AddText(" Come back and see me when you are finished and i will reward you");
                            data.AddOption("Okay.", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("You need atleast 1 empty spot in your inventory to be able to accept this quest.");
                            data.AddOption("Okay", 255);
                            data.AddAvatar(102).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        #endregion
        #region Conductress
        [NpcAttribute(NpcID.TwinCityConductress)]
        public static void TwinCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where would you like to go?")
                            .AddOption("Phoenix Castle.", 1)
                            .AddOption("Ape City.", 2)
                            .AddOption("Desert City.", 3)
                            .AddOption("Bird Island.", 4)
                            .AddOption("Mine Cave.", 5)
                            .AddOption("Market.", 6)
                            .AddOption("Dragon Island", 7)
                            .AddOption("Just~passing~by.", 255).AddAvatar(123).FinalizeDialog();


                        break;
                    }
                case 7:
                    {
                        data.AddText("Dragon Island is very dangerous, I wish you luck.")
                            .AddOption("Enter Dragon~Island.", 8)
                            .AddOption("Never~mind.", 2).AddAvatar(123).FinalizeDialog();

                        break;
                    }
                case 8:
                    {
                        MsgSchedules.DragonIsland.Join(client, stream);
                        break;
                    }
                default:
                    {

                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {
                                case 1: client.Teleport(958, 555, 1002); break; //phoenix castle
                                case 2: client.Teleport(555, 957, 1002); break; //ape mountain
                                case 3: client.Teleport(69, 473, 1002); break; //desert city
                                case 4: client.Teleport(232, 190, 1002); break; //birdisland
                                case 5: client.Teleport(53, 399, 1002); break; // Mine Cave
                                case 6: client.Teleport(211, 196, 1036); break; //market
                                case 7: client.Teleport(547, 372, 1002); client.Player.SendString(stream, MsgStringPacket.StringID.Effect, true, new string[] { "moveback" }); break; //dragonisland

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100 silver.")
                                .AddOption("Never~mind.", 255)
                                .AddAvatar(123)
                                .FinalizeDialog();
                        }



                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.PheonixCityConductress)]
        public static void PheonixCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where would you like to go?")
                            .AddOption("Twin~City.", 1)
                            .AddOption("Market.", 2)
                            .AddOption("Just~passing~by.", 255).AddAvatar(123).FinalizeDialog();

                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {
                                case 1: client.Teleport(013, 376, 1011); break;
                                case 2: client.Teleport(211, 196, 1036); break;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100 silver.")
                                .AddOption("Never~mind.", 255).AddAvatar(123).FinalizeDialog();
                        }


                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.DesertCityConductress)]
        public static void DesertCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where would you like to go?")
                            .AddOption("Twin~City.", 1)
                            .AddOption("Mystic~Castle.", 2)
                            .AddOption("Market.", 3)
                            .AddOption("Just~passing~by.", 255).AddAvatar(123).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(973, 668, 1000); break;
                                case 2: client.Teleport(82, 321, 1000); break;
                                case 3: client.Teleport(211, 196, 1036); break;
                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100 silver.")
                                .AddOption("Never~mind.", 255).AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.ApeCityConductress)]
        public static void ApeCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where would you like to go?")
                            .AddOption("Twin~City.", 1)
                            .AddOption("Market.", 2)
                            .AddOption("Just~passing~by.", 255).AddAvatar(123).FinalizeDialog();


                        break;
                    }
                default:
                    {
                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {

                                case 1: client.Teleport(378, 13, 1020); break;

                                case 2: client.Teleport(211, 196, 1036); break;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100 silver.")
                                .AddOption("Never~mind.", 255).AddAvatar(123).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.BirdCityConductress)]
        public static void BirdCityConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Where would you like to go?")
                            .AddOption("Twin~City.", 1)
                            .AddOption("Market.", 2)
                            .AddOption("Just~passing~by.", 255).AddAvatar(123).FinalizeDialog();

                        break;
                    }
                default:
                    {

                        if (client.Player.Money >= 100)
                        {
                            client.Player.Money -= 100;
                            client.Player.SendUpdate(stream, client.Player.Money, MsgServer.MsgUpdate.DataType.Money);
                            switch (Option)
                            {
                                case 1: client.Teleport(1015, 710, 1015); break;

                                case 2: client.Teleport(211, 196, 1036); break;

                            }
                        }
                        else
                        {
                            data.AddText("Sorry, you don't have 100 silver.")
                                .AddOption("Never~mind.", 255).AddAvatar(123).FinalizeDialog();
                        }

                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.BoxerConductor)]
        public static void BoxerConductor(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Are you ready to leave?")
                            .AddOption("Yes.", 1)
                            .AddOption("No, I shall stay here.", 255)
                            .AddAvatar(15)
                            .FinalizeDialog();

                        break;
                    }
                case 1:
                    {
                        {
                            uint PrevMap = client.Player.PMap;
                            switch (PrevMap)
                            {
                                default:
                                    {

                                        client.Teleport(428, 378, 1002);
                                        break;
                                    }
                                case 1000:
                                    {

                                        client.Teleport(500, 650, 1000);
                                        break;
                                    }
                                case 1020:
                                    {

                                        client.Teleport(565, 562, 1020);
                                        break;
                                    }
                                case 1011:
                                    {

                                        client.Teleport(188, 264, 1011);
                                        break;
                                    }
                                case 1015:
                                    {
                                        client.Teleport(717, 571, 1015);
                                        break;
                                    }
                            }

                        }
                        break;
                    }
            }
        }


        [NpcAttribute(NpcID.MarketConductress)]
        public static void MarketConductress(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        data.AddText("Would you like to leave the market?")
                            .AddOption("Yes.", 1)
                            .AddOption("No.", 255)
                            .AddOption("Never~mind.", 255)
                            .AddAvatar(3)
                            .FinalizeDialog();



                        break;
                    }
                case 1:
                    {
                        {
                            uint PrevMap = client.Player.PMap;
                            switch (PrevMap)
                            {
                                default:
                                    {

                                        client.Teleport(429, 379, 1002);
                                        break;
                                    }
                                case 1000:
                                    {

                                        client.Teleport(500, 650, 1000);
                                        break;
                                    }
                                case 1020:
                                    {

                                        client.Teleport(565, 562, 1020);
                                        break;
                                    }
                                case 1011:
                                    {

                                        client.Teleport(188, 264, 1011);
                                        break;
                                    }
                                case 1015:
                                    {
                                        client.Teleport(717, 571, 1015);
                                        break;
                                    }
                            }

                        }
                        break;
                    }
            }
        }

        #endregion
        #region Mining
        [NpcAttribute(NpcID.TwinCityMining)]
        public static void TwinCityMining(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, I am the Assistant of the Mine Union.")
                         .AddText("If you want to enter the Mine Cave, I can send you.")
                        .AddOption("Yes~please.", 1)
                        .AddOption("Just passing by.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        client.Teleport(155, 94, 1028);
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.ApeMining)]
        public static void ApeMining(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, I am the assistant of the mine union.")
                         .AddText("If you want to enter the mine cave, I can send you.")
                        .AddOption("Yes Please", 1)
                        .AddOption("Just passing by.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 70)
                        {
                            client.Teleport(104, 138, 1026);

                        }
                        else
                        {
                            data.AddText("Sorry, you must be at least level 70 before you can enter this mine.")
                            .AddOption("Sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.DesertMining)]
        public static void DesertMining(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, I am the assistant of the mine union.")
                         .AddText("If you want to enter the mine cave, I can send you.")
                        .AddOption("Yes Please", 1)
                        .AddOption("Just passing by.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 70)
                        {
                            client.Teleport(104, 138, 1027);

                        }
                        else
                        {
                            data.AddText("Sorry, you must be at least level 70 before you can enter this mine.")
                            .AddOption("Sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        [NpcAttribute(NpcID.PhoenixMining)]
        public static void PhoenixMining(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, I am the assistant of the mine union.")
                         .AddText("If you want to enter the mine cave, I can send you.")
                        .AddOption("Yes Please", 1)
                        .AddOption("Just passing by.", 255).AddAvatar(6).FinalizeDialog();
                        break;
                    }
                case 1:
                    {
                        if (client.Player.Level >= 40)
                        {
                            client.Teleport(71, 29, 1025);

                        }
                        else
                        {
                            data.AddText("Sorry, you must be at least level 70 before you can enter this mine.")
                            .AddOption("Sorry", 255).FinalizeDialog();
                        }
                        break;
                    }
            }
        }

        #endregion

        [NpcAttribute(NpcID.DesertTeleporter)]
        public static void DesertTeleporter(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog dialog = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        dialog.Text("This is the way to Desert City, do you want to continue?");
                        dialog.Option("Yes.", 2);
                        dialog.Option("No~thanks.", 255);
                        dialog.AddAvatar(102).FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        client.Teleport(973, 668, 1000);
                        break;
                    }
            }
        }

        public static void Warehause(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            //if (client.ActiveNpc == (uint)NpcID.WHTwin)
            {
                Dialog data = new Dialog(client, stream);
                switch (Option)
                {
                    case 0:
                        {
                            ActionQuery action = new ActionQuery()
                            {
                                ObjId = client.Player.UID,
                                Type = ActionType.OpenDialog,
                                dwParam = MsgServer.DialogCommands.Warehouse,
                                wParam1 = client.Player.X,
                                wParam2 = client.Player.Y
                            };
                            client.Send(stream.ActionCreate(&action));
                            break;
                        }
                }
            }
        }

        [NpcAttribute(NpcID.OflineTGNpc)]
        public static void OflineTGNpc(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {

                case 0:
                    {
                        if (client.Player.Level == 140)
                        {
                            client.Send(stream.OfflineTGStatsCreate(0, 0, client.Player.Level, 0));
                            break;
                        }
                        var T1 = new TimeSpan(DateTime.Now.Ticks);
                        var T2 = new TimeSpan(client.Player.JoinOnflineTG.Ticks);
                        ushort minutes = (ushort)(T1.TotalMinutes - T2.TotalMinutes);
                        minutes = (ushort)Math.Min((ushort)900, minutes);

                        ushort nextlevel = 0;
                        ulong nextExperience = client.CalcExpBall(minutes, out nextlevel) * 10;

                        var LevelDBExp = Database.Server.LevelInfo[Database.DBLevExp.Sort.User][(byte)client.Player.Level];

                        decimal give_exp = (decimal)((decimal)nextExperience / (decimal)LevelDBExp.Experience);

                        string exp = give_exp.ToString().Replace(".", "");

                        string aaexpp = "";
                        for (int x = 0; x < exp.Length; x++)
                        {
                            if (x == 8)
                                break;
                            aaexpp += exp[x];

                        }
                        client.Send(stream.OfflineTGStatsCreate(minutes, (ushort)(900 - minutes), nextlevel, (long)(int.Parse(aaexpp))));

                        break;
                    }

            }
        }

        [NpcAttribute(NpcID.Stanley)]
        public static void Stanley(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        data.AddText("Hello, just let me know if you would like to go to TwinCity.")
                   .AddOption("Twin~City!", 2)
                   .AddOption("Let~me~think..", 255)
                   .AddAvatar(63).FinalizeDialog();


                        break;
                    }
                case 2:
                    {
                        data.AddText("Sure you want to leave in TwinCity?")
                            .AddOption("Yes.", 3)
                            .AddOption("Let~me~think...", 255)
                            .AddAvatar(63).FinalizeDialog();

                        break;
                    }
                case 3:
                    {
                        client.Teleport(428, 378, 1002);
                        break;
                    }
            }
        }
        [NpcAttribute(NpcID.MrFree)]
        public static void MrFree(Client.GameClient client, ServerSockets.Packet stream, byte Option, string Input, uint id)
        {
            Dialog data = new Dialog(client, stream);
            switch (Option)
            {
                case 0:
                    {
                        if (client.Inventory.Contain(723087, 1))
                        {
                            client.Player.OnRemoveLukyAmulet = true;
                            data.AddText("I~love~living~a~seclusive~life.~Don`t~bother~me!");
                            data.AddOption("I~heard~that~you~need~LuckyAmulets.", 1);
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("I~love~living~a~seclusive~life.~Don`t~bother~me!");
                            data.AddOption("I`ll~leave~now.");
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 1:
                    {
                        data.AddText("Yes.~My~only~hobby~is~to~collect~LuckyAmulets.");
                        data.AddOption("I~happen~to~have~one.", 2);
                        data.AddOption("I`d~better~keep~it.");
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 2:
                    {
                        data.AddText("Great!~If~you~present~LuckyAmulet~to~me,~I`ll~make~a~unique~hairstyle~for~you.");
                        data.AddOption("Thank~you.", 3);
                        data.AddOption("I`d~better~keep~it.");
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 3:
                    {
                        if (client.Player.IsBoy())
                        {
                            data.AddText("Thank~you~very~much.~Which~hairstyle~would~you~like~to~select~from?");
                            data.AddOption("Dignified~one.", 4);
                            data.AddOption("Unruly~one.", 5);
                            data.AddOption("Staid~one.", 6);
                            data.AddOption("Cool~one.", 7);
                            data.AddOption("Handsome~one.", 8);
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        else
                        {
                            data.AddText("Thank~you~very~much.~Which~hairstyle~would~you~like~to~select~from?");
                            data.AddOption("Lovely~one.", 4);
                            data.AddOption("Comely~one.", 5);
                            data.AddOption("Pretty~one.", 6);
                            data.AddOption("Elegant~one.", 7);
                            data.AddOption("Nifty~one.", 8);
                            data.AddAvatar(74);
                            data.FinalizeDialog();
                        }
                        break;
                    }
                case 4:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 21);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Looks great!~Thank~you!");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 5:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 22);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Looks great!~Thank~you!");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 6:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 23);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Looks great!~Thank~you!");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 7:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 24);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Looks great!~Thank~you!");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
                case 8:
                    {
                        if (client.Player.OnRemoveLukyAmulet == true)
                        {
                            client.Inventory.Remove(723087, 1, stream);
                            client.Player.OnRemoveLukyAmulet = false;
                        }
                        client.Player.Hair = (ushort)((client.Player.Hair - (client.Player.Hair % 100)) + 25);
                        client.Player.SendUpdate(stream, client.Player.Hair, MsgServer.MsgUpdate.DataType.HairStyle);
                        data.AddText("Are~you~satisfied~with~your~new~hairsyle?");
                        data.AddOption("Looks great!~Thank~you!");
                        data.AddOption("I`d~like~to~try~another~one.", 3);
                        data.AddAvatar(74);
                        data.FinalizeDialog();
                        break;
                    }
            }
        }


    }
}